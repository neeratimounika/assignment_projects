(window.webpackJsonp=window.webpackJsonp||[]).push([[0],{"+Y8w":function(n,t,e){"use strict";e.r(t),t.default=""},"1I0h":function(n,t,e){"use strict";e.r(t),t.default='\x3c!-- <ion-header>\n    <ion-toolbar>\n        <ion-button slot="start" (click)="dismiss()" size="small" color="primary" fill="clear" shape="round">\n            <ion-icon name="arrow-back"></ion-icon>\n        </ion-button>\n        <ion-title>Verify Email Address</ion-title>\n    </ion-toolbar>\n</ion-header> --\x3e\n\n<ion-content class="ion-padding">\n    <ion-grid>\n        <ion-toolbar>\n            <ion-title color="tertiary">\n                <h3><strong> Verify your Email address for communication </strong>\n                </h3>\n            </ion-title>\n            <ion-buttons slot="start">\n                <ion-button (click)="dismiss()" color="dark" fill="clear" shape="round" size="small">\n                    <ion-icon ios="arrow-back" md="arrow-back"></ion-icon>\n                </ion-button>\n            </ion-buttons>\n        </ion-toolbar>\n    </ion-grid>\n    <form [formGroup]="verifyEmailForm" (ngSubmit)="submitForm()" novalidate>\n    <ion-grid>\n            <ion-row *ngIf="profile.email">\n                <ion-col size-md="4" size="12">\n                    <ion-item lines="none">\n                        <ion-label>Current Email</ion-label>\n                    </ion-item>\n                </ion-col>\n                <ion-col size-md="8" size="12">\n                    <ion-item lines="full">\n                        <ion-label color="medium">{{profile.email}}</ion-label>\n                    </ion-item>\n                </ion-col>\n            </ion-row>\n            <ion-row *ngIf="otp">\n                    <ion-col size-md="4" size="12">\n                        <ion-item lines="none">\n                            <ion-label>OTP</ion-label>\n                        </ion-item>\n                    </ion-col>\n                    <ion-col size-md="8" size="12">\n                        <ion-item lines="full">\n                            <ion-input (keypress)="ajax.numberOnlyValidation($event)" maxlength="6" minlength="6" formControlName="otp" type="{{otpShow?\'text\':\'password\'}}" required #otp></ion-input>\n                            <ion-icon class="cursor" *ngIf="!errorControl.otp.pristine" (click)="changeType(\'otp\')" color="{{otpShow?\'primary\':\'dark\'}}" name="{{otpShow?\'eye\':\'eye-off\'}}" slot="end"></ion-icon>\n                        </ion-item>\n                        <ion-text color="danger" *ngIf="otp && isSubmitted && errorControl.otp.errors?.required ">\n                            OTP is required.\n                        </ion-text>\n                        <ion-text color="danger" *ngIf="otp && isSubmitted && errorControl.otp.errors?.pattern">\n                            Only numerical values allowed.\n                        </ion-text>\n                        <ion-text color="danger" *ngIf="otp && isSubmitted && (errorControl.otp.errors?.maxlength || errorControl.otp.errors?.minlength)">\n                            OTP must be of 6 digit.\n                        </ion-text>\n                        <br />\n\n                        <ion-text *ngIf="otp">\n                            {{(maxTime>0)?\'Wait for the OTP, if not received try resend otp after  \'+maxTime+\' second\':\'\'}}\n                            <ion-text *ngIf="maxTime==0" (click)="resendOtp()" type="submit" fill="clear" size="small" class="cursor" color="primary">Resend OTP</ion-text>\n                        </ion-text>\n                    </ion-col>\n                </ion-row>\n                \n            <ion-row *ngIf="!otp">\n                <ion-col>\n                    <ion-list>\n                        <ion-item lines="none">\n                            <ion-text> I provide my consent to DigiLocker.</ion-text>\n                            <ion-checkbox slot="start" [attr.disabled]="otp" [checked]="false" formControlName="consent" (ionChange)="onTermsChecked()" required></ion-checkbox>\n                        </ion-item>\n                    </ion-list>\n                    <ion-label color="danger" *ngIf="isSubmitted && errorControl.consent.errors?.required">\n                        Consent is required.\n                    </ion-label>\n                </ion-col>\n            </ion-row>\n            <ion-row>\n                <ion-col>\n                    <ion-button type="submit" color="primary" class="ion-float-right">Submit</ion-button>\n                </ion-col>\n            </ion-row>\n            <ion-item lines="none" class="no-padding-start">\n                <ion-badge color="{{(respMsg.status==\'success\')?\'success\':\'danger\'}}" *ngIf="respMsg" class="ion-padding">\n                    {{(respMsg.status==\'success\')?respMsg.msg:respMsg.error_description}}\n                </ion-badge>\n            </ion-item>\n    </ion-grid>\n    </form>\n\n</ion-content>\n'},"3AmV":function(n,t,e){"use strict";e.r(t),t.default='\x3c!-- <ion-header>\n  <ion-toolbar>\n    <ion-title>abha-fetch</ion-title>\n  </ion-toolbar>\n</ion-header> --\x3e\n\n<ion-content class="ion-padding">\n\n\n    <ion-row>\n        <ion-col>\n          <ion-button (click)="dismiss()" color="dark" fill="clear" shape="round" size="small" class="closebtntxt">\n            <ion-icon name="close-circle-outline"></ion-icon>\n        </ion-button>\n        <div style="position: relative;" *ngIf="deviceSize">\n            <img [src]="defaultImage" alt="Your Image" style="width: 100%; height: auto;">\n            <div style="position: absolute; top: 75%; left: 45%; width: 45%; height: 10%;"  class="cursor" (click)="dismiss(true)">\n              \x3c!-- Add your desired content or styling here --\x3e\n            </div>\n          </div>\n          <div style="position: relative;" *ngIf="!deviceSize">\n            <img [src]="defaultImage" alt="Your Image" style="width: 100%; height: auto;">\n            <div style="position: absolute; top: 82%; left: 30%; width: 40%; height: 10%;" class="cursor" (click)="dismiss(true)">\n              \x3c!-- Add your desired content or styling here --\x3e\n            </div>\n          </div>\n        </ion-col>\n    </ion-row>\n\n</ion-content>\n'},"47+K":function(n,t,e){"use strict";e.r(t),t.default='\x3c!-- <ion-header>\n  <ion-toolbar>\n    <ion-title>issued-docs-graph</ion-title>\n  </ion-toolbar>\n</ion-header> --\x3e\n\n<ion-content>\n    <ion-button (click)="dismiss()" fill="clear" color="dark" shape="round" size="large" class="closeGraphBtn">\n        <ion-icon name="close-circle-outline"></ion-icon>\n    </ion-button>\n    <ion-card mode="ios" class="ion-no-margin" style="height: 100%;">\n        <ion-card-header>\n            <ion-card-title><small><b> {{"Year Wise Issued Documents Data" | translate}} </b></small>\n                <ion-text class="ion-float-end" *ngIf="issuerDocTrendTotal">\n                    \x3c!--b>Total: {{issuerDocTrendTotal}} Cr </b--\x3e\n                </ion-text>\n            </ion-card-title>\n        </ion-card-header>\n        <ion-card-content>\n            <div id="issuerdoctrendsssr"></div>\n        </ion-card-content>\n    </ion-card>\n</ion-content>'},"5gva":function(n,t,e){"use strict";e.r(t),t.default=""},"5kFZ":function(n,t,e){"use strict";e.r(t),t.default=""},"74mu":function(n,t,e){"use strict";e.d(t,"a",(function(){return i})),e.d(t,"b",(function(){return r})),e.d(t,"c",(function(){return o})),e.d(t,"d",(function(){return a}));const o=(n,t)=>null!==t.closest(n),i=(n,t)=>"string"==typeof n&&n.length>0?Object.assign({"ion-color":!0,["ion-color-"+n]:!0},t):t,r=n=>{const t={};return(n=>{if(void 0!==n){return(Array.isArray(n)?n:n.split(" ")).filter(n=>null!=n).map(n=>n.trim()).filter(n=>""!==n)}return[]})(n).forEach(n=>t[n]=!0),t},s=/^[a-z][a-z0-9+\-.]*:/,a=async(n,t,e,o)=>{if(null!=n&&"#"!==n[0]&&!s.test(n)){const i=document.querySelector("ion-router");if(i)return null!=t&&t.preventDefault(),i.push(n,e,o)}return!1}},"85Y/":function(n,t,e){"use strict";e.r(t),t.default='\x3c!-- <ion-header>\n    <ion-toolbar>\n        <ion-button slot="start" (click)="dismiss()" size="small" color="primary" fill="clear" shape="round" shape="round">\n            <ion-icon name="arrow-back"></ion-icon>\n        </ion-button>\n        <ion-title>Reset PIN</ion-title>\n    </ion-toolbar>\n</ion-header> --\x3e\n\n<ion-content class="ion-padding">\n    <ion-grid>\n        <ion-toolbar>\n            <ion-title color="tertiary" *ngIf="deviceSize">\n                <strong> {{"PINHeader" | translate}} </strong>\n            </ion-title>\n            <ion-text color="tertiary" *ngIf="!deviceSize">\n                <strong> {{"PINHeader" | translate}} </strong>\n            </ion-text>\n            <ion-buttons slot="start">\n                <ion-button (click)="dismiss(\'false\')" color="dark" fill="clear" shape="round" size="small">\n                    <ion-icon ios="arrow-back" md="arrow-back"></ion-icon>\n                </ion-button>\n            </ion-buttons>\n        </ion-toolbar>\n\n        <form [formGroup]="updateForm" (ngSubmit)="submitForm()" novalidate>\n            <ion-row>\n                <ion-col size-md="3" size="12">\n                    <ion-item lines="none">\n                        <ion-label>{{"Current" | translate}} {{"PIN" | translate}}</ion-label>\n                    </ion-item>\n                </ion-col>\n                <ion-col size-md="9" size="12">\n                    <ion-item lines="full">\n                        <ion-input  autocomplete="off" (keypress)="ajax.numberOnlyValidation($event)" maxlength="6" minlength="6" formControlName="pin" type="{{pinShow?\'text\':\'password\'}}" required #pin></ion-input>\n                        <ion-icon class="cursor" *ngIf="!errorControl.pin.pristine" (click)="changeType(\'pin\')" color="{{pinShow?\'primary\':\'dark\'}}" name="{{pinShow?\'eye\':\'eye-off\'}}" slot="end"></ion-icon>\n                    </ion-item>\n                    <ion-label color="danger" *ngIf="isSubmitted && errorControl.pin.errors?.required">\n                        {{"Old" | translate}} {{"PIN" | translate}} {{"Req" | translate}}\n                    </ion-label>\n                    <ion-label color="danger" *ngIf="isSubmitted && errorControl.pin.errors?.pattern">\n                        {{"OnlyNumbers" | translate}}\n                    </ion-label>\n                    <ion-label color="danger" *ngIf="isSubmitted && (errorControl.pin.errors?.maxlength || errorControl.pin.errors?.minlength)">\n                        {{"PINLength" | translate}}\n                    </ion-label>\n\n                </ion-col>\n            </ion-row>\n\n            <ion-row>\n                <ion-col size-md="3" size="12">\n                    <ion-item lines="none">\n                        <ion-label>{{"New" | translate}} {{"PIN" | translate}}</ion-label>\n                    </ion-item>\n                </ion-col>\n                <ion-col size-md="9" size="12">\n                    <ion-item lines="full">\n                        <ion-input (keypress)="ajax.numberOnlyValidation($event)" maxlength="6" minlength="6" formControlName="cpin" type="{{cpinShow?\'text\':\'password\'}}" required></ion-input>\n                        <ion-icon class="cursor" *ngIf="!errorControl.cpin.pristine" (click)="changeType(\'cpin\')" color="{{cpinShow?\'primary\':\'dark\'}}" name="{{cpinShow?\'eye\':\'eye-off\'}}" slot="end"></ion-icon>\n                    </ion-item>\n                    <ion-label color="danger" *ngIf="isSubmitted && errorControl.cpin.errors?.required">\n                        {{"New" | translate}} {{"PIN" | translate}} {{"Req" | translate}}\n                    </ion-label>\n                    <ion-label color="danger" *ngIf="isSubmitted && errorControl.cpin.errors?.pattern">\n                        {{"OnlyNumbers" | translate}}\n                    </ion-label>\n                    <ion-label color="danger" *ngIf="errorControl.cpin.errors?.confirmedValidator">\n                        {{"PINSame" | translate}}\n                    </ion-label>\n                    <ion-label color="danger" *ngIf="isSubmitted && (errorControl.cpin.errors?.maxlength || errorControl.cpin.errors?.miinlength)">\n                        {{"PINLength" | translate}}\n                    </ion-label>\n                </ion-col>\n            </ion-row>\n\n\n            <ion-row class="mt-4">\n                <ion-col>\n                    <ion-button class="ion-float-right" type="submit" color="primary">{{"Set" | translate}} {{"PIN" | translate}}</ion-button>\n                </ion-col>\n            </ion-row>\n\n            <ion-label color="{{(respMsg.status==\'success\')?\'primary\':\'danger\'}}" *ngIf="respMsg">\n                {{(respMsg.status==\'success\')?respMsg.msg:respMsg.error_description}}\n            </ion-label>\n\n        </form>\n\n    </ion-grid>\n</ion-content>'},"8NWj":function(n,t,e){"use strict";e.r(t),t.default='\x3c!-- <ion-header>\n    <ion-toolbar>\n        <ion-buttons slot="start">\n            <ion-menu-button></ion-menu-button>\n        </ion-buttons>\n        <ion-title></ion-title>\n    </ion-toolbar>\n</ion-header> --\x3e\n<ion-content class="ion-padding">\n\n    <ion-grid [fixed]="true">\n        <div class="pageMargin"></div>\n        <ion-toolbar>\n            <ion-title color="tertiary">\n                <strong>{{(verifiedUserTypes?\'Update Aadhaar\':\'Aadhaar Card\') | translate}} </strong></ion-title>\n            <ion-buttons slot="start">\n                <ion-button (click)="dismiss()" color="dark" fill="clear" shape="round" size="small">\n                    <ion-icon ios="arrow-back" md="arrow-back"></ion-icon>\n                </ion-button>\n            </ion-buttons>\n        </ion-toolbar>\n\n        <ion-row>\n            <ion-col size-md="7">\n                <ion-card class="ion-padding ion-no-margin" mode="ios">\n                    <ion-row>\n                        <ion-col class="ion-padding">\n                            <ion-text color="tertiary" class="ion-no-margin ion-padding-start">\n                                <h3><strong>{{(verifiedUserTypes?\'To Update Aadhaar please give your consent\':\'Get your Aadhaar by entering the required details\') | translate}}</strong>\n                                </h3>\n                            </ion-text>\n                        </ion-col>\n                    </ion-row>\n                    <form [formGroup]="updateForm" (ngSubmit)="submitForm()" novalidate>\n                        <ion-row *ngIf="!this.verifiedUserTypes">\n                            <ion-col size-md="3" size="12">\n                                <ion-item lines="none">\n                                    <ion-label color="dark">{{\'Aadhaar\' | translate}}</ion-label>\n                                </ion-item>\n                            </ion-col>\n                            <ion-col size-md="9" size="12">\n                                <ion-item lines="full" mode="md">\n                                    <ion-input [attr.disabled]="otp" (keypress)="ajax.numberOnlyValidation($event)" maxlength="12" placeholder="" minlength="12" formControlName="aadhar" type="text" required #aadhar></ion-input>\n\n                                </ion-item>\n                                <small>Ex - 123456789012</small><br />\n                                <ion-text color="danger" *ngIf="isSubmitted && errorControl.aadhar.errors?.required">\n                                    {{\'Aadhaar number is required\' | translate}}\n                                </ion-text>\n                                <ion-text color="danger" *ngIf="isSubmitted && errorControl.aadhar.errors?.pattern">\n                                    {{\'Only numerical values allowed.\' | translate}}\n                                </ion-text>\n                                <ion-text color="danger" *ngIf="isSubmitted && (errorControl.aadhar.errors?.maxlength || errorControl.aadhar.errors?.minlength)">\n                                    {{\'Must be of 12 digit\' | translate}}\n                                </ion-text>\n                            </ion-col>\n                        </ion-row>\n\n                        <div *ngIf="otp && respMsg">\n                            <ion-row>\n                                \x3c!-- <ion-col size-md="3" size="12">\n                                    <ion-item lines="none">\n                                        <ion-label></ion-label>\n\n                                    </ion-item>\n                                </ion-col> --\x3e\n                                <ion-col size-md="12" size="12">\n                                    <ion-item lines="none" class="no-padding-start">\n                                        <ion-badge color="{{(respMsg.status==\'success\')?\'success\':\'warning\'}}" class="ion-padding ion-text-wrap" mode="ios">\n                                            {{(respMsg.msg!=undefined)?respMsg.msg:respMsg.error_description}}\n                                        </ion-badge>\n                                    </ion-item>\n                                </ion-col>\n                            </ion-row>\n                        </div>\n\n                        <ion-row *ngIf="otp">\n                            <ion-col size-md="3" size="12" *ngIf="otpBoxShow">\n                                <ion-item lines="none">\n                                    <ion-label color="dark">{{\'OTP\' | translate}}</ion-label>\n\n                                </ion-item>\n                            </ion-col>\n                            <ion-col size-md="9" size="12" *ngIf="otpBoxShow">\n                                <ion-item lines="full" mode="md">\n                                    <ion-input (keypress)="ajax.numberOnlyValidation($event)" maxlength="6" minlength="6" [(ngModel)]="otpInput" formControlName="otp" type="{{otpShow?\'text\':\'password\'}}" required #otp></ion-input>\n                                    <ion-icon class="cursor" *ngIf="!errorControl.otp.pristine" (click)="changeType(\'otp\')" color="{{otpShow?\'primary\':\'dark\'}}" name="{{otpShow?\'eye\':\'eye-off\'}}" slot="end"></ion-icon>\n                                </ion-item>\n                                <ion-text color="danger" *ngIf="otp && isSubmitted && errorControl.otp.errors?.required">\n                                    {{\'OTP is required.\' | translate}}\n                                </ion-text>\n                                <ion-text color="danger" *ngIf="otp && isSubmitted && errorControl.otp.errors?.pattern">\n                                    {{\'Only numerical values allowed.\' | translate}}\n                                </ion-text>\n                                <ion-text color="danger" *ngIf="otp && isSubmitted && (errorControl.otp.errors?.maxlength || errorControl.consent.errors?.minlength)">\n                                    {{\'OTP must be of 6 digit.\' | translate}}\n                                </ion-text>\n                            </ion-col>\n                        </ion-row>\n                        <ion-row *ngIf="otp">\n                            <ion-col size-md="3" size="12">\n\n                            </ion-col>\n                            <ion-col size-md="9" size="12" [class]="(otpBoxShow)?\'\':\'ion-text-center\'">\n                                <ion-text color="{{maxTime?\'dark\':\'primary\'}}">\n                                    \x3c!-- {{(maxTime>0)?\'Try resend otp after \'+maxTime+\' second\':\'\'}} --\x3e\n                                    {{maxTime>0?(\'otpTimer\'| translate) + maxTime + (\'seconds\' | translate):\'\'}}\n                                </ion-text>\n                                <ion-text *ngIf="!maxTime && otp" (click)="resendOtp()" type="submit" fill="clear" size="small" class="cursor" color="primary">{{\'Resend OTP\' | translate}}</ion-text>\n                            </ion-col>\n                        </ion-row>\n\n                        <ion-row *ngIf="!otp">\n                            <ion-col>\n                                <ion-list mode="md">\n                                    <ion-item lines="none">\n                                        <ion-text> {{\'I give my consent to DigiLocker to use my Aadhaar number & OTP to fetch my e-KYC details from UIDAI for availing services through it.\' | translate}}</ion-text>\n                                        <ion-checkbox slot="start" [checked]="otp" [attr.disabled]="otp" mode="ios" (ionChange)="onTermsChecked()" formControlName="consent" required></ion-checkbox>\n\n                                    </ion-item>\n                                </ion-list>\n                                <ion-text class="ion-padding-start" color="danger" *ngIf="isSubmitted && errorControl.consent.errors?.required">\n                                    {{"ConsentError" | translate}}\n                                </ion-text>\n                            </ion-col>\n                        </ion-row>\n                        <ion-row *ngIf="otpBoxShow">\n                            <ion-col>\n                                <ion-button type="submit" color="primary" class="ion-float-right">{{"Update" | translate}} </ion-button>\n                            </ion-col>\n                        </ion-row>\n\n                    </form>\n                </ion-card>\n            </ion-col>\n        </ion-row>\n    </ion-grid>\n\n</ion-content>'},"9DET":function(n,t,e){"use strict";e.r(t),t.default='\x3c!-- <ion-header>\n    <ion-toolbar>\n        <ion-button slot="start" (click)="dismiss()" size="small" color="primary" fill="clear" shape="round">\n            <ion-icon name="arrow-back"></ion-icon>\n        </ion-button>\n        <ion-title>Update Mobile Number</ion-title>\n    </ion-toolbar>\n</ion-header> --\x3e\n\n<ion-content class="ion-padding">\n    <ion-grid>\n        <ion-toolbar>\n            <ion-title color="tertiary" *ngIf="deviceSize">\n                <strong> {{(profile.mobile?\'Update your mobile number for communication\':\'Add your mobile number for communication\')  | translate}} </strong>\n            </ion-title>\n            <ion-text color="tertiary" *ngIf="!deviceSize">\n                <strong>{{(profile.mobile?\'Update your mobile number for communication\':\'Add your mobile number for communication\')  | translate}} </strong>\n            </ion-text>\n            <ion-buttons slot="start">\n                <ion-button (click)="dismiss()" color="dark" fill="clear" shape="round" size="small">\n                    <ion-icon ios="arrow-back" md="arrow-back"></ion-icon>\n                </ion-button>\n            </ion-buttons>\n        </ion-toolbar>\n\n\n        <ion-row *ngIf="profile" mode="ios">\n            <ion-col class="ion-no-padding">\n                <ion-row *ngIf="profile.mobile">\n                    <ion-col size-md="4" size="12" class="ion-no-padding" *ngIf="deviceSize">\n                        <ion-item lines="none">\n                            <ion-label>{{"Current" | translate}} {{"Mobile" | translate}}</ion-label>\n                        </ion-item>\n                    </ion-col>\n                    <ion-col size-md="8" size="12" class="ion-no-padding">\n\n                        <ion-item lines="none">\n\n                            <ion-label color="medium"> <span *ngIf="!deviceSize">{{"Current" | translate}} {{"Mobile" | translate}} <br></span> {{profile.mobile}}\n                            </ion-label>\n\n                        </ion-item>\n                    </ion-col>\n                </ion-row>\n\n                <form [formGroup]="updateForm" (ngSubmit)="submitForm()" novalidate>\n                    <ion-row>\n                        <ion-col size-md="4" size="12" *ngIf="deviceSize">\n                            <ion-item lines="none">\n                                <ion-label>{{(profile.mobile?\'New\':\'\') | translate}} {{"Mobile" | translate}}</ion-label>\n                            </ion-item>\n                        </ion-col>\n                        <ion-col size-md="8" size="12">\n                            <ion-item lines="full" mode="md">\n                                <ion-label position="floating" *ngIf="!deviceSize">{{(profile.mobile?\'New\':\'\') | translate}} {{"Mobile" | translate}}</ion-label>\n                                <ion-input (keypress)="ajax.numberOnlyValidation($event)" [disabled]="otp" pattern="^[6789]\\d{9}$" maxlength="10" minlength="10" formControlName="mobile" type="text" required #mobile></ion-input>\n                            </ion-item>\n                            \n                                <ion-text color="danger" class="ion-margin" *ngIf="isSubmitted && errorControl.mobile.errors?.required">\n                                    {{"Mobile" | translate}} {{"Req" | translate}}\n                                </ion-text><br *ngIf="errorControl.mobile.errors?.pattern">\n                            \n                            \n                                <ion-text color="danger"  *ngIf="isSubmitted && errorControl.mobile.errors?.pattern">\n                                    {{"ValMobile" | translate}}\n                                </ion-text><br *ngIf="errorControl.mobile.errors?.minlength">\n                            \n                            \n                                <ion-text color="danger" *ngIf="isSubmitted &&  errorControl.mobile.errors?.minlength" >\n                                    {{"MobileLength" | translate}}\n                                </ion-text><br *ngIf="errorControl.mobile.errors?.notequalto">\n                            \n                            \n                                <ion-text color="danger" *ngIf="errorControl.mobile.errors?.notequalto">\n                                    {{"Current and new mobile is same." | translate}}\n                                </ion-text>\n                            \n                            \n                        </ion-col>\n                    </ion-row>\n\n                    <ion-row *ngIf="otp">\n                        <ion-col size-md="4" size="12">\n                            <ion-item lines="none">\n                                <ion-label></ion-label>\n                            </ion-item>\n                        </ion-col>\n                        <ion-col size-md="8" size="12">\n                            <ion-item lines="none" class="ion-no-padding-start">\n                                <ion-badge color="{{(respMsg.status==\'success\')?\'success\':\'danger\'}}" *ngIf="respMsg" class="ion-padding ion-text-wrap ion-no-margin-start">\n                                    {{((respMsg.status==\'success\')?respMsg.msg:respMsg.error_description) | translate}}\n                                </ion-badge>\n                            </ion-item>\n                        </ion-col>\n                    </ion-row>\n\n                    <ion-row *ngIf="otp">\n                        <ion-col size-md="4" size="12">\n                            <ion-item lines="none">\n                                <ion-label>{{\'OTP\' | translate}}</ion-label>\n                            </ion-item>\n                        </ion-col>\n                        <ion-col size-md="8" size="12">\n                            <ion-item lines="full" mode="ios">\n                                <ion-input (keypress)="ajax.numberOnlyValidation($event)" maxlength="6" minlength="6" [(ngModel)]="otpInput" formControlName="otp" type="{{otpShow?\'text\':\'password\'}}" required #otp></ion-input>\n                                <ion-icon class="cursor" *ngIf="!errorControl.otp.pristine" (click)="changeType(\'otp\')" color="{{otpShow?\'primary\':\'dark\'}}" name="{{otpShow?\'eye\':\'eye-off\'}}" slot="end"></ion-icon>\n                            </ion-item>\n                            <ion-text color="danger" *ngIf="otp && isSubmitted && errorControl.otp.errors?.required">\n                                {{\'OTP is required.\' | translate}}\n                            </ion-text>\n                            <ion-text color="danger" *ngIf="otp && isSubmitted && errorControl.otp.errors?.pattern">\n                                {{\'Only numerical values allowed.\' | translate}}\n                            </ion-text>\n                            <ion-text color="danger" *ngIf="otp && isSubmitted && errorControl.otp.errors?.minlength">\n                                {{\'OTP must be of 6 digit.\' | translate}}\n                            </ion-text>\n                            <br />\n\n                            <ion-text *ngIf="otp" color="{{maxTime?\'dark\':\'primary\'}}">\n                                \x3c!-- {{(maxTime>0)?\'Wait for the OTP, if not received try resend otp after \'+maxTime+\' seconds\':\'\'}} --\x3e\n                                {{maxTime>0?(\'otpTimer\'| translate) + maxTime + (\'seconds\' | translate):\'\'}}\n\n                            </ion-text>\n                            <ion-text *ngIf="!maxTime && otp" (click)="resendOtp()" type="submit" fill="clear" size="small" class="cursor" color="primary">{{\'Resend OTP\' | translate}}</ion-text>\n                        </ion-col>\n                    </ion-row>\n\n\n                    <ion-row>\n                        <ion-col>\n                            <ion-label class="ion-text-right">\n                                <ion-button class="ion-float-right" type="submit" color="primary" expand="block">{{"Submit" | translate}}</ion-button>\n                            </ion-label>\n                        </ion-col>\n                    </ion-row>\n                    <ion-row>\n                        <ion-col>\n\n                        </ion-col>\n                    </ion-row>\n                </form>\n            </ion-col>\n        </ion-row>\n    </ion-grid>\n\n</ion-content>'},CapT:function(n,t,e){"use strict";e.d(t,"a",(function(){return s}));var o=e("mrSG"),i=e("fXoL"),r=e("TEn/");let s=class{constructor(n){this.modalController=n}ngOnInit(){}dismiss(){this.modalController.dismiss({dismissed:!0})}};s.ctorParameters=()=>[{type:r.h}],s=Object(o.c)([Object(i.n)({selector:"app-view-nominee",template:Object(o.e)(e("DueQ")).default,styles:[Object(o.e)(e("m/4U")).default]})],s)},Cown:function(n,t,e){"use strict";e.d(t,"a",(function(){return u}));var o=e("mrSG"),i=e("fXoL"),r=e("6n/F"),s=e("RSNc"),a=e.n(s),l=e("sYmb"),d=e("sRcL"),c=e("AytR"),m=e("TEn/");a()(r);let u=class{constructor(n,t,e){this._translate=n,this.ajax=t,this.modalController=e,this.issuerDocTrendYears=null,this.issuerDocTrendTotal=null,this.getAllStatistic=null}ngOnInit(){}ionViewDidEnter(){this.getAllStatisticDetails()}getAllStatisticDetails(){this.ajax.getMethod(c.a.stats_get_all_statistic).subscribe(n=>{null!=n[0]&&n[0].issue_document&&(this.getAllStatistic=n[0],this.issuerdoc_chartline())})}issuerDocTrendChart(n,t){r.chart("issuerdoctrendsssr",{chart:{type:"line"},title:{text:this.issuerDocTrendYears},xAxis:{categories:t},yAxis:{title:{text:"Billion"}},series:[{name:this._translate.instant("Issued Documents"),type:"line",data:n}],legend:{enabled:!1},exporting:{enabled:!1},credits:{enabled:!1}})}issuerdoc_chartline(){let n=this.getAllStatistic.issue_document;n=this.changeNumberToBillion(n);let t=[.0112,1.6623,2.412,3.1,3.75,4.75,5.59],e=[2016,2017,2018,2019,2020,2021,2022];var o=(new Date).getFullYear();n&&2023==o&&(t.push(parseFloat(n)),e.push(o)),this.issuerDocTrendYears=e[0]+" - "+e[e.length-1],this.issuerDocTrendTotal=t[t.length-1],this.issuerDocTrendChart(t,e)}changeNumberToBillion(n){return isNaN(n)?0:n>=1e7?(n/1e9).toFixed(2).replace(/\.0$/,""):void 0}dismiss(n=!1){this.modalController.dismiss({dismissed:n})}};u.ctorParameters=()=>[{type:l.c},{type:d.a},{type:m.h}],u=Object(o.c)([Object(i.n)({selector:"app-issued-docs-graph",template:Object(o.e)(e("47+K")).default,styles:[Object(o.e)(e("+Y8w")).default]})],u)},DMre:function(n,t,e){"use strict";e.d(t,"a",(function(){return m}));var o=e("mrSG"),i=e("fXoL"),r=e("TEn/"),s=e("3Pt+"),a=e("AytR"),l=e("sRcL"),d=e("sYmb"),c=e("VBEu");let m=class{constructor(n,t,e,o,i,r){this.modalController=n,this.formBuilder=t,this.ajax=e,this.navparam=o,this.encrypt=i,this._translate=r,this.profile=this.navparam.get("profile"),this.isSubmitted=!1,this.respMsg=null,this.otp=!1,this.otpShow=!1,this.maxTime=120}ngOnInit(){this.verifyEmailForm=this.formBuilder.group({consent:[null,s.f.required],otp:[null,[]]})}ngAfterViewChecked(){this.otp&&this.otpElement.setFocus()}get errorControl(){return this.verifyEmailForm.controls}onTermsChecked(){this.verifyEmailForm.value.consent||this.verifyEmailForm.patchValue({consent:null})}changeType(n){this.otpShow=!this.otpShow}submitForm(){if(this.isSubmitted=!0,this.respMsg=null,!this.verifyEmailForm.valid)return!1;{this.verifyEmailForm.value.consent;this.respMsg=null,this.ajax.showLoader();let n=this.verifyEmailForm.get("otp").value?a.a.emailupdate_verify_otp:a.a.emailupdate_send_otp,t=this.verifyEmailForm.get("otp").value?encodeURI("email="+this.profile.email+"&otp="+this.encrypt.getEncryptedValue(this.verifyEmailForm.get("otp").value)):encodeURI("email="+this.profile.email);this.ajax.postMethod(n,t,{}).subscribe(n=>{this.ajax.hideLoader(),this.isSubmitted=!1,this.respMsg=n,"success"==n.status&&(this.respMsg.msg="OTP sent to your e-mail",this.otp=!0,this.verifyEmailForm.get("otp").value?(this.ajax.showToast(this._translate.instant("Email verified successfully."),5e3,"success","bottom"),this.dismiss(!0)):(this.otp=this.verifyEmailForm.value.consent,this.StartTimer(),this.verifyEmailForm=this.formBuilder.group({consent:[this.verifyEmailForm.value.consent,s.f.required],otp:[null,[s.f.required,s.f.pattern("^[0-9]+$"),s.f.maxLength(6),s.f.minLength(6)]]})))})}}resendOtp(){if(this.respMsg=null,this.verifyEmailForm.value.otp="",!this.profile.email)return!1;{this.ajax.showLoader();let n=a.a.emailupdate_send_otp,t=encodeURI("email="+this.profile.email);this.ajax.postMethod(n,t,{}).subscribe(n=>{this.ajax.hideLoader(),this.respMsg=n,"success"==n.status&&(this.maxTime=120,this.StartTimer(),this.respMsg.msg=this._translate.instant("OTP re-sent to your e-mail ."))})}}StartTimer(){setTimeout(n=>{this.maxTime>0&&(this.StartTimer(),this.maxTime=this.maxTime-1)},1e3)}dismiss(n=!1){this.modalController.dismiss({dismissed:n})}};m.ctorParameters=()=>[{type:r.h},{type:s.a},{type:l.a},{type:r.j},{type:c.a},{type:d.c}],Object(o.c)([Object(i.nb)("otp")],m.prototype,"otpElement",void 0),m=Object(o.c)([Object(i.n)({selector:"app-verify-email",template:Object(o.e)(e("1I0h")).default,styles:[Object(o.e)(e("vEKE")).default]})],m)},DueQ:function(n,t,e){"use strict";e.r(t),t.default='\x3c!-- <ion-header>\n  <ion-toolbar>\n    <ion-button slot="start" (click)="dismiss()" size="small" color="primary" fill="clear" shape="round"><ion-icon name="arrow-back"></ion-icon></ion-button>\n    <ion-title>Nominee details</ion-title>\n  </ion-toolbar>\n</ion-header> --\x3e\n\n<ion-content class="ion-padding">\n    <ion-grid>\n        <ion-toolbar>\n            <ion-title color="tertiary">\n                <strong> {{\'Nominee Details\' | translate}} </strong>\n\n            </ion-title>\n            <ion-buttons slot="start">\n                <ion-button (click)="dismiss()" color="dark" fill="clear" shape="round" size="small">\n                    <ion-icon ios="arrow-back" md="arrow-back"></ion-icon>\n                </ion-button>\n            </ion-buttons>\n        </ion-toolbar>\n\n        <ion-row>\n            <ion-col>\n                <ion-item>\n                    <ion-col size="4">\n                        <ion-label>{{\'Name\' | translate}}</ion-label>\n                    </ion-col>\n                    <ion-col size="1">\n                        <ion-label>:</ion-label>\n                    </ion-col>\n                    <ion-col size="7">\n                        <ion-label *ngIf="nominee" class="ion-text-capitalize">{{nominee.name}}</ion-label>\n                        <ion-skeleton-text *ngIf="!nominee" animated style="width: 50%"></ion-skeleton-text>\n                    </ion-col>\n                </ion-item>\n                <ion-item>\n                    <ion-col size="4">\n                        <ion-label>{{\'DOB_Full\' | translate}}</ion-label>\n                    </ion-col>\n                    <ion-col size="1">\n                        <ion-label>:</ion-label>\n                    </ion-col>\n                    <ion-col size="7">\n                        <ion-label *ngIf="nominee">{{nominee.dob }}</ion-label>\n                        <ion-skeleton-text *ngIf="!nominee" animated style="width: 50%"></ion-skeleton-text>\n                    </ion-col>\n                </ion-item>\n                <ion-item>\n                    <ion-col size="4">\n                        <ion-label>{{\'Gender\' | translate}}</ion-label>\n                    </ion-col>\n                    <ion-col size="1">\n                        <ion-label>:</ion-label>\n                    </ion-col>\n                    <ion-col size="7">\n                        <ion-label *ngIf="nominee" class="ion-text-capitalize">{{(nominee.gender==\'M\')?\'Male\':(nominee.gender==\'F\')?\'Female\':\'Other\'}}</ion-label>\n                        <ion-skeleton-text *ngIf="!nominee" animated style="width: 50%"></ion-skeleton-text>\n                    </ion-col>\n                </ion-item>\n                <ion-item>\n                    <ion-col size="4">\n                        <ion-label>{{\'Relationship\' | translate}}</ion-label>\n                    </ion-col>\n                    <ion-col size="1">\n                        <ion-label>:</ion-label>\n                    </ion-col>\n                    <ion-col size="7">\n                        <ion-label *ngIf="nominee" class="ion-text-capitalize">{{nominee.relation}}</ion-label>\n                        <ion-skeleton-text *ngIf="!nominee" animated style="width: 50%"></ion-skeleton-text>\n                    </ion-col>\n                </ion-item>\n                <ion-item>\n                    <ion-col size="4">\n                        <ion-label>{{\'Mobile\' | translate}}</ion-label>\n                    </ion-col>\n                    <ion-col size="1">\n                        <ion-label>:</ion-label>\n                    </ion-col>\n                    <ion-col size="7">\n                        <ion-label *ngIf="nominee">{{nominee.mobileno}}</ion-label>\n                        <ion-skeleton-text *ngIf="!nominee" animated style="width: 50%"></ion-skeleton-text>\n                    </ion-col>\n                </ion-item>\n            </ion-col>\n        </ion-row>\n    </ion-grid>\n</ion-content>\n'},FfG1:function(n,t,e){"use strict";e.r(t),t.default=""},"KjQ/":function(n,t,e){"use strict";e.r(t),t.default='\x3c!-- <ion-header>\n    <ion-toolbar>\n        <ion-title>abha-loader</ion-title>\n    </ion-toolbar>\n</ion-header> --\x3e\n\n<ion-content>\n    <ion-grid class="ion-padding">\n        <ion-row class="ion-margin">\n            <ion-col class="ion-center" size="2">\n                <img src="assets/img/Grouploader.svg" />\n            </ion-col>\n            <ion-col  size="8">\n                <ion-row class="text-center ion-padding ion-no-padding-bottom">\n                    \x3c!-- <ion-progress-bar [value]="loadProgress"></ion-progress-bar> --\x3e\n                    <ion-progress-bar type="indeterminate"></ion-progress-bar>\n                    </ion-row>\n                    <div style="text-align: center;">\n                        <b>Getting data from ABHA</b>\n                        <h3>(Ministry of Health and Family Welfare)</h3>\n\n\n                    </div>\n                    \n            </ion-col>\n            <ion-col class="ion-center" size="2">\n                <img src="assets/img/abha-logo(1)loader.svg" />\n                \x3c!-- <div class="text-align1">\n                    ABHA\n                </div> --\x3e\n            </ion-col>\n\n        </ion-row>\n\n    </ion-grid>\n\n</ion-content>'},LI3N:function(n,t,e){"use strict";e.r(t),t.default=".image-rounded {\n  max-width: 130px;\n  max-height: 130px;\n  border-radius: 50%;\n}\n\n.btn {\n  position: fixed;\n  left: -10;\n  bottom: 10px;\n  right: 0;\n}\n\n.cropper {\n  border-radius: 50%;\n}"},QKxH:function(n,t,e){"use strict";e.d(t,"a",(function(){return d}));var o=e("mrSG"),i=e("fXoL"),r=e("sRcL"),s=e("TEn/"),a=e("AytR"),l=e("87cB");let d=class{constructor(n,t,e,o,i){this.ajax=n,this.modalCtrl=t,this.navCtrl=e,this.navparam=o,this._ngxPicaService=i,this.photoEvent=this.navparam.get("photoEvent"),this.imageChangedEvent="",this.imgEvent="",this.croppedImage=""}ngOnInit(){this.fileRead()}fileRead(){this.imageChangedEvent=this.photoEvent;var n=this.photoEvent.target.files,t=n[0];this.fileType=t.type;const e=n;this._ngxPicaService.resizeImages(e,360,360).subscribe(n=>{let t=new FileReader;t.addEventListener("load",n=>{this.croppedImage=n.target.result},!1),t.readAsDataURL(n)})}imageCropped(n){this.croppedImage=n}dismiss(n=!1){this.modalCtrl.dismiss({dismissed:n})}setProfilePhoto(){return Object(o.b)(this,void 0,void 0,(function*(){var n=this.DataURIToBlob(this.croppedImage),t="profilePhoto."+this.fileType.split("/")[1],e=new File([n],t);this.imageUpload(e)}))}imageUpload(n){let t=new FormData;t.append("body",n),this.ajax.showLoader(),this.ajax.uploadMethod(a.a.upload_image,t).subscribe(n=>{this.ajax.hideLoader(),"success"==n.status&&(this.ajax.showToast(n.message,5e3,"success"),this.dismiss(!0))})}DataURIToBlob(n){const t=n.split(","),e=t[0].indexOf("base64")>=0?atob(t[1]):decodeURI(t[1]),o=t[0].split(":")[1].split(";")[0],i=new Uint8Array(e.length);for(let r=0;r<e.length;r++)i[r]=e.charCodeAt(r);return new Blob([i],{type:o})}};d.ctorParameters=()=>[{type:r.a},{type:s.h},{type:s.i},{type:s.j},{type:l.b}],d=Object(o.c)([Object(i.n)({selector:"app-crop-img",template:Object(o.e)(e("YSmO")).default,styles:[Object(o.e)(e("LI3N")).default]})],d)},QTN7:function(n,t,e){"use strict";e.r(t),t.default="h3 {\n  margin-bottom: 0px;\n}"},RU3n:function(n,t,e){"use strict";e.r(t),t.default='<ion-content class="ion-padding">\n    <ion-toolbar>\n        <ion-title color="tertiary">\n            <strong>{{"UpdateProfile" | translate}}</strong></ion-title>\n        <ion-buttons slot="start">\n            <ion-button (click)="dismiss()" color="dark" fill="clear" shape="round" size="small">\n                <ion-icon ios="arrow-back" md="arrow-back"></ion-icon>\n            </ion-button>\n        </ion-buttons>\n    </ion-toolbar>\n\n    <ion-grid>\n        <ion-row>\n            <ion-col>\n                <form [formGroup]="updateProfileForm" (ngSubmit)="submitForm()" novalidate>\n                    <ion-row>\n                        <ion-col size-md="3" size="12">\n                            <ion-item lines="none">\n                                <ion-label>{{"Name" | translate}}</ion-label>\n                            </ion-item>\n                        </ion-col>\n                        <ion-col size-md="9" size="12">\n                            <ion-item lines="full">\n                                <ion-input (keypress)="ajax.nameValidation($event)" formControlName="name" minlength="2" type="text" required></ion-input>\n                            </ion-item>\n                            <ion-text color="danger" *ngIf="isSubmitted && errorControl.name.errors?.required">\n                                {{"Name" | translate}} {{"Req" | translate}}\n                            </ion-text>\n                            <ion-text color="danger" *ngIf="isSubmitted && errorControl.name.errors?.pattern">\n                                {{"NAME_Reg" | translate}}\n                            </ion-text>\n                        </ion-col>\n                    </ion-row>\n\n                    <ion-row>\n                        <ion-col size-md="3" size="12">\n                            <ion-item lines="none">\n                                <ion-label>{{"DOB_Full" | translate}}</ion-label>\n                            </ion-item>\n                        </ion-col>\n                        <ion-col size-md="9" size="12">\n                            <ion-item lines="full">\n                                <ion-input [min]="minDate" [max]="maxDate" displayFormat="DD MMMM YYYY" (ionChange)="getDate($event)" formControlName="dob" type="date" placeholder="" required></ion-input>\n                            </ion-item>\n                            <ion-text color="danger" *ngIf="isSubmitted && errorControl.dob.errors?.required">\n                                {{"DOB_Full" | translate}} {{"Req" | translate}}\n                            </ion-text>\n                            <ion-text color="danger" *ngIf="errorControl.dob.errors?.dobValidator">\n                                {{"DOB_Full" | translate}} {{"NotValid" | translate}}\n                            </ion-text>\n                        </ion-col>\n                    </ion-row>\n\n                    <ion-row>\n                        <ion-col size-md="3" size="12">\n                            <ion-item lines="none">\n                                <ion-label>{{"Gender" | translate}} </ion-label>\n                            </ion-item>\n                        </ion-col>\n                        <ion-col size-md="9" size="12">\n                            <ion-radio-group value="Gender" formControlName="gender" required>\n                                <ion-row>\n                                    <ion-col class="ion-no-padding-start ion-no-margin-start">\n                                        <ion-item lines="none">\n                                            <ion-label>{{"Male" | translate}}</ion-label>\n                                            <ion-radio slot="start" value="M"></ion-radio>\n                                        </ion-item>\n                                    </ion-col>\n                                    <ion-col>\n                                        <ion-item lines="none">\n                                            <ion-label>{{"Female" | translate}}</ion-label>\n                                            <ion-radio slot="start" value="F"></ion-radio>\n                                        </ion-item>\n                                    </ion-col>\n                                    <ion-col>\n                                        <ion-item lines="none">\n                                            <ion-label>{{"Other" | translate}}</ion-label>\n                                            <ion-radio slot="start" value="O"></ion-radio>\n                                        </ion-item>\n                                    </ion-col>\n                                </ion-row>\n                            </ion-radio-group>\n                            <ion-text color="danger" *ngIf="isSubmitted && errorControl.gender.errors?.required">\n                                {{"Gender" | translate}} {{"Req" | translate}}\n                            </ion-text>\n                        </ion-col>\n                    </ion-row>\n\n\n\n                    <ion-row>\n                        <ion-col class="ion-text-end">\n                            <ion-button type="submit" color="primary">{{"Update" | translate}}</ion-button>\n                        </ion-col>\n                    </ion-row>\n\n                </form>\n            </ion-col>\n        </ion-row>\n    </ion-grid>\n    <ion-grid>\n        <ion-row>\n            <ion-col>\n                <ion-label color="{{(respMsg.status==\'success\')?\'primary\':\'danger\'}}" *ngIf="respMsg">\n                    {{(respMsg.status==\'success\')?respMsg.msg:respMsg.error_description}}\n                </ion-label>\n            </ion-col>\n        </ion-row>\n    </ion-grid>\n</ion-content>'},SKIy:function(n,t,e){"use strict";e.r(t),t.default='\x3c!-- <ion-header>\n  <ion-toolbar>\n    <ion-title>view-graph</ion-title>\n  </ion-toolbar>\n</ion-header> --\x3e\n\n<ion-content>\n    <ion-button (click)="dismiss()" fill="clear" color="dark" shape="round" size="large" class="closeGraphBtn">\n        <ion-icon name="close-circle-outline"></ion-icon>\n    </ion-button>\n    <ion-card mode="ios" class="ion-no-margin" style="height: 100%;">\n        <ion-card-header>\n            <ion-card-title><small> <b>{{"Year Wise User Registration Data" | translate}} </b></small>\n                <ion-text class="ion-float-end" *ngIf="yearWiseRegUsersTotal">\n                    \x3c!--b>Total: {{yearWiseRegUsersTotal}} Cr </b--\x3e\n                </ion-text>\n            </ion-card-title>\n        </ion-card-header>\n        <ion-card-content>\n            <div id="yearwiseregusersssr"></div>\n        </ion-card-content>\n    </ion-card>\n</ion-content>'},TGoH:function(n,t,e){"use strict";e.r(t),t.default=".cursor {\n  cursor: pointer;\n}"},TQBt:function(n,t,e){"use strict";e.d(t,"a",(function(){return s}));var o=e("mrSG"),i=e("fXoL"),r=e("TEn/");let s=class{constructor(n,t,e,o){this.modalController=n,this.navCtrl=t,this.platform=e,this.navCtlr=o,this.deviceSize=this.platform.isLandscape()}ngOnInit(){this.defaultImage=this.deviceSize?"assets/img/After_Login_Abha.png":"assets/img/After_Login_Abha_mob.png"}dismiss(n=!1){this.modalController.dismiss({dismissed:n})}};s.ctorParameters=()=>[{type:r.h},{type:r.i},{type:r.k},{type:r.i}],s=Object(o.c)([Object(i.n)({selector:"app-abha-fetch",template:Object(o.e)(e("3AmV")).default,styles:[Object(o.e)(e("pG8S")).default]})],s)},Urq9:function(n,t,e){"use strict";e.r(t),t.default='<ion-header>\n        <ion-toolbar>\n            <ion-title color="tertiary">\n                <strong> {{file.Name}} </strong>\n\n            </ion-title>\n            <ion-buttons slot="start">\n                <ion-button (click)="dismiss()" color="dark" fill="clear" shape="round" size="small">\n                    <ion-icon ios="arrow-back" md="arrow-back"></ion-icon>\n                </ion-button>\n            </ion-buttons>\n        </ion-toolbar>\n</ion-header>\n\n<ion-content>\n  <ion-grid class="ion-text-center" *ngIf="file.Ext !== \'pdf\'">\n    <ion-row>\n      <ion-col >\n        <img  [src]="data" />\n      </ion-col>\n\n    </ion-row>\n  </ion-grid>\n  <embed  *ngIf="file.Ext == \'pdf\'" [src]="data" width="100%" height="98%" type="application/pdf" />\n  \x3c!-- <img src="" *ngIf=" docExt==png || docExt==jpg" />\n  <embed src="http://example.com/the.pdf" width="500" height="375" type="application/pdf" *ngIf="docExt==pdf"> --\x3e\n</ion-content>'},VAfc:function(n,t,e){"use strict";e.d(t,"a",(function(){return u}));var o=e("mrSG"),i=e("fXoL"),r=e("6n/F"),s=e("sYmb"),a=e("RSNc"),l=e.n(a),d=e("AytR"),c=e("sRcL"),m=e("TEn/");l()(r);let u=class{constructor(n,t,e){this._translate=n,this.ajax=t,this.modalController=e,this.regUserTrendYears=null,this.getTotalUsers=null,this.yearWiseRegUsersTotal=null}ngOnInit(){}ionViewDidEnter(){this.getUsersCount()}userRegDetailsChart(n,t){r.chart("yearwiseregusersssr",{chart:{type:"line"},title:{text:this.regUserTrendYears},xAxis:{categories:t},yAxis:{title:{text:"Million"}},series:[{name:this._translate.instant("Users Registered"),type:"line",data:n}],legend:{enabled:!1},exporting:{enabled:!1},credits:{enabled:!1}})}regUsers_chartline(){var n=this.getTotalUsers.total_users;n=this.changeNumberToMillion(n);var t=[1.2,5.1,12,23,38.1,91.6,139.4],e=[2016,2017,2018,2019,2020,2021,2022],o=(new Date).getFullYear();n&&2023==o&&(t.push(parseFloat(n)),e.push(o)),this.regUserTrendYears=e[0]+" - "+e[e.length-1],this.yearWiseRegUsersTotal=t[t.length-1],this.userRegDetailsChart(t,e)}getUsersCount(){this.ajax.getMethod(d.a.get_total_users_count).subscribe(n=>{null!=n.status&&(n.status?(this.getTotalUsers=n,this.regUsers_chartline()):this.getTotalUsers=n)})}changeNumberToMillion(n){return isNaN(n)?0:n>=1e7?(n/1e6).toFixed(2).replace(/\.0$/,""):void 0}dismiss(n=!1){this.modalController.dismiss({dismissed:n})}};u.ctorParameters=()=>[{type:s.c},{type:c.a},{type:m.h}],u=Object(o.c)([Object(i.n)({selector:"app-view-graph",template:Object(o.e)(e("SKIy")).default,styles:[Object(o.e)(e("5kFZ")).default]})],u)},WAqu:function(n,t,e){"use strict";e.d(t,"a",(function(){return u}));var o=e("mrSG"),i=e("fXoL"),r=e("TEn/"),s=e("3Pt+"),a=e("AytR"),l=e("sRcL"),d=e("sYmb"),c=e("VBEu"),m=e("4pnn");let u=class{constructor(n,t,e,o,i,r,s,a,l){this.modalController=n,this.formBuilder=t,this.ajax=e,this.navCtrl=o,this.navparam=i,this.platform=r,this.encrypt=s,this.cookieService=a,this.translate=l,this.deviceSize=this.platform.isLandscape(),this.isSubmitted=!1,this.otpInput="",this.otp=!1,this.maxTime=120,this.respMsg=null,this.otpShow=!1,this.profile=this.navparam.get("profile")}ngAfterViewChecked(){this.updateForm.controls.mobile.valid||this.mobileElement.setFocus(),this.updateForm.controls.otp.valid||this.otpElement.setFocus()}ngOnInit(){this.validationArray={mobile:[{value:"",disabled:!1},[s.f.required,s.f.pattern("^[5-9]{1}[0-9]{9}$"),s.f.maxLength(10),s.f.minLength(10)]],otp:[{value:"",disabled:!1},[]]},this.updateForm=this.formBuilder.group(this.validationArray,{validator:this.ConfirmedValidator("mobile")})}changeType(n){this.otpShow=!this.otpShow}ConfirmedValidator(n){return t=>{const e=this.profile.mobile,o=t.controls[n];o.errors&&!o.errors.notequalto||(e!==o.value?o.setErrors(null):o.setErrors({notequalto:!0}))}}get errorControl(){return this.updateForm.controls}submitForm(){if(this.isSubmitted=!0,!this.updateForm.valid)return!1;{this.ajax.showLoader("");let n=this.updateForm.value.otp?a.a.mobileupdate_verify_otp:a.a.mobileupdate_send_otp,t=this.updateForm.value.otp?encodeURI("mobile="+this.updateForm.get("mobile").value+"&otp="+this.encrypt.getEncryptedValue(this.updateForm.get("otp").value)):encodeURI("mobile="+this.updateForm.get("mobile").value);this.ajax.postMethod(n,t,{}).subscribe(n=>{this.isSubmitted=!1,this.ajax.hideLoader(),"success"==n.status&&(this.cookieService.remove("user_mob"),this.respMsg=n,this.ngAfterViewChecked(),this.otp=!0,this.StartTimer(),this.updateForm.value.otp?(n.msg=this.translate.instant("Mobile number updated successfully."),this.ajax.showToast(this.respMsg.msg,5e3,"success","bottom"),this.dismiss(!0)):(this.validationArray.mobile=[{value:this.updateForm.get("mobile").value,disabled:!0},[s.f.required,s.f.pattern("^[0-9]+$"),s.f.maxLength(10),s.f.minLength(10)]],this.validationArray.otp=["",[s.f.required,s.f.pattern("^[0-9]+$"),s.f.maxLength(6),s.f.minLength(6)]],this.updateForm=this.formBuilder.group(this.validationArray)))})}}resendOtp(){this.respMsg=null,this.otpInput="",this.updateForm.value.otp="",this.maxTime=120,this.ajax.showLoader("");let n=a.a.mobileupdate_send_otp,t=encodeURI("mobile="+this.updateForm.get("mobile").value);this.ajax.postMethod(n,t,{}).subscribe(n=>{this.isSubmitted=!1,this.ajax.hideLoader(),this.respMsg=n,"success"==n.status&&this.StartTimer()})}StartTimer(){setTimeout(n=>{this.maxTime>0&&(this.StartTimer(),this.maxTime=this.maxTime-1)},1e3)}dismiss(n=!1){this.modalController.dismiss({dismissed:n})}};u.ctorParameters=()=>[{type:r.h},{type:s.a},{type:l.a},{type:r.i},{type:r.j},{type:r.k},{type:c.a},{type:m.c},{type:d.c}],Object(o.c)([Object(i.nb)("mobile")],u.prototype,"mobileElement",void 0),Object(o.c)([Object(i.nb)("otp")],u.prototype,"otpElement",void 0),u=Object(o.c)([Object(i.n)({selector:"app-update-mobile",template:Object(o.e)(e("9DET")).default,styles:[Object(o.e)(e("QTN7")).default]})],u)},WH08:function(n,t,e){"use strict";e.r(t),t.default="ion-progress-bar {\n  border-radius: 25px;\n  height: 24px;\n}\n\n.ion-center1 {\n  justify-content: center;\n  align-items: center;\n  padding-top: 40px;\n  margin-left: 42px;\n  width: 400px;\n}\n\n.text-align {\n  text-align: center;\n  padding-top: 40px;\n}\n\n.text-align1 {\n  text-align: center;\n  margin-left: -15px;\n}\n\n.sc-ion-modal-md-h {\n  --width: 100%;\n  --min-width: auto;\n  --max-width: auto;\n  --height: 100%;\n  --min-height: auto;\n  --max-height: auto;\n  --overflow: hidden;\n  --border-radius: 0;\n  --border-width: 0;\n  --border-style: none;\n  --border-color: transparent;\n  --background: var(--ion-background-color, #fff);\n  --box-shadow: none;\n  --backdrop-opacity: 0;\n  left: 0;\n  right: 0;\n  top: 0;\n  bottom: 0;\n  display: flex;\n  position: absolute;\n  align-items: center;\n  justify-content: center;\n  outline: none;\n  contain: strict;\n}\n\n.overlay-hidden.sc-ion-modal-md-h {\n  display: none;\n}\n\n.modal-wrapper.sc-ion-modal-md,\n.modal-shadow.sc-ion-modal-md {\n  border-radius: var(--border-radius);\n  width: var(--width);\n  min-width: var(--min-width);\n  max-width: var(--max-width);\n  height: var(--height);\n  min-height: var(--min-height);\n  max-height: var(--max-height);\n  border-width: var(--border-width);\n  border-style: var(--border-style);\n  border-color: var(--border-color);\n  background: var(--background);\n  box-shadow: var(--box-shadow);\n  overflow: var(--overflow);\n  z-index: 10;\n}\n\n.modal-shadow.sc-ion-modal-md {\n  position: absolute;\n  background: transparent;\n}\n\n@media only screen and (min-width: 768px) and (min-height: 600px) {\n  .sc-ion-modal-md-h {\n    --width: 600px;\n    --height: 200px!important;\n    --ion-safe-area-top: 0px;\n    --ion-safe-area-bottom: 0px;\n    --ion-safe-area-right: 0px;\n    --ion-safe-area-left: 0px ;\n  }\n}\n\n@media only screen and (min-width: 768px) and (min-height: 768px) {\n  .sc-ion-modal-md-h {\n    --width: 600px;\n    --height: 600px ;\n  }\n}\n\n.sc-ion-modal-md-h:first-of-type {\n  --backdrop-opacity: var(--ion-backdrop-opacity, 0.32) ;\n}\n\n@media only screen and (min-width: 768px) and (min-height: 600px) {\n  .sc-ion-modal-md-h {\n    --border-radius: 2px ;\n  }\n\n  .sc-ion-modal-md-h:first-of-type {\n    --box-shadow: 0 28px 48px rgba(0, 0, 0, 0.4) ;\n  }\n}\n\n.modal-wrapper.sc-ion-modal-md {\n  transform: translate3d(0, 40px, 0);\n  opacity: 0.01;\n}"},YSmO:function(n,t,e){"use strict";e.r(t),t.default='\n<ion-content>\n\n                <ion-card mode="ios" >\n                        <div style="display: block; height: 340px; width: auto; background: #000;">\n                            <image-cropper [imageChangedEvent]="imageChangedEvent" [maintainAspectRatio]="true" [aspectRatio]="4 / 4" [resizeToWidth]="250" (imageCropped)="imageCropped($event)"></image-cropper>\n                        </div>\n                    <ion-card-header class="ion-no-padding">\n                      <ion-card-subtitle class="ion-text-center">Drag the image to adjust</ion-card-subtitle>\n                    </ion-card-header>\n                  </ion-card>  \n                  \x3c!-- <ion-row>\n                      <ion-col>\n                        <div class="btn">\n                            <button (click)="setProfilePhoto()">Save</button>\n                    </div>    \n                  <img class="image-rounded" [src]="croppedImage"> \n                </ion-col>\n\n                </ion-row>  --\x3e\n                <ion-row class="ion-margin" mode="ios">\n                    <ion-col  class="ion-text-end ">\n                        <ion-button (click)="dismiss()" color="light"> Cancel</ion-button>    <ion-button  type="submit" color="success" class="button button-solid ion-activatable ion-focusable " (click)="setProfilePhoto()">Save</ion-button>\n                    </ion-col>\n                </ion-row>\n</ion-content>\n\n'},Z3Kw:function(n,t,e){"use strict";e.r(t),t.default='\x3c!-- <ion-header>\n    <ion-toolbar>\n        <ion-button slot="start" (click)="dismiss()" size="small" color="primary" fill="clear" shape="round">\n            <ion-icon name="arrow-back"></ion-icon>\n        </ion-button>\n        <ion-title>{{profile.email?\'Update\':\'Add\'}} Email Address</ion-title>\n    </ion-toolbar>\n</ion-header> --\x3e\n\n<ion-content class="ion-padding">\n    <ion-grid>\n\n        <ion-toolbar>\n            <ion-title color="tertiary" *ngIf="deviceSize">\n                <strong> {{(profile.email?\'Update your Email for communication\':\'Add your Email address for communication\')  | translate}}  </strong>\n            </ion-title>\n            <ion-text color="tertiary" *ngIf="!deviceSize">\n                <strong> {{(profile.email?\'Update your Email for communication\':\'Add your Email address for communication\')  | translate}}  </strong>\n            </ion-text>\n            <ion-buttons slot="start">\n                <ion-button (click)="dismiss()" color="dark" fill="clear" shape="round" size="small">\n                    <ion-icon ios="arrow-back" md="arrow-back"></ion-icon>\n                </ion-button>\n            </ion-buttons>\n        </ion-toolbar>\n        <ion-row class="ion-padding-start">\n            <ion-col size="12">\n\n            </ion-col>\n        </ion-row>\n\n\n        <ion-col class="ion-no-padding">\n            <ion-row *ngIf="profile.email">\n                <ion-col size-md="4" size="12">\n                    <ion-item lines="none">\n                        <ion-label>{{"Current" | translate}} {{"Email" | translate}}</ion-label>\n                    </ion-item>\n                </ion-col>\n                <ion-col size-md="8" size="12">\n                    <ion-item lines="full">\n                        <ion-label color="medium">{{profile.email}}</ion-label>\n                    </ion-item>\n                </ion-col>\n            </ion-row>\n\n            <form [formGroup]="updateForm" (ngSubmit)="submitForm()" novalidate>\n                <ion-row>\n                    <ion-col size-md="4" size="12">\n                        <ion-item lines="none">\n                            <ion-label>{{(profile.email?\'New\':\'\') | translate}} {{"Email" | translate}}</ion-label>\n                        </ion-item>\n                    </ion-col>\n                    <ion-col size-md="8" size="12">\n                        <ion-item lines="full">\n                            <ion-input [disabled]="otp" minlength="3" maxlength="255" pattern="[A-Za-z0-9.%+-_]{2,}@[a-zA-Z-.]{2,}[.]{1}[a-zA-Z]{2,}" formControlName="email" type="email" required #email></ion-input>\n                        </ion-item>\n                        <ion-text color="danger" *ngIf="isSubmitted && errorControl.email.errors?.required">\n                            {{"Email" | translate}} {{"Req" | translate}}\n                        </ion-text>\n                        <ion-text color="danger" *ngIf="isSubmitted && errorControl.email.errors?.pattern">\n                            {{"Email" | translate}} {{"NotValid" | translate}}\n                        </ion-text>\n                        <ion-text color="danger" *ngIf="errorControl.email.errors?.notequalto">\n                            {{"Current and new email is same." | translate}}\n                        </ion-text>\n                    </ion-col>\n                </ion-row>\n\n                <ion-row *ngIf="otp">\n                    <ion-col size-md="4" size="12">\n                        <ion-item lines="none">\n                            <ion-label></ion-label>\n                        </ion-item>\n                    </ion-col>\n                    <ion-col size-md="8" size="12">\n                        <ion-item lines="none" class="no-padding-start">\n                            <ion-badge color="{{(respMsg.status==\'success\')?\'success\':\'danger\'}}" *ngIf="respMsg" class="ion-padding">\n                                {{((respMsg.status==\'success\')?respMsg.msg:respMsg.error_description) | translate}}\n                            </ion-badge>\n                        </ion-item>\n                    </ion-col>\n                </ion-row>\n\n                <ion-row *ngIf="otp">\n                    <ion-col size-md="4" size="12">\n                        <ion-item lines="none">\n                            <ion-label>{{\'OTP\' | translate}}</ion-label>\n                        </ion-item>\n                    </ion-col>\n                    <ion-col size-md="8" size="12">\n                        <ion-item lines="full">\n                            <ion-input (keypress)="ajax.numberOnlyValidation($event)" maxlength="6" minlength="6" [(ngModel)]="otpInput" formControlName="otp" type="{{otpShow?\'text\':\'password\'}}" required #otp></ion-input>\n                            <ion-icon class="cursor" *ngIf="!errorControl.otp.pristine" (click)="changeType(\'otp\')" color="{{otpShow?\'primary\':\'dark\'}}" name="{{otpShow?\'eye\':\'eye-off\'}}" slot="end"></ion-icon>\n                        </ion-item>\n                        <ion-text color="danger" *ngIf="otp && isSubmitted && errorControl.otp.errors?.required ">\n                            {{\'OTP is required.\' | translate}}\n                        </ion-text>\n                        <ion-text color="danger" *ngIf="otp && isSubmitted && errorControl.otp.errors?.pattern">\n                            {{\'Only numerical values allowed.\' | translate}}\n                        </ion-text>\n                        <ion-text color="danger" *ngIf="otp && isSubmitted && (errorControl.otp.errors?.maxlength || errorControl.otp.errors?.minlength)">\n                            {{\'OTP must be of 6 digit.\' | translate}}\n                        </ion-text>\n                        <br />\n\n                        <ion-text *ngIf="respMsg">\n                            \x3c!-- {{(maxTime>0)?\'Wait for the OTP, if not received try resend otp after \'+maxTime+\' second\':\'\'}} --\x3e\n                            {{maxTime>0?(\'otpTimer\'| translate) + maxTime + (\'seconds\' | translate):\'\'}}\n                            <ion-text *ngIf="maxTime==0" (click)="resendOtp()" type="submit" fill="clear" size="small" class="cursor" color="primary">{{\'Resend OTP\' | translate}}</ion-text>\n                        </ion-text>\n                    </ion-col>\n                </ion-row>\n\n                <ion-row class="mt-4">\n                    <ion-col>\n                        <ion-label class="ion-text-right">\n                            <ion-button class="ion-float-right" type="submit" color="primary" expand="block">{{"Submit" | translate}}</ion-button>\n                        </ion-label>\n                    </ion-col>\n                </ion-row>\n\n\n\n                <ion-row>\n                    <ion-col>\n                        \x3c!-- <ion-text color="{{(respMsg.status==\'success\')?\'primary\':\'danger\'}}" *ngIf="respMsg">\n                        {{(respMsg.status==\'success\')?respMsg.msg:respMsg.error_description}}\n\n                    </ion-text> --\x3e\n\n                    </ion-col>\n                </ion-row>\n            </form>\n\n        </ion-col>\n\n    </ion-grid>\n</ion-content>'},Zcj0:function(n,t,e){"use strict";e.d(t,"a",(function(){return s}));var o=e("wEJo"),i=e("qULd"),r=e("KF81");const s=(n,t)=>{let e,s;const a=(n,o,i)=>{if("undefined"==typeof document)return;const r=document.elementFromPoint(n,o);r&&t(r)?r!==e&&(d(),l(r,i)):d()},l=(n,t)=>{e=n,s||(s=e);const i=e;Object(o.f)(()=>i.classList.add("ion-activated")),t()},d=(n=!1)=>{if(!e)return;const t=e;Object(o.f)(()=>t.classList.remove("ion-activated")),n&&s!==e&&e.click(),e=void 0};return Object(r.createGesture)({el:n,gestureName:"buttonActiveDrag",threshold:0,onStart:n=>a(n.currentX,n.currentY,i.a),onMove:n=>a(n.currentX,n.currentY,i.b),onEnd:()=>{d(!0),Object(i.e)(),s=void 0}})}},"a/UP":function(n,t,e){"use strict";e.r(t),t.default=""},bFEu:function(n,t,e){"use strict";e.d(t,"a",(function(){return p}));var o=e("mrSG"),i=e("9ans"),r=e("fXoL"),s=e("TEn/"),a=e("3Pt+"),l=e("AytR"),d=e("sRcL"),c=e("tyNb"),m=e("jhN1"),u=e("sYmb"),h=e("VBEu");let p=class{constructor(n,t,e,o,i,r,s,a){this.navCtlr=n,this.formBuilder=t,this.ajax=e,this.router=o,this.auth=i,this.titleService=r,this._translate=s,this.encrypt=a,this.addNomineeFormShow=!1,this.verifyOTPFormShow=!1,this.isSubmitted=!1,this.respMsg=null,this.minDate=new Date("1900-01-01").toISOString().slice(0,10),this.maxDate=(new Date).toISOString().slice(0,10)}ionViewDidEnter(){this.titleService.setTitle("Verify Aadhaar")}ngOnInit(){this.auth.isVerified()&&this.navCtlr.navigateForward("issued-documents");let n={aadhar:[{value:"",disabled:!1},[a.f.required,a.f.pattern("[0-9? ]+$"),a.f.maxLength(12),a.f.minLength(12)]],name:[{value:"",disabled:!1},[a.f.required,a.f.minLength(2),a.f.pattern("[A-Za-z0-9? '().]+$")]],dob:[{value:"",disabled:!1},[a.f.required]],gender:[{value:"",disabled:!1},[a.f.required]],consent:[null,a.f.required]};this.updateProfileForm=this.formBuilder.group(n,{validator:this.DobValidator("dob")})}submitForm(){let n=this.auth.userProfile();if(this.isSubmitted=!0,this.respMsg=null,!this.updateProfileForm.valid)return!1;{let t=this.updateProfileForm.value.consent?"Y":"N";this.ajax.showLoader();let e=this.updateProfileForm.get("dob").value.toString().split("-"),o="&username="+n.user_name+"&consent="+t+"&uid="+this.encrypt.getEncryptedValue(this.updateProfileForm.get("aadhar").value)+"&name="+this.updateProfileForm.get("name").value+"&dob="+e[2]+e[1]+e[0]+"&gender="+this.updateProfileForm.get("gender").value;this.ajax.postMethod(l.a.link_demo_auth,encodeURI(o),{}).subscribe(n=>{this.respMsg=n,this.ajax.hideLoader(),"success"==n.status&&(this.respMsg.msg=this._translate.instant("Aadhar updated."),localStorage.removeItem("avatar"),this.auth.setProfile("profile"),this.ajax.showToast(this.respMsg.msg,5e3,"success","bottom"))})}}get errorControl(){return this.updateProfileForm.controls}onTermsChecked(){this.updateProfileForm.value.consent||this.updateProfileForm.patchValue({consent:null})}getDate(n){let t=new Date(n.target.value).toISOString().substring(0,10);this.updateProfileForm.get("dob").setValue(t,{onlyself:!0})}dismiss(){this.navCtlr.back()}DobValidator(n){return t=>{const e=t.controls[n];e.errors&&!e.errors.dobValidator||(this.maxDate>e.value&&this.minDate<e.value?e.setErrors(null):e.setErrors({dobValidator:!0}))}}};p.ctorParameters=()=>[{type:s.i},{type:a.a},{type:d.a},{type:c.g},{type:i.a},{type:m.d},{type:u.c},{type:h.a}],Object(o.c)([Object(r.nb)("aadhar")],p.prototype,"aadharElement",void 0),p=Object(o.c)([Object(r.n)({selector:"app-verify-aadhar",template:Object(o.e)(e("zFpd")).default,styles:[Object(o.e)(e("FfG1")).default]})],p)},bKS9:function(n,t,e){"use strict";e.d(t,"a",(function(){return u}));var o=e("mrSG"),i=e("fXoL"),r=e("3Pt+"),s=e("TEn/"),a=e("sRcL"),l=e("AytR"),d=e("9ans"),c=e("4pnn"),m=e("NFKh");let u=class{constructor(n,t,e,o,i,r,s,a,l){this.formBuilder=n,this.modalController=t,this.navCtlr=e,this.platform=o,this.ajax=i,this.alertCtrl=r,this.navparam=s,this.auth=a,this.cookieService=l,this.isSubmitted=!1,this.cChecked=!1,this.otpShow=!1,this.deviceSize=this.platform.isLandscape(),this.cotp=!1,this.otp=!1,this.maxTime=60,this.txnId=null,this.sm=!0,this.authModeparam=this.navparam.get("state")}ngAfterViewChecked(){this.OTPForm.controls.hl_id.valid||this.hl_idElement.setFocus()}ngOnInit(){this.authModeparam&&(this.token=this.authModeparam.token,this.id=this.authModeparam.id,this.authMe=this.authModeparam.resp,null!=this.authMe?this.authMethods=this.authMe.authMethods:this.authMethods=["MOBILE_OTP"],1==this.authMethods.length?(this.validationArray={hl_id:[{value:this.id,disabled:!0},[r.f.required]],methods:[{value:this.authMethods[0],disabled:!1},[r.f.required]],otp:[{value:"",disabled:!1},[]]},this.OTPForm=this.formBuilder.group(this.validationArray)):(this.validationArray={hl_id:[{value:this.id,disabled:!0},[r.f.required]],methods:[{value:"",disabled:!1},[r.f.required]],otp:[{value:"",disabled:!1},[]]},this.OTPForm=this.formBuilder.group(this.validationArray)))}submitOTPForm(){if(this.isSubmitted=!0,!this.OTPForm.valid)return!1;{this.pass=this.OTPForm.get("methods").value,this.ajax.showLoader();let n,t,e={"content-type":"application/json"},o=this.encryptedString(this.OTPForm.get("otp").value);null!=this.authMe?(n=this.OTPForm.value.otp?l.a.phrPreVerify:l.a.phrAuthInitNumber,t=this.OTPForm.value.otp?{authCode:o,transactionId:this.txnId}:{healthIdNumber:this.OTPForm.get("hl_id").value.trim(),authMode:this.OTPForm.get("methods").value}):(n=this.OTPForm.value.otp?l.a.phrAuthConfirmAddress:l.a.phrAuthInitAddress,t=this.OTPForm.value.otp?{authCode:o,transactionId:this.txnId}:{patientId:this.OTPForm.get("hl_id").value.trim(),authMode:this.OTPForm.get("methods").value}),this.ajax.postMethod(n,t,e).subscribe(n=>{this.ajax.hideLoader(),null!=n.response.transactionId&&(this.StartTimer(),this.isSubmitted=!1,this.txnId=n.response.transactionId,this.cotp=!0,this.otp=!0,"PASSWORD"==this.pass?(this.otpmsg="Please enter Password.",this.validationArray.methods=[{value:this.OTPForm.get("methods").value,disabled:!1},[r.f.required]],this.validationArray.otp=["",[r.f.required]],this.OTPForm=this.formBuilder.group(this.validationArray)):(this.otpmsg="Please enter One Time Password(OTP) sent on your mobile number.",this.validationArray.methods=[{value:this.OTPForm.get("methods").value,disabled:!1},[r.f.required]],this.validationArray.otp=["",[r.f.required,r.f.pattern("^[0-9]+$"),r.f.maxLength(6),r.f.minLength(6)]],this.OTPForm=this.formBuilder.group(this.validationArray))),n.response.mappedPhrAddress&&(this.mappedPhrAddress=n.response.mappedPhrAddress,this.mappedPhrAddress.length>1?this.showPrompt(this.mappedPhrAddress,n.response.transactionId):this.AuthConfirmNumber(this.mappedPhrAddress[0],n.response.transactionId)),n.response.token&&this.setCookiesforAddres(n.response.token),n.status||(this.otp=!1,this.otpmsg=n.response.message)})}}encryptedString(n){let t=this.auth.userProfile().dlId.slice(0,16),e=m.enc.Utf8.parse(t);return t=m.enc.Utf8.parse(t),m.AES.encrypt(n,t,{iv:e,mode:m.mode.CBC}).toString()}otpInput(n){this.otpmsg=!1,this.otp=!0,this.cotp&&(this.cotp=!this.cotp,this.validationArray={hl_id:[{value:this.id,disabled:!0},[r.f.required]],methods:[{value:n,disabled:!1},[r.f.required]],otp:[{value:"",disabled:!1},[]]},this.OTPForm=this.formBuilder.group(this.validationArray))}resendOtp(){this.OTPForm.value.otp="",this.maxTime=60,this.ajax.showLoader();let n,t;null!=this.authMe?(n=l.a.phrAuthInitNumber,t={healthIdNumber:this.OTPForm.get("hl_id").value,authMode:this.OTPForm.get("methods").value}):(n=l.a.phrAuthInitAddress,t={patientId:this.OTPForm.get("hl_id").value,authMode:this.OTPForm.get("methods").value}),this.ajax.postMethod(n,t,{"content-type":"application/json"}).subscribe(n=>{this.ajax.hideLoader(),null!=n.response.transactionId?(this.isSubmitted=!1,this.txnId=n.response.transactionId,this.StartTimer()):this.ajax.showToast(n.response.message,5e3,"danger")})}StartTimer(){setTimeout(n=>{this.maxTime>0&&(this.StartTimer(),this.maxTime=this.maxTime-1)},1e3)}showPrompt(n,t){let e=[];for(let o of n)e.push({type:"radio",label:o,value:o});this.alertCtrl.create({header:"Select ABHA Address to Link with",inputs:e,buttons:[{text:"Cancel",handler:n=>{console.log("Canceled")}},{text:"Done!",handler:n=>{this.AuthConfirmNumber(n,t)}}]}).then(n=>{n.present()})}AuthConfirmNumber(n,t){let e=l.a.phrAuthConfirmNumber,o={transactionId:t,patientId:n};this.ajax.postMethod(e,o,{"content-type":"application/json"}).subscribe(n=>{n.status?this.setCookiesforAddres(n.response.token):(this.cotp=!1,this.ajax.showToast(n.response.message,5e3,"danger"))})}setCookiesforAddres(n){let t=this.auth.userProfile(),e=this.id.split("@"),o=t.dlId+"_"+e[0];this.auth.cookieSet(o,n),this.dismiss(!0),this.navCtlr.navigateForward("services/abha/profile/"+e[0])}changeType(n){this.otpShow=!this.otpShow}dismiss(n=!1){this.modalController.dismiss({dismissed:n})}get errorControl(){return this.OTPForm.controls}};u.ctorParameters=()=>[{type:r.a},{type:s.h},{type:s.i},{type:s.k},{type:a.a},{type:s.a},{type:s.j},{type:d.a},{type:c.c}],Object(o.c)([Object(i.nb)("hl_id")],u.prototype,"hl_idElement",void 0),u=Object(o.c)([Object(i.n)({selector:"app-abha-login",template:Object(o.e)(e("xYor")).default,styles:[Object(o.e)(e("uAdG")).default]})],u)},gYfu:function(n,t,e){"use strict";e.r(t),e.d(t,"UpdateAadharPageModule",(function(){return x}));var o=e("mrSG"),i=e("fXoL"),r=e("ofXK"),s=e("3Pt+"),a=e("TEn/"),l=e("tyNb"),d=e("9ans"),c=e("AytR"),m=e("sRcL"),u=e("jhN1"),h=e("sYmb"),p=e("VBEu");let g=class{constructor(n,t,e,o,i,r,s,a){this.navCtlr=n,this.formBuilder=t,this.ajax=e,this.alertCtrl=o,this.auth=i,this.titleService=r,this._translate=s,this.encrypt=a,this.isSubmitted=!1,this.otp=!1,this.respMsg=null,this.validationArray={},this.verifiedUserTypes=this.auth.isVerified(),this.otpShow=!1,this.maxTime=120,this.otpBoxShow=!0,this.otpInput=""}ngAfterViewChecked(){this.updateForm.controls.aadhar.valid||this.aadharElement.setFocus(),this.updateForm.controls.otp.valid||this.otpElement.setFocus()}ionViewDidEnter(){this.titleService.setTitle("Aadhaar Card")}ngOnInit(){sessionStorage.removeItem("fetchDoc"),this.validationArray.aadhar=[{value:null,disabled:!1},this.verifiedUserTypes?[]:[s.f.required,s.f.pattern("[0-9? ]+$"),s.f.maxLength(12),s.f.minLength(12)]],this.validationArray.consent=[{value:null,disabled:!1},[s.f.required]],this.validationArray.otp=[{value:null,disabled:!1},[]],this.updateForm=this.formBuilder.group(this.validationArray)}changeType(n){this.otpShow=!this.otpShow}get errorControl(){return this.updateForm.controls}submitForm(){if(this.isSubmitted=!0,this.respMsg=null,!this.updateForm.valid)return!1;{this.ajax.showLoader("");let n=this.verifiedUserTypes?"":"&uid="+this.encrypt.getEncryptedValue(this.updateForm.get("aadhar").value),t=this.updateForm.get("consent").value?"Y":"N",e=this.updateForm.value.otp?c.a.aadharProfileVerifyOtp:c.a.aadharProfileOtp,o=this.updateForm.value.otp?encodeURI("&consent="+t+n+"&otp="+this.encrypt.getEncryptedValue(this.updateForm.value.otp)):encodeURI("&consent="+t+n);this.ajax.postMethod(e,o,{}).subscribe(n=>{if(this.ajax.hideLoader(),"error"==n.status&&this.ajax.showToast(n.error_description,5e3,"danger","bottom"),null!=n.status)if(this.respMsg=n,"success"==n.status)this.isSubmitted=!1,this.otp=!0,this.otpBoxShow=!0,this.updateForm.value.otp?(null!=this.respMsg.msg?this.ajax.showToast(this.respMsg.msg,5e3,"success","bottom"):this.ajax.showToast(this._translate.instant("Aadhaar updated."),5e3,"success","bottom"),localStorage.removeItem("avatar"),this.refreshIssuedDocList(),this.dismiss()):(this.ngAfterViewChecked(),this.StartTimer(),this.validationArray.consent=[{value:this.updateForm.get("consent").value,disabled:!1},[s.f.required]],this.validationArray.aadhar=[{value:this.verifiedUserTypes?null:this.updateForm.get("aadhar").value,disabled:!1},this.verifiedUserTypes?[]:[s.f.required,s.f.pattern("[0-9? ]+$"),s.f.maxLength(12),s.f.minLength(12)]],this.validationArray.otp=["",[s.f.required,s.f.pattern("^[0-9]+$"),s.f.maxLength(6),s.f.minLength(6)]],this.updateForm=this.formBuilder.group(this.validationArray));else{["D-101","D-102","D-103","D-104","1201","1202","1203","1204","1205","102","K-956","K-200","K-545","K-955"].includes(n.code)?(this.otpBoxShow=!1,this.maxTime=0,this.isSubmitted=!0):(this.otpInput="",this.isSubmitted=!1,null!=this.respMsg.error_description||null!=this.respMsg.message||this.ajax.showToast(this._translate.instant("Server is busy please try again later."),5e3,"warning","bottom"))}})}}refreshIssuedDocList(){this.ajax.postMethod(c.a.refreshIssuedDocList,"",{}).subscribe(n=>{null==n.status&&n.length>0&&this.auth.setProfile("issued-documents")})}resendOtp(){this.maxTime=120,this.otpInput="",this.respMsg=null,this.otpBoxShow=!0,this.updateForm.value.otp="",this.ajax.showLoader("");let n=c.a.aadharProfileOtp,t=this.verifiedUserTypes?"":"&uid="+this.encrypt.getEncryptedValue(this.updateForm.get("aadhar").value),e=this.updateForm.get("consent").value?"Y":"N",o=encodeURI("&consent="+e+t);this.ajax.postMethod(n,o,{}).subscribe(n=>{this.isSubmitted=!1,this.ajax.hideLoader(),this.respMsg=n,"success"==n.status?this.StartTimer():this.ajax.showToast(this.respMsg.error_description,5e3,"warning","bottom")})}onTermsChecked(){this.updateForm.value.consent||this.updateForm.patchValue({consent:null})}dismiss(){this.navCtlr.pop()}StartTimer(){setTimeout(n=>{this.maxTime>0&&(this.StartTimer(),this.maxTime=this.maxTime-1)},1e3)}};g.ctorParameters=()=>[{type:a.i},{type:s.a},{type:m.a},{type:a.a},{type:d.a},{type:u.d},{type:h.c},{type:p.a}],Object(o.c)([Object(i.nb)("aadhar")],g.prototype,"aadharElement",void 0),Object(o.c)([Object(i.nb)("otp")],g.prototype,"otpElement",void 0),g=Object(o.c)([Object(i.n)({selector:"app-update-aadhar",template:Object(o.e)(e("8NWj")).default,styles:[Object(o.e)(e("a/UP")).default]})],g);const b=[{path:"",component:g}];let f=class{};f=Object(o.c)([Object(i.M)({imports:[l.i.forChild(b)],exports:[l.i]})],f);let x=class{};x=Object(o.c)([Object(i.M)({imports:[r.b,s.b,s.e,a.d,f,h.b.forChild()],declarations:[g]})],x)},goW5:function(n,t,e){"use strict";e.d(t,"a",(function(){return u}));var o=e("mrSG"),i=e("9ans"),r=e("fXoL"),s=e("TEn/"),a=e("3Pt+"),l=e("AytR"),d=e("sRcL"),c=e("tyNb"),m=e("sYmb");let u=class{constructor(n,t,e,o,i,r,s){this.modalController=n,this.formBuilder=t,this.ajax=e,this.router=o,this.navparam=i,this.auth=r,this._translate=s,this.addNomineeFormShow=!1,this.verifyOTPFormShow=!1,this.isSubmitted=!1,this.respMsg=null,this.minDate=new Date("1900-01-01").toISOString().slice(0,10),this.maxDate=(new Date).toISOString().slice(0,10),this.profile=this.navparam.get("profile")}ngOnInit(){let n=this.profile.residentName?this.profile.residentName:"",t=this.profile.date_of_birth?new Date(this.profile.date_of_birth).toISOString().slice(0,10):null,e=this.profile.gender?this.profile.gender:"",o={name:[{value:n,disabled:!1},[a.f.required,a.f.minLength(2),a.f.pattern("[A-Za-z0-9? '().]+$")]],dob:[{value:t,disabled:!1},[a.f.required]],gender:[{value:e,disabled:!1},[a.f.required]]};this.updateProfileForm=this.formBuilder.group(o,{validator:this.DobValidator("dob")})}submitForm(){JSON.parse(sessionStorage.getItem(l.a.TOKEN_KEY));if(this.isSubmitted=!0,this.respMsg=null,!this.updateProfileForm.valid)return!1;{this.ajax.showLoader("");let n="&full_name="+this.updateProfileForm.value.name+"&dob="+this.updateProfileForm.value.dob+"&gender="+this.updateProfileForm.value.gender;this.ajax.postMethod(l.a.nonAadharUpdateProfile,encodeURI(n),{}).subscribe(n=>{this.ajax.hideLoader(),this.isSubmitted=!1,this.respMsg=n,"success"==n.status&&(this.respMsg.msg=this._translate.instant("Profile updated successfully."),this.auth.setProfile("profile"),this.ajax.showToast(this.respMsg.msg,5e3,"success","bottom"),this.dismiss(!0))})}}get errorControl(){return this.updateProfileForm.controls}DobValidator(n){return t=>{const e=t.controls[n];e.errors&&!e.errors.dobValidator||(this.maxDate>e.value&&this.minDate<e.value?e.setErrors(null):e.setErrors({dobValidator:!0}))}}getDate(n){let t=new Date(n.target.value).toISOString().substring(0,10);this.updateProfileForm.get("dob").setValue(t,{onlyself:!0})}dismiss(n=!1){this.modalController.dismiss({dismissed:n})}};u.ctorParameters=()=>[{type:s.h},{type:a.a},{type:d.a},{type:c.g},{type:s.j},{type:i.a},{type:m.c}],u=Object(o.c)([Object(r.n)({selector:"app-update-profile",template:Object(o.e)(e("RU3n")).default,styles:[Object(o.e)(e("kTlK")).default]})],u)},h3R7:function(n,t,e){"use strict";e.d(t,"a",(function(){return o}));const o={bubbles:{dur:1e3,circles:9,fn:(n,t,e)=>{const o=n*t/e-n+"ms",i=2*Math.PI*t/e;return{r:5,style:{top:9*Math.sin(i)+"px",left:9*Math.cos(i)+"px","animation-delay":o}}}},circles:{dur:1e3,circles:8,fn:(n,t,e)=>{const o=t/e,i=n*o-n+"ms",r=2*Math.PI*o;return{r:5,style:{top:9*Math.sin(r)+"px",left:9*Math.cos(r)+"px","animation-delay":i}}}},circular:{dur:1400,elmDuration:!0,circles:1,fn:()=>({r:20,cx:48,cy:48,fill:"none",viewBox:"24 24 48 48",transform:"translate(0,0)",style:{}})},crescent:{dur:750,circles:1,fn:()=>({r:26,style:{}})},dots:{dur:750,circles:3,fn:(n,t)=>({r:6,style:{left:9-9*t+"px","animation-delay":-110*t+"ms"}})},lines:{dur:1e3,lines:12,fn:(n,t,e)=>({y1:17,y2:29,style:{transform:`rotate(${30*t+(t<6?180:-180)}deg)`,"animation-delay":n*t/e-n+"ms"}})},"lines-small":{dur:1e3,lines:12,fn:(n,t,e)=>({y1:12,y2:20,style:{transform:`rotate(${30*t+(t<6?180:-180)}deg)`,"animation-delay":n*t/e-n+"ms"}})}}},iHY5:function(n,t,e){"use strict";e.d(t,"a",(function(){return d}));var o=e("mrSG"),i=e("fXoL"),r=e("TEn/"),s=e("AytR"),a=e("sRcL"),l=e("3Pt+");let d=class{constructor(n,t,e,o,i,r){this.modalController=n,this.formBuilder=t,this.ajax=e,this.platform=o,this.navCtlr=i,this.navparam=r,this.deviceSize=this.platform.isLandscape(),this.isSubmitted=!1,this.respMsg=null,this.hlid=null,this.hName=null,this.phrtoken=null,this.pinShow=!1,this.cpinShow=!1,this.state=this.navparam.get("state")}ngOnInit(){this.hlid=this.state.hlId,this.phrtoken=this.state.phrtoken,this.hName=this.state.hName,this.validationArray={otp:[{value:"",disabled:!1},[l.f.required,l.f.pattern("^[0-9]+$"),l.f.maxLength(6),l.f.minLength(6)]]},this.OTPForm=this.formBuilder.group(this.validationArray,{})}submitForm(){if(this.ajax.showLoader(),this.isSubmitted=!0,!this.OTPForm.valid)return!1;{let n=this.OTPForm.get("otp").value,t={"content-type":"application/json","X-AUTH-TOKEN":this.phrtoken},e=s.a.phrPostLoginCalls,o={reqType:"link_confirm",token:n,refNumber:this.state.resp.link.referenceNumber};this.ajax.postMethod(e,o,t).subscribe(n=>{this.ajax.hideLoader(),n.status?(this.navCtlr.navigateForward("services/abha/profile/"+this.hlid),this.dismiss(!0)):this.ajax.showToast(n.response.message,5e3,"warning")})}}dismiss(n=!0){this.modalController.dismiss({dismissed:n})}get errorControl(){return this.OTPForm.controls}changeType(n){this.pinShow=!this.pinShow}};d.ctorParameters=()=>[{type:r.h},{type:l.a},{type:a.a},{type:r.k},{type:r.i},{type:r.j}],d=Object(o.c)([Object(i.n)({selector:"app-abha-otp",template:Object(o.e)(e("l/kw")).default,styles:[Object(o.e)(e("oNgc")).default]})],d)},kTlK:function(n,t,e){"use strict";e.r(t),t.default=""},"l/kw":function(n,t,e){"use strict";e.r(t),t.default='\x3c!-- <ion-header>\n  <ion-toolbar>\n    <ion-title>abha-otp</ion-title>\n  </ion-toolbar>\n</ion-header> --\x3e\n\n<ion-content>\n    <ion-grid>\n        <ion-toolbar>\n            <ion-title color="tertiary" *ngIf="deviceSize && hName">\n                <strong> {{hName}} </strong>\n            </ion-title>\n            <ion-text color="tertiary" *ngIf="!deviceSize && hName">\n                <strong> {{hName}} </strong>\n            </ion-text>\n            <ion-buttons slot="start">\n                <ion-button (click)="dismiss()" color="dark" fill="clear" shape="round" size="small">\n                    <ion-icon ios="arrow-back" md="arrow-back"></ion-icon>\n                </ion-button>\n            </ion-buttons>\n        </ion-toolbar>\n        <form [formGroup]="OTPForm" (ngSubmit)="submitForm()" novalidate>\n            <ion-row>\n                <ion-col size-md="12" size="12">\n                    <ion-item lines="none">\n                        <ion-label>Please enter One Time Password (OTP) sent on your registered mobile number.\n                        </ion-label>\n                    </ion-item>\n                </ion-col>\n            </ion-row>\n            <ion-row>\n                <ion-col size-md="3" size="12">\n                    <ion-item lines="none">\n                        <ion-label>OTP</ion-label>\n                    </ion-item>\n                </ion-col>\n                <ion-col size-md="9" size="12">\n                    <ion-item lines="full">\n                        <ion-input autocomplete="off" (keypress)="ajax.numberOnlyValidation($event)" maxlength="6"\n                            minlength="6" formControlName="otp" type="{{pinShow?\'text\':\'password\'}}" required #otp>\n                        </ion-input>\n                        <ion-icon class="cursor" *ngIf="!errorControl.otp.pristine" (click)="changeType(\'otp\')"\n                            color="{{pinShow?\'primary\':\'dark\'}}" name="{{pinShow?\'eye\':\'eye-off\'}}" slot="end">\n                        </ion-icon>\n                    </ion-item>\n                    <ion-label color="danger" *ngIf="isSubmitted && errorControl.otp.errors?.required">\n                        Otp required\n                    </ion-label>\n                    <ion-label color="danger" *ngIf="isSubmitted && errorControl.otp.errors?.pattern">\n                        Enter a valid Otp\n                    </ion-label>\n                    <ion-label color="danger"\n                        *ngIf="isSubmitted && (errorControl.otp.errors?.maxlength || errorControl.otp.errors?.minlength)">\n                        Otp lenght should be 6 digit\n                    </ion-label>\n\n                </ion-col>\n            </ion-row>\n\n\n\n\n            <ion-row class="mt-4">\n                <ion-col>\n                    <ion-button class="ion-float-right" type="submit" color="primary">Submit</ion-button>\n                </ion-col>\n            </ion-row>\n\n            \x3c!-- <ion-label color="{{(respMsg.status==\'success\')?\'primary\':\'danger\'}}" *ngIf="respMsg">\n          {{(respMsg.status==\'success\')?respMsg.msg:respMsg.error_description}}\n      </ion-label> --\x3e\n\n        </form>\n    </ion-grid>\n\n</ion-content>'},"m/4U":function(n,t,e){"use strict";e.r(t),t.default=""},mP49:function(n,t,e){"use strict";e.d(t,"a",(function(){return a}));var o=e("mrSG"),i=e("fXoL"),r=e("TEn/"),s=e("sRcL");let a=class{constructor(n,t,e,o){this.modalController=n,this.ajax=t,this.navCtlr=e,this.navparam=o,this.loadProgress=0,this.multipal=0}ngOnInit(){}dismiss(n=!1){this.modalController.dismiss({dismissed:n})}loderstart(){setTimeout(()=>{let n=setInterval(()=>{this.loadProgress<1e3?this.loadProgress+=.1:1e3===this.loadProgress?clearInterval(n):clearInterval(this.loadProgress)},200)},200)}};a.ctorParameters=()=>[{type:r.h},{type:s.a},{type:r.i},{type:r.j}],a=Object(o.c)([Object(i.n)({selector:"app-abha-loader",template:Object(o.e)(e("KjQ/")).default,styles:[Object(o.e)(e("WH08")).default]})],a)},oNgc:function(n,t,e){"use strict";e.r(t),t.default=""},pG8S:function(n,t,e){"use strict";e.r(t),t.default=".closebtntxt {\n  position: absolute;\n  left: 92%;\n  top: -15px;\n  color: #fff;\n}\n@media only screen and (min-width: 768px) {\n  .closebtntxt {\n    left: 95%;\n    top: -14px;\n  }\n}\n@media only screen and (min-width: 992px) {\n  .closebtntxt {\n    left: 96%;\n    top: -15px;\n  }\n}"},pZaC:function(n,t,e){"use strict";e.d(t,"a",(function(){return u}));var o=e("mrSG"),i=e("NFKh"),r=e("9ans"),s=e("fXoL"),a=e("TEn/"),l=e("3Pt+"),d=e("AytR"),c=e("sRcL"),m=e("tyNb");let u=class{constructor(n,t,e,o,r,s){this.modalController=n,this.formBuilder=t,this.ajax=e,this.router=o,this.auth=r,this.platform=s,this.deviceSize=this.platform.isLandscape(),this.isSubmitted=!1,this.respMsg=null,this.validationArray={pin:[{value:"",disabled:!1},[l.f.required,l.f.pattern("^[0-9]+$"),l.f.maxLength(6),l.f.minLength(6)]],cpin:[{value:"",disabled:!1},[l.f.required,l.f.pattern("^[0-9]+$"),l.f.maxLength(6),l.f.minLength(6)]]},this.did=Object(i.MD5)(this.auth.getDeviceId()).toString(),this.pinShow=!1,this.cpinShow=!1}ngAfterViewChecked(){this.updateForm.controls.pin.valid||this.pinElement.setFocus()}ngOnInit(){this.updateForm=this.formBuilder.group(this.validationArray,{validator:this.ConfirmedValidator("pin","cpin")})}changeType(n){"pin"==n?this.pinShow=!this.pinShow:this.cpinShow=!this.cpinShow}get errorControl(){return this.updateForm.controls}ConfirmedValidator(n,t){return e=>{const o=e.controls[n],i=e.controls[t];i.errors&&!i.errors.confirmedValidator||(o.value!==i.value?i.setErrors(null):i.setErrors({confirmedValidator:!0}))}}submitForm(){if(this.isSubmitted=!0,this.respMsg=null,!this.updateForm.valid)return!1;{this.ajax.showLoader("");let n=d.a.reset_pin,t=i.enc.Utf8.parse("\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0"),e=i.enc.Utf8.parse(this.did),o=i.AES.encrypt(this.updateForm.get("pin").value,e,{iv:t}).toString(),r=i.AES.encrypt(this.updateForm.get("cpin").value,e,{iv:t}).toString(),s=encodeURI(encodeURI(o.replace(/\+/,"---"))),a=encodeURI(encodeURI(r.replace(/\+/,"---"))),l=encodeURI("old_pin="+s+"&new_pin="+a);this.ajax.postMethod(n,l,{}).subscribe(n=>{this.ajax.hideLoader(),this.respMsg=n,"success"==n.status&&(this.respMsg={status:"success",msg:n.message},this.ajax.showToast(n.message,5e3,"success","bottom"),this.dismiss(!0))})}}dismiss(n=!0){this.modalController.dismiss({dismissed:n})}};u.ctorParameters=()=>[{type:a.h},{type:l.a},{type:c.a},{type:m.g},{type:r.a},{type:a.k}],Object(o.c)([Object(s.nb)("pin")],u.prototype,"pinElement",void 0),u=Object(o.c)([Object(s.n)({selector:"app-update-pin",template:Object(o.e)(e("85Y/")).default,styles:[Object(o.e)(e("5gva")).default]})],u)},qULd:function(n,t,e){"use strict";e.d(t,"a",(function(){return r})),e.d(t,"b",(function(){return s})),e.d(t,"c",(function(){return i})),e.d(t,"d",(function(){return l})),e.d(t,"e",(function(){return a}));const o={getEngine(){const n=window;return n.TapticEngine||n.Capacitor&&n.Capacitor.isPluginAvailable("Haptics")&&n.Capacitor.Plugins.Haptics},available(){return!!this.getEngine()},isCordova:()=>!!window.TapticEngine,isCapacitor:()=>!!window.Capacitor,impact(n){const t=this.getEngine();if(!t)return;const e=this.isCapacitor()?n.style.toUpperCase():n.style;t.impact({style:e})},notification(n){const t=this.getEngine();if(!t)return;const e=this.isCapacitor()?n.style.toUpperCase():n.style;t.notification({style:e})},selection(){this.impact({style:"light"})},selectionStart(){const n=this.getEngine();n&&(this.isCapacitor()?n.selectionStart():n.gestureSelectionStart())},selectionChanged(){const n=this.getEngine();n&&(this.isCapacitor()?n.selectionChanged():n.gestureSelectionChanged())},selectionEnd(){const n=this.getEngine();n&&(this.isCapacitor()?n.selectionEnd():n.gestureSelectionEnd())}},i=()=>{o.selection()},r=()=>{o.selectionStart()},s=()=>{o.selectionChanged()},a=()=>{o.selectionEnd()},l=n=>{o.impact(n)}},qvQA:function(n,t,e){"use strict";e.r(t),t.default=""},sdq4:function(n,t,e){"use strict";e.d(t,"a",(function(){return s}));var o=e("mrSG"),i=e("TEn/"),r=e("fXoL");let s=class{constructor(n){this.modalCtlr=n,this.data=null}ngOnInit(){}dismiss(){this.modalCtlr.dismiss()}};s.ctorParameters=()=>[{type:i.h}],s=Object(o.c)([Object(r.n)({selector:"app-doc-detail",template:Object(o.e)(e("Urq9")).default,styles:[Object(o.e)(e("qvQA")).default]})],s)},spDm:function(n,t,e){"use strict";e.d(t,"a",(function(){return i})),e.d(t,"b",(function(){return r}));var o=e("W6o/");const i=async(n,t,e,i,r)=>{if(n)return n.attachViewToDom(t,e,r,i);if("string"!=typeof e&&!(e instanceof HTMLElement))throw new Error("framework delegate is missing");const s="string"==typeof e?t.ownerDocument&&t.ownerDocument.createElement(e):e;return i&&i.forEach(n=>s.classList.add(n)),r&&Object.assign(s,r),t.appendChild(s),await new Promise(n=>Object(o.c)(s,n)),s},r=(n,t)=>{if(t){if(n){const e=t.parentElement;return n.removeViewFromDom(e,t)}t.remove()}return Promise.resolve()}},uAdG:function(n,t,e){"use strict";e.r(t),t.default=""},vEKE:function(n,t,e){"use strict";e.r(t),t.default=""},xYor:function(n,t,e){"use strict";e.r(t),t.default='\x3c!-- <ion-header>\n    <ion-toolbar>\n        <ion-title>health-number</ion-title>\n    </ion-toolbar>\n</ion-header> --\x3e\n\n<ion-content class="ion-padding">\n    <ion-grid [fixed]="true">\n        <ion-toolbar>\n            <ion-title color="tertiary">\n                <strong>Login to ABHA Account </strong>\n            </ion-title>\n            <ion-buttons class="lsm" slot="start">\n                <ion-button (click)="dismiss()" color="dark" fill="clear" shape="round" size="small">\n                    <ion-icon ios="arrow-back" color="dark" md="arrow-back"></ion-icon>\n                </ion-button>\n            </ion-buttons>\n        </ion-toolbar>\n    </ion-grid>\n    <ion-grid [fixed]="true" class="lsm">\n        <ion-row>\n            <ion-col size-md="12" size="12">\n                \x3c!-- <ion-card mode="ios" class="ion-padding ion-no-margin"> --\x3e\n                <form [formGroup]="OTPForm" (ngSubmit)="submitOTPForm()" novalidate>\n                    <ion-row>\n                        <ion-col size-md="4" size="12" *ngIf="deviceSize">\n                            <ion-item lines="none">\n                                <ion-label *ngIf="this.authMe != null">ABHA Number</ion-label>\n                                <ion-label *ngIf="this.authMe == null">ABHA Id</ion-label>\n                            </ion-item>\n                        </ion-col>\n                        <ion-col size-md="8" size="12">\n                            <ion-item lines="full" mode="md">\n                                <ion-label position="floating" *ngIf="!deviceSize">ABHA ID\n                                </ion-label>\n                                <ion-input type="text" placeholder="12-1245-5426-4258" formControlName="hl_id" required\n                                    #hl_id minlength="3"></ion-input>\n                            </ion-item>\n                            <p *ngIf="isSubmitted && errorControl.hl_id.errors?.required">\n                                <ion-text color="danger" class="ion-margin">\n                                    ABHA ID is required\n                                </ion-text>\n                            </p>\n                        </ion-col>\n                    </ion-row>\n\n                    <ion-row *ngIf="authMethods.length != 1">\n                        <ion-col size=12 size-xl="4" *ngIf="deviceSize">\n                            <ion-item lines="none">\n                                <ion-label>Validate Using</ion-label>\n                            </ion-item>\n                        </ion-col>\n                        <ion-col size=12 size-xl="8" *ngIf="authMethods.length != 1">\n                            <ion-radio-group formControlName="methods"  >\n                                <ion-item lines="none" mode="md" (click)="otpInput(methods)"\n                                    *ngFor="let methods of authMethods">\n                                    <label for="password">&nbsp;{{(methods === \'AADHAAR_OTP\')?\'Aadhaar OTP\':(methods ===\n                                        \'MOBILE_OTP\')?\'Mobile OTP\':(methods === \'EMAIL_OTP\')?\'Email OTP\':(methods ===\n                                        \'PASSWORD\')?\'Password\':\'\'}}</label>\n                                    <ion-radio slot="start" (click)="otpInput(methods)"  \n                                       value="{{methods}}"></ion-radio>\n                                    \n                                </ion-item>\n                            </ion-radio-group>\n                            <p *ngIf="isSubmitted && errorControl.methods.errors?.required">\n                                <ion-text color="danger" class="ion-margin">\n                                    Validate Methods is required.\n                                </ion-text>\n                            </p>\n\n                        </ion-col>\n\n                    </ion-row>\n                    <ion-row *ngIf="authMethods.length == 1">\n                        <ion-col size=12 size-xl="4" *ngIf="deviceSize">\n                            <ion-item lines="none">\n                                <ion-label></ion-label>\n                            </ion-item>\n                        </ion-col>\n\n                        <ion-col size=12 size-xl="8">\n                            <ion-item lines="none" *ngFor="let methods of authMethods">\n                                <label>Validate Using {{(methods === \'AADHAAR_OTP\')?\'Aadhaar OTP\':(methods ===\n                                    \'MOBILE_OTP\')?\'Mobile OTP\':(methods === \'EMAIL_OTP\')?\'Email OTP\':Password}}</label>\n                            </ion-item>\n                        </ion-col>\n\n                    </ion-row>\n                    <ion-row *ngIf=" otpmsg">\n                        <ion-col size-xl="4" size="12">\n                            <ion-item lines="none">\n                                <ion-label></ion-label>\n                            </ion-item>\n                        </ion-col>\n                        <ion-col size-xl="8" size="12">\n                            <ion-item lines="none" class="no-padding-start">\n                                <ion-badge color="{{(otp)?\'success\':\'danger\'}}" class="ion-padding ion-text-wrap"\n                                    mode="ios">\n                                    {{otpmsg}}\n                                </ion-badge>\n                                \x3c!-- <ion-badge color="success" class="ion-padding ion-text-wrap" mode="ios">\n                                    {{otpmsg}}\n                                </ion-badge> --\x3e\n                            </ion-item>\n                        </ion-col>\n                    </ion-row>\n                    <ion-row *ngIf="cotp">\n                        <ion-col size-md="4" size="12">\n                            <ion-item lines="none">\n                                <ion-label>{{(pass === \'PASSWORD\')?\'password\':\'OTP\'}}</ion-label>\n                            </ion-item>\n                        </ion-col>\n                        <ion-col size-md="8" size="12">\n                            <ion-item lines="full">\n                                <ion-input type="{{otpShow? \'text\': \'password\'}}" formControlName="otp" #otp>\n                                </ion-input>\n                                <ion-icon class="cursor" *ngIf="!errorControl.otp.pristine" (click)="changeType(\'otp\') "\n                                    color="{{otpShow? \'primary\': \'dark\'}}" name="{{otpShow? \'eye\': \'eye-off\'}}"\n                                    slot="end"></ion-icon>\n                            </ion-item>\n                            <p *ngIf="isSubmitted && errorControl.otp.errors?.required">\n                                <ion-text color="danger" class="ion-margin">\n                                    {{(pass === \'PASSWORD\')?\'password\':\'OTP\'}} is required\n                                </ion-text>\n                            </p>\n                            <ion-row *ngIf="pass != \'PASSWORD\'">\n                                <ion-col>\n                                    <ion-text color="{{maxTime?\'dark\':\'primary\'}}">\n                                        {{(maxTime > 0)? \'Wait for the OTP, if not received try resend OTP after \' +\n                                        maxTime + \' seconds\' :\'\'}}\n                                    </ion-text>\n                                    <ion-text *ngIf="!maxTime" (click)="resendOtp()" type="submit" fill="clear"\n                                        size="small" class="cursor" color="primary">Resend OTP\n                                    </ion-text>\n                                </ion-col>\n                            </ion-row>\n                        </ion-col>\n                    </ion-row>\n\n                    <ion-row class="ion-text-end">\n                        <ion-col>\n                            <ion-button color="primary" expand="block " class="ion-float-right " type="submit">\n                                {{(OTPForm.value.otp)?\'Submit\':\'Continue\'}}</ion-button>\n                        </ion-col>\n                    </ion-row>\n                </form>\n                \x3c!-- </ion-card> --\x3e\n            </ion-col>\n        </ion-row>\n    </ion-grid>\n</ion-content>'},y5PO:function(n,t,e){"use strict";e.d(t,"a",(function(){return m}));var o=e("mrSG"),i=e("fXoL"),r=e("TEn/"),s=e("3Pt+"),a=e("AytR"),l=e("sRcL"),d=e("sYmb"),c=e("VBEu");let m=class{constructor(n,t,e,o,i,r,s){this.modalController=n,this.formBuilder=t,this.ajax=e,this.navparam=o,this.platform=i,this.translate=r,this.encrypt=s,this.deviceSize=this.platform.isLandscape(),this.isSubmitted=!1,this.otp=!1,this.otpInput="",this.respMsg=null,this.maxTime=120,this.timer=null,this.profile=this.navparam.get("profile"),this.otpShow=!1}ngAfterViewChecked(){this.updateForm.controls.email.valid||this.emailElement.setFocus(),this.updateForm.controls.otp.valid||this.otpElement.setFocus()}ngOnInit(){this.validationArray={email:[{value:"",disabled:!1},[s.f.required,s.f.pattern("[A-Za-z0-9._%+-]+@[a-z0-9.-]+.[a-z]{2,4}$")]],otp:[{value:"",disabled:!1},[]]},this.updateForm=this.formBuilder.group(this.validationArray,{validator:this.ConfirmedValidator("email")})}changeType(n){this.otpShow=!this.otpShow}get errorControl(){return this.updateForm.controls}ConfirmedValidator(n){return t=>{const e=this.profile.email,o=t.controls[n];o.errors&&!o.errors.notequalto||(e!==o.value?o.setErrors(null):o.setErrors({notequalto:!0}))}}submitForm(){if(this.isSubmitted=!0,!this.updateForm.valid)return!1;{this.respMsg=null,this.ajax.showLoader("");let n=this.updateForm.value.otp?a.a.emailupdate_verify_otp:a.a.emailupdate_send_otp,t=this.updateForm.value.otp?encodeURI("email="+this.updateForm.get("email").value+"&otp="+this.encrypt.getEncryptedValue(this.updateForm.get("otp").value)):encodeURI("email="+this.updateForm.get("email").value);this.ajax.postMethod(n,t,{}).subscribe(n=>{this.ajax.hideLoader(),this.isSubmitted=!1,this.respMsg=n,"success"==n.status?(this.ngAfterViewChecked(),this.respMsg.msg="OTP sent to your new Email id.",this.respMsg.msg=this.translate.instant(this.respMsg.msg),this.otp=!0,this.updateForm.value.otp?(this.ajax.showToast(this.translate.instant("Email updated successfully."),5e3,"success","bottom"),this.dismiss(!0)):(this.StartTimer(),this.validationArray.email=[{value:this.updateForm.get("email").value,disabled:!1},[s.f.required,s.f.pattern("[A-Za-z0-9._%+-]+@[a-z0-9.-]+.[a-z]{2,3}$")]],this.validationArray.otp=["",[s.f.required,s.f.pattern("^[0-9]+$"),s.f.maxLength(6),s.f.minLength(6)]],this.updateForm=this.formBuilder.group(this.validationArray))):(this.respMsg.error_description=this.translate.instant(this.respMsg.error_description),console.log(this.respMsg.error_description))})}}resendOtp(){if(this.respMsg=null,this.otpInput="",this.updateForm.value.otp="",this.maxTime=120,!this.updateForm.get("email").valid)return!1;{this.ajax.showLoader("");let n=a.a.emailupdate_send_otp,t=encodeURI("email="+this.updateForm.get("email").value);this.ajax.postMethod(n,t,{}).subscribe(n=>{this.ajax.hideLoader(),this.respMsg=n,"success"==n.status&&(this.StartTimer(),this.respMsg.msg=this.translate.instant("OTP re-sent to your new Email id."))})}}StartTimer(){setTimeout(n=>{this.maxTime>0&&(this.StartTimer(),this.maxTime=this.maxTime-1)},1e3)}dismiss(n=!1){this.modalController.dismiss({dismissed:n})}};m.ctorParameters=()=>[{type:r.h},{type:s.a},{type:l.a},{type:r.j},{type:r.k},{type:d.c},{type:c.a}],Object(o.c)([Object(i.nb)("email")],m.prototype,"emailElement",void 0),Object(o.c)([Object(i.nb)("otp")],m.prototype,"otpElement",void 0),m=Object(o.c)([Object(i.n)({selector:"app-update-email",template:Object(o.e)(e("Z3Kw")).default,styles:[Object(o.e)(e("TGoH")).default]})],m)},zFpd:function(n,t,e){"use strict";e.r(t),t.default='<ion-header>\n    <ion-toolbar>\n        <ion-buttons slot="start">\n            <ion-menu-button></ion-menu-button>\n        </ion-buttons>\n\n    </ion-toolbar>\n</ion-header>\n<ion-content class="ion-padding">\n    <ion-grid [fixed]="true">\n\n        <ion-row>\n            <ion-col size-md="8" offset-md="2">\n                <ion-row>\n                    <ion-col>\n                        <ion-text color="tertiary" mode="ios" class="ion-text-center">\n                            <h2><strong>\n                                {{"VerifyAadhaarHeader" | translate}}\n                            </strong>\n                            </h2>\n                        </ion-text>\n                        <ion-text class="ion-text-center">\n\n                            <h4>{{"VerifyAadhaarSubHeading" | translate}}</h4>\n                        </ion-text>\n\n                    </ion-col>\n                    \n                </ion-row>\n                <ion-row>\n                    <ion-col size-md="10" offset-md="1">\n\n                        <ion-card class="ion-padding ion-no-margin" mode="ios">\n\n                            <form [formGroup]="updateProfileForm" (ngSubmit)="submitForm()" novalidate>\n                                <ion-row>\n                                    <ion-col size-md="4" size="4">\n                                        <ion-item lines="none">\n                                            <ion-label>{{"Aadhaar" | translate}}</ion-label>\n                                        </ion-item>\n                                    </ion-col>\n                                    <ion-col size-md="8" size="8">\n                                        <ion-item lines="full" mode="md">\n                                            <ion-input (keypress)="ajax.numberOnlyValidation($event)" maxlength="12" minlength="12" formControlName="aadhar" type="text" required #aadhar></ion-input>\n                                        </ion-item>\n                                        <ion-text color="danger" *ngIf="isSubmitted && errorControl.aadhar.errors?.required">\n                                            {{\'Aadhaar Number is required\' | translate}}\n                                        </ion-text>\n                                        <ion-text color="danger" *ngIf="isSubmitted && errorControl.aadhar.errors?.pattern">\n                                            {{\'OnlyNumbers\' | translate}}\n                                        </ion-text>\n                                        <ion-text color="danger" *ngIf="isSubmitted && (errorControl.aadhar.errors?.maxlength || errorControl.aadhar.errors?.minlength)">\n                                            {{\'Must be of 12 digit\' | translate}}\n                                        </ion-text>\n                                    </ion-col>\n                                </ion-row>\n\n                                <ion-row>\n                                    <ion-col size-md="4" size="4">\n                                        <ion-item lines="none">\n                                            <ion-label>{{"Name" | translate}}</ion-label>\n                                        </ion-item>\n                                    </ion-col>\n                                    <ion-col size-md="8" size="8">\n                                        <ion-item lines="full" mode="md">\n                                            <ion-input (keypress)="ajax.nameValidation($event)" [attr.disabled]="!errorControl.aadhar.valid" formControlName="name" minlength="2" type="text" required></ion-input>\n                                        </ion-item>\n                                        <ion-text color="danger" *ngIf="isSubmitted && errorControl.name.errors?.required">\n                                            {{\'Name is required\' | translate}}\n                                        </ion-text>\n                                        <ion-text color="danger" *ngIf="isSubmitted && errorControl.name.errors?.pattern">\n                                            {{\'Only alphabets, numbers and space values allowed\' | translate}}\n                                        </ion-text>\n                                    </ion-col>\n                                </ion-row>\n\n                                <ion-row>\n                                    <ion-col size-md="4" size="4">\n                                        <ion-item lines="none">\n                                            <ion-label>{{"DOB" | translate}}</ion-label>\n                                        </ion-item>\n                                    </ion-col>\n                                    <ion-col size-md="8" size="8">\n                                        <ion-item lines="full" mode="md">\n                                            <ion-input placeholder="" [attr.disabled]="!errorControl.name.valid" type="date" [min]="minDate" [max]="maxDate" displayFormat="DD MMMM YYYY" (ionChange)="getDate($event)" formControlName="dob" required></ion-input>\n                                        </ion-item>\n                                        <ion-text color="danger" *ngIf="isSubmitted && errorControl.dob.errors?.required">\n                                            {{\'DOB is required\' | translate}}\n                                        </ion-text>\n                                        <ion-text color="danger" *ngIf="errorControl.dob.errors?.dobValidator">\n                                            {{\'Date of birth is not valid\' | translate}}\n                                        </ion-text>\n                                    </ion-col>\n                                </ion-row>\n\n                                <ion-row>\n                                    <ion-col size-md="4" size="4">\n                                        <ion-item lines="none">\n                                            <ion-label>{{"Gender" | translate}} </ion-label>\n                                        </ion-item>\n                                    </ion-col>\n                                    <ion-col size-md="8" size="8">\n                                        <ion-item lines="none" mode="md">\n                                            <ion-radio-group value="Gender" formControlName="gender" style="display: inline-flex;" class="ion-no-padding-start" required>\n\n                                                <ion-item lines="none" class="ion-no-padding">\n                                                    <ion-label>{{"Male" | translate}}</ion-label>\n                                                    <ion-radio [attr.disabled]="!errorControl.dob.valid" slot="start" value="M"></ion-radio>\n                                                </ion-item>\n\n                                                <ion-item lines="none" class="ion-no-padding">\n                                                    <ion-label>{{"Female" | translate}}</ion-label>\n                                                    <ion-radio [attr.disabled]="!errorControl.dob.valid" slot="start" value="F"></ion-radio>\n                                                </ion-item>\n                                                \x3c!-- <ion-item lines="none" class="ion-no-padding">\n                                                    <ion-label>{{"Transgender" | translate}}</ion-label>\n                                                    <ion-radio [attr.disabled]="!errorControl.dob.valid" slot="start" value="T"></ion-radio>\n                                                </ion-item> --\x3e\n\n                                                <ion-item lines="none" class="ion-no-padding">\n                                                    <ion-label>{{\'Other\' | translate}}</ion-label>\n                                                    <ion-radio [attr.disabled]="!errorControl.dob.valid" slot="start" value="O"></ion-radio>\n                                                </ion-item>\n\n                                            </ion-radio-group>\n                                        </ion-item>\n                                        <ion-label color="danger" *ngIf="isSubmitted && errorControl.gender.errors?.required">\n                                            {{\'Gender is required\' | translate}}\n                                        </ion-label>\n                                    </ion-col>\n                                </ion-row>\n\n                                <ion-row>\n                                    <ion-col>\n                                        <ion-list>\n                                            <ion-item lines="none" mode="md">\n                                                <ion-text> <small>{{\'verifyAadhaarConsent\' | translate}}</small></ion-text>\n                                                <ion-checkbox mode="md" slot="start" [attr.disabled]="!errorControl.gender.valid" [checked]="true" mode="ios" formControlName="consent" (ionChange)="onTermsChecked()" required></ion-checkbox>\n                                            </ion-item>\n                                        </ion-list>\n                                        <ion-label color="danger" *ngIf="isSubmitted && errorControl.consent.errors?.required">\n                                            {{\'verifyAadhaarConsentError\' | translate}}\n                                        </ion-label>\n                                    </ion-col>\n                                </ion-row>\n\n\n                                <ion-row>\n                                    <ion-col>\n                                        <ion-button type="submit" color="primary" class="ion-float-right" mode="md">{{"Submit" | translate}}</ion-button>\n                                    </ion-col>\n                                </ion-row>\n\n                            </form>\n                        </ion-card>\n\n                    </ion-col>\n                </ion-row>\n            </ion-col>\n        </ion-row>\n    </ion-grid>\n</ion-content>'}}]);