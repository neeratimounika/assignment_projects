(window.webpackJsonp=window.webpackJsonp||[]).push([[24],{GNVt:function(o,n,t){"use strict";t.r(n),n.default='\x3c!-- <ion-header>\n  <ion-toolbar>\n    <ion-title>update-address</ion-title>\n  </ion-toolbar>\n</ion-header> --\x3e\n\n<ion-content class="ion-padding">\n    <ion-grid>\n        <ion-toolbar>\n            <ion-title color="tertiary">\n                <strong>Verify OTP </strong>\n            </ion-title>\n            <ion-buttons slot="start">\n                <ion-button (click)="dismiss()" color="dark" fill="clear" shape="round" size="small">\n                    <ion-icon ios="arrow-back" md="arrow-back"></ion-icon>\n                </ion-button>\n            </ion-buttons>\n        </ion-toolbar>\n\n        <ion-row>\n            <ion-col class="ion-no-padding">\n                <form [formGroup]="verifyOTPForm" (ngSubmit)="submitForm()" novalidate>\n\n                <ion-row class="ion-margin-top" *ngIf="respMsg">\n                    \x3c!-- <ion-col size-md="4" size="12">\n                        <ion-item lines="none">\n                            <ion-label></ion-label>\n                        </ion-item>\n                    </ion-col> --\x3e\n                    <ion-col size-md="12" size="12">\n                        <ion-item lines="none" class="ion-no-padding-start">\n                            <ion-badge color="{{(respMsg.status)?\'success\':\'warning\'}}" class="ion-padding ion-text-wrap ion-margin" mode="ios">\n                                {{respMsg.response}}\n                            </ion-badge>\n                        </ion-item>\n                    </ion-col>\n                </ion-row>\n\n                <ion-row *ngIf="otpSend">\n                    <ion-col size-md="4" size="12">\n                        <ion-item lines="none">\n                            <ion-label>OTP</ion-label>\n                        </ion-item>\n                    </ion-col>\n                    <ion-col size-md="8" size="12">\n                        <ion-item lines="full">\n                            <ion-input (keypress)="ajax.numberOnlyValidation($event)" maxlength="6" minlength="6" formControlName="otp" type="{{otpShow?\'text\':\'password\'}}" required #otp></ion-input>\n                            <ion-icon class="cursor" *ngIf="!errorControl.otp.pristine" (click)="changeType(\'otp\')" color="{{otpShow?\'primary\':\'dark\'}}" name="{{otpShow?\'eye\':\'eye-off\'}}" slot="end"></ion-icon>\n                        </ion-item>\n                        <ion-text color="danger" *ngIf="otp && isSubmitted && errorControl.otp.errors?.required ">\n                            OTP is required.\n                        </ion-text>\n                        <ion-text color="danger" *ngIf="otp && isSubmitted && errorControl.otp.errors?.pattern">\n                            Only numerical values allowed.\n                        </ion-text>\n                        <ion-text color="danger" *ngIf="otp && isSubmitted && (errorControl.otp.errors?.maxlength || errorControl.otp.errors?.minlength)">\n                            OTP must be of 6 digit.\n                        </ion-text>\n                        <br />\n\n                        <ion-text >\n                            {{(maxTime>0)?\'Wait for the OTP, if not received try Resend OTP after  \'+maxTime+\' second\':\'\'}}\n                            <ion-text *ngIf="maxTime==0" (click)="resendOtp()" type="submit" fill="clear" size="small" class="cursor" color="primary">Resend OTP</ion-text>\n                        </ion-text>\n                    </ion-col>\n                </ion-row>\n               \n\n                <ion-row>\n                    <ion-col>\n                        <ion-label class="ion-text-right">\n                            <ion-button class="ion-float-right" type="submit" color="primary" expand="block" mode="ios">Verify</ion-button>\n                        </ion-label>\n                    </ion-col>\n                </ion-row>\n                 </form>\n            </ion-col>\n        </ion-row>\n    </ion-grid>\n</ion-content>'},KPO1:function(o,n,t){"use strict";t.r(n),t.d(n,"UpdateAddressPageModule",(function(){return b}));var i=t("mrSG"),e=t("fXoL"),s=t("ofXK"),r=t("3Pt+"),a=t("sYmb"),l=t("TEn/"),d=t("tyNb"),c=t("sRcL"),m=t("AytR");let p=class{constructor(o,n,t,i,e){this.modalController=o,this.ajax=n,this.formBuilder=t,this.navparam=i,this.navCtlr=e,this.isSubmitted=!1,this.otpShow=!1,this.otpSend=!1,this.maxTime=120,this.uri=this.navparam.get("uri")}ngOnInit(){this.resendOtp(),this.verifyOTPForm=this.formBuilder.group({otp:[null,[]]})}resendOtp(){this.respMsg=null,this.ajax.showLoader();let o=m.a.address_sendOtp;this.ajax.postMethod(o,{},{}).subscribe(o=>{this.ajax.hideLoader(),o.status&&(this.respMsg=o,this.otpSend=!0,this.maxTime=120,this.StartTimer())})}submitForm(){if(this.isSubmitted=!0,!this.verifyOTPForm.valid)return!1;{this.ajax.showLoader();let o={"content-type":"application/json"},n=m.a.address_verifyOtp,t={uri:this.uri,otp:this.verifyOTPForm.value.otp};this.ajax.postMethod(n,t,o).subscribe(o=>{this.ajax.hideLoader(),this.respMsg=o,o.status&&(this.ajax.showToast(o.response,5e3,"success"),this.dismiss(!0))})}}StartTimer(){setTimeout(o=>{this.maxTime>0&&(this.StartTimer(),this.maxTime=this.maxTime-1)},1e3)}changeType(o){this.otpShow=!this.otpShow}get errorControl(){return this.verifyOTPForm.controls}dismiss(o=!1){this.modalController.dismiss({dismissed:o})}};p.ctorParameters=()=>[{type:l.h},{type:c.a},{type:r.a},{type:l.j},{type:l.i}],p=Object(i.c)([Object(e.n)({selector:"app-update-address",template:Object(i.e)(t("GNVt")).default,styles:[Object(i.e)(t("YoOV")).default]})],p);const h=[{path:"",component:p}];let u=class{};u=Object(i.c)([Object(e.M)({imports:[d.i.forChild(h)],exports:[d.i]})],u);let b=class{};b=Object(i.c)([Object(e.M)({imports:[s.b,r.b,r.e,l.d,u,a.b.forChild()],declarations:[p]})],b)},YoOV:function(o,n,t){"use strict";t.r(n),n.default=""}}]);