(window.webpackJsonp=window.webpackJsonp||[]).push([[60],{ZWji:function(e,i,t){"use strict";t.r(i),t.d(i,"DrivePageModule",(function(){return m}));var n=t("mrSG"),o=t("fXoL"),a=t("ofXK"),s=t("3Pt+"),l=t("TEn/"),r=t("tyNb"),c=t("sRcL"),d=t("AytR"),h=t("jhN1"),p=t("sdq4");let u=class{constructor(e,i,t,n,o,a){this.navCtlr=e,this.ajax=i,this.router=t,this.sanitizer=n,this.modalController=o,this.popoverCtrl=a,this.hlData=[],this.hlid=null,this.msg=!1,this.currentDirectory="",this.isSkeleton=!0,this.fileUpload=null,this.base64file=null,this.fileSize=null}ngOnInit(){const e=this.router.getCurrentNavigation().extras.state;null!=e?this.hlid=e:this.navCtlr.navigateRoot("services/abha"),this.getHLdocList(this.currentDirectory)}callDirectory(e){let i=e.Name;if(this.fileSize=this.myFunc(10485760,e.Size),""!=i){let e=this.currentDirectory+"/"+i;this.getHLdocList(e)}else this.getHLdocList(i)}myFunc(e,i){return e-i}getHLdocList(e){let i={"content-type":"application/json",path:this.hlid+e},t=d.a.ndhm_drive_list;this.ajax.postMethod(t,{},i).subscribe(i=>{if(i.status)if(this.currentDirectory=e,this.isSkeleton=!1,0==i.response.data.length&&""==e){this.hlData=i.response.data;let e={Ext:"Collection",Key:"",LastModified:"",Name:"HealthDocumentRecord",Size:0,human_size:"0 KB"};this.hlData.push(e)}else this.hlData=i.response.data;else this.ajax.showToast(i.response,5e3,"warning")})}delete(e){this.ajax.showLoader();let i={"content-type":"application/json",path:this.hlid+this.currentDirectory},t=d.a.ndhm_drive_delete,n={name:e};this.ajax.postMethod(t,n,i).subscribe(e=>{this.ajax.hideLoader(),e.status?(this.ajax.showToast("File deleted  successfully ",5e3,"success"),this.getHLdocList(this.currentDirectory)):this.ajax.showToast(e.response,5e3,"success")})}docRead(e,i){var t=this.currentDirectory+"/"+e;this.ajax.showLoader();let n={"content-type":"application/json",path:this.hlid+t},o=d.a.ndhm_drive_read;this.ajax.postMethod(o,{},n).subscribe(e=>{this.ajax.hideLoader(),e.status?this.viewDocuments(e.response.Body,i):this.ajax.showToast(e.response.error_description,5e3,"warning")})}viewDocuments(e,i){let t={Ext:i},n=e;this.viewDetail(t,n)}viewDetail(e,i){return Object(n.b)(this,void 0,void 0,(function*(){let t=e.Ext.toLowerCase(),n=["jpg","jpeg"].includes(t)?this.sanitizer.bypassSecurityTrustUrl("data:image/jpg;base64,"+i):["png"].includes(t)?this.sanitizer.bypassSecurityTrustUrl("data:image/png;base64,"+i):["pdf"].includes(t)?this.sanitizer.bypassSecurityTrustResourceUrl("data:application/pdf;base64,"+i):"";return(yield this.modalController.create({component:p.a,swipeToClose:!0,componentProps:{data:n,file:e}})).present()}))}upload(e){var i=e.target.files;let t=new FileReader;if(t.readAsDataURL(i[0]),t.onload=()=>{let e=t.result;this.base64file=e},i.length>0){var n=i[0],o=new FileReader;this.checkFileMimeType(o,e=>{if(n.type==e)if(this.alreadyExistByName(n.name.replace(/ /g,"")))this.ajax.showToast("A file with this name already exists",5e3,"danger");else if(this.validFileSize(n)){let e=this.validFileSize(n);this.ajax.showToast(e.msg,5e3,"danger")}else this.fileSize=this.myFunc(this.fileSize,n.size),this.uploadAjaxCall(this.base64file,n.name);else this.ajax.showToast("Files with extension JPG,  PDF, PNG are allowed or a currupted file. Please try another file.",5e3,"danger")}),o.readAsArrayBuffer(n),this.fileUpload=null}}alreadyExistByName(e){if(!(this.hlData.length>0))return null;for(let i of this.hlData)if(e==i.Name)return{isValid:!1,msg:"A file with this name already exists"}}checkFileMimeType(e,i){return Object(n.b)(this,void 0,void 0,(function*(){e.onload=function(e){for(var t=new Uint8Array(e.target.result).subarray(0,4),n="",o=0;o<t.length;o++)n+=t[o].toString(16);var a="unknown";switch(n){case"89504e47":a="image/png";break;case"47494638":case"ffd8ffe0":case"ffd8ffe1":case"ffd8ffe2":a="image/jpeg";break;case"25504446":a="application/pdf"}i(a)}}))}validFileSize(e){return this.fileSize<10485760&&this.fileSize>1048576?e.size>1048576?{isValid:!1,msg:"Upload failed. Maximum file size is 1 MB."}:null:e.size<this.fileSize||e.size==this.fileSize?null:{isValid:!1,msg:"Upload failed. Now the maximum file size that you can upload is "+this.fileSize/Math.pow(1024,1)+" KB ."}}uploadAjaxCall(e,i){let t={path:this.hlid+this.currentDirectory+"/"+i,"content-type":"application/json"},n={attachment:e.split(",")[1]},o=d.a.ndhm_drive_upload;this.ajax.showLoader(),this.ajax.postMethod(o,n,t).subscribe(i=>{this.ajax.hideLoader(),i.status?(this.ajax.showToast(i.response,5e3,"success"),this.getHLdocList(this.currentDirectory)):null!=i.response?this.ajax.showToast(i.response,5e3,"warning"):this.ajax.showToast("File "+e.name+" could not be uploaded. Please try again.",5e3,"warning")})}dismiss(){if(""==this.currentDirectory){let e=this.hlid.split("@");this.navCtlr.navigateBack("services/abha/profile/"+e[0])}else{var e=this.currentDirectory.split("/");let i=e.slice(0,e.length-1).join("/");this.getHLdocList(i)}}};u.ctorParameters=()=>[{type:l.i},{type:c.a},{type:r.g},{type:h.b},{type:l.h},{type:l.l}],u=Object(n.c)([Object(o.n)({selector:"app-drive",template:Object(n.e)(t("kE8Y")).default,styles:[Object(n.e)(t("fMiv")).default]})],u);const f=[{path:"",component:u}];let g=class{};g=Object(n.c)([Object(o.M)({imports:[r.i.forChild(f)],exports:[r.i]})],g);let m=class{};m=Object(n.c)([Object(o.M)({imports:[a.b,s.b,l.d,g],declarations:[u]})],m)},fMiv:function(e,i,t){"use strict";t.r(i),i.default=""},kE8Y:function(e,i,t){"use strict";t.r(i),i.default='\x3c!-- <ion-header>\n  <ion-toolbar>\n      <ion-title></ion-title>\n  </ion-toolbar>\n</ion-header> --\x3e\n<ion-content class="ion-padding">\n    <div class="pageMargin"></div>\n    <ion-grid [fixed]="true">\n        <ion-toolbar>\n            <ion-title color="tertiary">\n                <strong (click)="home()" class="cursor">Uploaded Records </strong>\n                <strong class="cursor">  &nbsp;{{currentDirectory}}</strong>\n            </ion-title>\n            <ion-buttons slot="start" (click)="dismiss()">\n                <ion-button color="dark" fill="clear" shape="round" size="small">\n                    <ion-icon ios="arrow-back" slot="start" color="dark" md="arrow-back"></ion-icon>\n                </ion-button>\n            </ion-buttons>\n            <ion-button slot="end" *ngIf=" currentDirectory !=\'\' && fileSize != \'0\'">\n                <label for="file-upload" class="cursor"> Upload Files\n            </label>\n                <input id="file-upload" hidden type="file" accept="image/png, image/jpeg, application/pdfimage/png, image/jpeg, application/pdf" [(ngModel)]="fileUpload" (change)="upload($event)" />\n            </ion-button>\n\n        </ion-toolbar>\n        <div class="card ion-margin-bottom" *ngFor="let data of hlData">\n            <ion-card *ngIf="data.Ext == \'Collection\'" mode="ios" title="{{data.Name}}" (click)="callDirectory(data)">\n                <ion-item class="cursor" lines="none">\n                    <ion-icon name="folder" color="warning" slot="start" title="{{data.Name}}"></ion-icon>\n                    <ion-label>{{data.Name}}</ion-label>\n                    <ion-icon name="chevron-forward-outline" slot="end" size="small"></ion-icon>\n                </ion-item>\n            </ion-card>\n            <ion-card *ngIf="data.Ext != \'Collection\'" mode="ios" title="{{data.Name}}">\n                <ion-item class="cursor" lines="none">\n                    <ion-icon name="{{(data.Ext == \'pdf\')?\'document-text-outline\': \'image-outline\'}}" color="primary" slot="start" title="{{data.Name}}"></ion-icon>\n                    <ion-label (click)="docRead(data.Name,data.Ext)">{{data.Name}}</ion-label>\n                    <ion-button color="dark" fill="clear" size="small" shape="round" title="Download" class="ion-float-right" (click)="delete(data.Name)">\n                        <ion-icon class="cursor" name="trash"></ion-icon>\n                    </ion-button>\n                </ion-item>\n            </ion-card>\n\n        </div>\n        \x3c!-- <ion-row class="ion-no-margin" >\n              <ion-col class="ion-text-center">\n                  <ion-button >\n                      <label for="file-upload" class="cursor"> Upload Files\n                      </label>\n                      <input id="file-upload" type="file" accept="image/png, image/jpeg, application/pdfimage/png, image/jpeg, application/pdf" [(ngModel)]="fileUpload" (change)="upload($event)" />\n                  </ion-button>\n              </ion-col>\n      </ion-row> --\x3e\n        <ion-row *ngIf="hlData.length == 0 && !isSkeleton" class="ion-margin-top">\n            <ion-col size-md="8" offset="2">\n                <ion-row class="ion-margin-top">\n                    <ion-col class="ion-text-center">\n                        <img src="assets/img/Health_Locker.svg" width="30%">\n                    </ion-col>\n                </ion-row>\n                <ion-row class="ion-no-margin">\n                    <ion-col class="ion-text-center">\n                        <ion-title color="dark">\n                            <h4>No Health Records</h4>\n                        </ion-title>\n                    </ion-col>\n                </ion-row>\n                \x3c!-- <ion-row class="ion-text-center" >\n                  <ion-col >\n                      <ion-button (click)="tolinkPage()">Go to Health Locker List</ion-button>\n                  </ion-col>\n                  <ion-col  *ngIf="currentDirectory.split(\'/\')[1] == \'Uploaded Records\' && currentDirectory !=\'\'">\n                      <ion-button color="primary" class="ion-margin-top-md ion-float-end ion-no-padding ">\n                          <input id="file-upload" type="file" accept="image/png, image/jpeg, application/pdfimage/png, image/jpeg, application/pdf" [(ngModel)]="fileUpload" name="file"  (change)="upload($event)" />\n                      </ion-button>\n                  </ion-col>\n              </ion-row> --\x3e\n            </ion-col>\n        </ion-row>\n\n    </ion-grid>\n    <ion-grid [fixed]="true" *ngIf="isSkeleton">\n        <ion-row>\n            <ion-col>\n                <ion-card mode="ios" class="ion-margin ">\n                    <ion-item lines="none">\n                        <ion-avatar slot="start">\n                            <ion-skeleton-text animated></ion-skeleton-text>\n                        </ion-avatar>\n                        <ion-label>\n                            <ion-skeleton-text animated style="width: 30%"></ion-skeleton-text>\n                        </ion-label>\n                        <ion-icon name="ellipse" color="light"></ion-icon>\n                    </ion-item>\n                </ion-card>\n            </ion-col>\n        </ion-row>\n    </ion-grid>\n</ion-content>'}}]);