(window.webpackJsonp=window.webpackJsonp||[]).push([[50],{"UD/I":function(e,i,t){"use strict";t.r(i),i.default=".scrolling-wrapper {\n  overflow-x: auto;\n  overflow-y: hidden;\n  white-space: nowrap;\n}\n\n.textWrap {\n  display: -webkit-box;\n  -webkit-line-clamp: 1;\n  -webkit-box-orient: vertical;\n  overflow: hidden;\n  text-overflow: ellipsis;\n  min-height: 21px;\n}\n\n.wide-as-needed {\n  overflow: scroll;\n  white-space: nowrap;\n}\n\nion-label h4 {\n  margin: 0 0 0px;\n  padding-top: 4px;\n}\n\nion-card {\n  border-radius: 8px;\n}\n\nion-card-subtitle {\n  text-align: center;\n}\n\ninput[type=file] {\n  display: none;\n}\n\n.custom-file-upload {\n  border: 1px solid #ccc;\n  display: inline-block;\n  padding: 6px 12px;\n  cursor: pointer;\n}\n\nion-button {\n  cursor: pointer;\n}\n\n.card {\n  cursor: pointer;\n  display: inline-block;\n  margin-right: 10px;\n  margin-bottom: 10px;\n  margin-top: 8px;\n}\n\n.ion-text-wrap {\n  display: -webkit-box;\n  -webkit-line-clamp: 2;\n  -webkit-box-orient: vertical;\n  overflow: hidden;\n  text-overflow: ellipsis;\n  min-height: 40px;\n  padding-top: 3px;\n}\n\n.breadcrumRow ion-button {\n  --padding-start: 3px;\n  --padding-end: 3px;\n}\n\nion-list ion-card {\n  margin-inline: 0px;\n}\n\nion-button label {\n  padding-top: 9px;\n  padding-inline: 10px;\n  padding-bottom: 9px;\n}\n\nion-fab-button label {\n  font-size: 35px;\n  line-height: 0;\n}\n\n.border-circle {\n  border-radius: 50%;\n  -webkit-border-radius: 50%;\n  -moz-border-radius: 50%;\n  -ms-border-radius: 50%;\n  -o-border-radius: 50%;\n}\n\n.border-circle label {\n  font-size: 25px;\n  line-height: 0;\n  padding-top: 5px;\n}\n\n.labelTextWrap {\n  -webkit-line-clamp: 1;\n  -webkit-box-orient: vertical;\n  overflow: hidden !important;\n  text-overflow: ellipsis !important;\n  min-height: 21px;\n}"},nQDz:function(e,i,t){"use strict";t.r(i),i.default='\x3c!-- <ion-header>\n    <ion-toolbar>\n        <ion-buttons slot="start">\n            <ion-menu-button></ion-menu-button>\n        </ion-buttons>\n        <ion-title></ion-title>\n    </ion-toolbar>\n</ion-header> --\x3e\n\n<ion-content class="ion-padding">\n    <div class="pageMargin"></div>\n    <ion-grid [fixed]="true" *ngIf="!drive_storage_check">\n        <ion-row *ngIf="isShowHideFolderGrid">\n            <ion-toolbar>\n                <ion-title color="tertiary">\n                    <strong> {{\'All Folders\' | translate}} </strong>\n                </ion-title>\n                <ion-buttons slot="start">\n                    <ion-button (click)="isShowHideFolderGrid=false" color="dark" fill="clear" shape="round" size="small">\n                        <ion-icon ios="arrow-back" md="arrow-back"></ion-icon>\n                    </ion-button>\n                </ion-buttons>\n            </ion-toolbar>\n\n        </ion-row>\n\n        <ion-row>\n            <ion-col size="12" size-md="9" *ngIf="currentDirectory != \'/\' && !isShowHideFolderGrid">\n                <ion-toolbar>\n                    <div class="scrolling-wrapper">\n                        <ion-text class="breadcrumRow" color="primary " *ngFor="let item of breadcrumbs" scrollable>\n                            <ion-button (click)="listDirectoryFiles(\'\',\'/\')" size="default" color="primary" fill="clear" shape="round" *ngIf="item.path==\'/\'">\n                                {{\'DigiLocker Drive\' | translate}}\n                            </ion-button>\n                            <ion-button size="default" color="primary" fill="clear" shape="round" *ngIf="item.path!=\'/\'">\n                                <ion-icon name="chevron-forward-outline"></ion-icon>\n                            </ion-button>\n                            <ion-button size="default" color="primary" fill="clear" shape="round" (click)="listDirectoryFiles(item.name,item.path)" *ngIf="item.path!=\'/\'">\n                                {{item.name | translate}}\n                            </ion-button>\n\n                        </ion-text>\n                    </div>\n                    <ion-buttons slot="start">\n                        <ion-button (click)="navigateBack()" color="dark" fill="clear" shape="round" size="small">\n                            <ion-icon ios="arrow-back" md="arrow-back"></ion-icon>\n                        </ion-button>\n                    </ion-buttons>\n                </ion-toolbar>\n            </ion-col>\n            <ion-col size="12" size-md="9" *ngIf="currentDirectory == \'/\' && !isShowHideFolderGrid">\n                <ion-row>\n                    <ion-col size-md="1" size="3">\n                        <img src="/assets/img/ddrive.svg">\n                    </ion-col>\n                    <ion-col size-md="11" size="9">\n                        <ion-text color="tertiary">\n                            <h1><strong>\n                            {{"DigiLocker" | translate}} {{"Drive" | translate}}\n                        </strong>\n                            </h1>\n                        </ion-text>\n\n                        <ion-row *ngIf="allSize">\n                            <ion-col size="12" size-md="3">\n\n                                <ion-progress-bar color="primary" mode="ios" value="{{this.uploadProgressBar()}}"></ion-progress-bar>\n                                <ion-text>\n                                    <small color="medium">\n\n                                    {{\'used of\' | translate}}  <b> {{(this.uploadProgressBarMb()) | number}} MB </b> /  <b> 1 GB</b>\n\n                      </small></ion-text>\n                            </ion-col>\n                        </ion-row>\n                    </ion-col>\n                </ion-row>\n\n                <ion-text>\n\n                    <h4>{{"Documents in DigiLocker Drive are NOT treated as authentic original documents." | translate}}\n                    </h4>\n\n                </ion-text>\n\n            </ion-col>\n            <ion-col size="2" size-md="3" *ngIf="!isShowHideFolderGrid && infiniteFileList.length >0 && deviceSize && currentDirectory.split(\'/\')[1] != eSignFolder">\n                <ion-button color="primary" class="ion-margin-top-md ion-float-end  ">\n                    <label for="file-upload" class="cursor"> <ion-text> {{"Upload Files" | translate}}</ion-text>\n                    </label>\n                    <input id="file-upload" type="file" accept="image/png, image/jpeg, image/png, image/jpeg, application/pdf" [(ngModel)]="fileUpload" (change)="loadImageFromDevice($event)" />\n                </ion-button>\n            </ion-col>\n\n        </ion-row>\n\n        <ion-row *ngIf="directoryList.length > 0">\n            <ion-col>\n                <ion-row class="ion-no-padding" *ngIf="!isShowHideFolderGrid">\n                    <ion-col size="7" class="ion-no-margin ion-no-padding">\n                        <ion-label class="textWrap" color="tertiary">\n                            <h4 class="text-primary"><strong>{{\'Folders\' | translate}}</strong></h4>\n                        </ion-label>\n                    </ion-col>\n                    <ion-col size="5" class="ion-no-margin ion-no-padding ion-text-right" *ngIf="!isShowHideFolderGrid">\n                        <ion-button color="dark" fill="clear" size="small" shape="round" (click)="isShowHideFolderGrid = true" *ngIf="directoryList.length > 5">\n                            {{\'View All\' | translate}} ({{directoryList.length}})\n                        </ion-button>\n\n                    </ion-col>\n                </ion-row>\n                <div class="scrolling-wrapper ion-margin-bottom" *ngIf="!isShowHideFolderGrid">\n                    <div class="card" *ngFor="let file of directoryList">\n                        <ion-card mode="ios" class="ion-no-margin" title="{{file.Name | translate}}" (click)="listDirectoryFiles(file.Name)" *ngIf="file.Name != \'LBSNAA\'">\n                            <ion-item lines="none">\n                                <ion-icon name="folder" color="warning" slot="start" title="{{file.Name}}"></ion-icon>\n                                <ion-label>\n                                    <p style="color: #000;">{{file.Name | translate}}</p>\n                                    <p> <small>{{file.human_size}}</small></p>\n                                </ion-label>\n                            </ion-item>\n\n                        </ion-card>\n                        \x3c!-- routerLink="/drive/lbsnaa" --\x3e\n                        <ion-card mode="ios" class="ion-no-margin" title="Vision for Amrit kaal 2021-2047: Folder will be accessible on 15 August 2047" (click)="lbsnaa()" *ngIf="file.Name == \'LBSNAA\' && this.auth.userProfile().lbsnaa == \'Y\'">\n                            <ion-item lines="none">\n                                <ion-img style="margin-right:20px; width: 23%;" src="assets/icon/lbsnaa-folder.svg"></ion-img>\n                                <ion-label>{{file.Name | translate}}\n                                    <p> <small>{{file.human_size}}</small></p>\n                                </ion-label>\n                            </ion-item>\n\n                        </ion-card>\n                    </div>\n\n                </div>\n\n                <div class="ion-margin-bottom showGrid" *ngIf="isShowHideFolderGrid">\n                    <ion-row>\n                        <ion-card class="card" title="{{file.Name}}" (click)="listDirectoryFiles(file.Name)" *ngFor="let file of directoryList">\n                            <ion-card-header>\n                                <ion-card-subtitle>\n                                    <ion-icon size="large" name="folder" color="warning">\n                                    </ion-icon>\n\n                                </ion-card-subtitle>\n                            </ion-card-header>\n                            <ion-card-content class="ion-text-center">\n                                <ion-label color="dark" class="ion-text-wrap">{{file.Name}}</ion-label>\n                            </ion-card-content>\n                        </ion-card>\n                    </ion-row>\n                </div>\n\n            </ion-col>\n        </ion-row>\n        <ion-row *ngIf="!isShowHideFolderGrid ">\n            <ion-col>\n\n                <ion-row class="ion-no-padding" *ngIf=" infiniteFileList.length >0">\n                    <ion-col size="10" class="ion-no-margin ion-no-padding">\n                        <ion-label class="textWrap" color="tertiary" style="padding-top: 5px;">\n                            <h4 class="text-primary"><strong>{{"Files" | translate}} {{(fileList.length>10)?\'-\n                                    (\'+fileList.length+\')\':\'\'}}</strong></h4>\n                        </ion-label>\n                    </ion-col>\n\n                    <ion-col size="2" class="ion-no-margin ion-no-padding">\n                        <ion-select [(ngModel)]="sortByFlag" placeholder="Sort by" interface="popover" mode="ios" (ionChange)="onSortChange($event)" class="ion-float-end">\n\n                            <ion-select-option value="-LastModified">{{\'Newest\' | translate}}\n                            </ion-select-option>\n                            <ion-select-option value="LastModified">{{\'Oldest\' | translate}}\n                            </ion-select-option>\n                            <ion-select-option value="Name">{{\'A-Z Name\' | translate}} </ion-select-option>\n                            <ion-select-option value="-Name">{{\'Z-A Name\' | translate}}\n                            </ion-select-option>\n\n\n                        </ion-select>\n\n\n                    </ion-col>\n                </ion-row>\n                <ion-list *ngIf="fileList.length!=0 ">\n                    <ion-card *ngFor="let file of fileList; let i = index" class="ion-no-margin ion-margin-bottom ion-no-padding" mode="ios">\n                        <ion-item lines="none">\n\n                            <ion-icon color="primary" name="image-outline" slot="start" *ngIf="!file.Ext.includes(\'pdf\')"></ion-icon>\n                            <ion-icon color="primary" name="document-outline" slot="start" *ngIf="file.Ext.includes(\'pdf\')">\n                            </ion-icon>\n                            <ion-label style="cursor: pointer; " class="labelTextWrap" (click)="readFile(file)" *ngIf="currentDirectory.split(\'/\')[1] != \'eSigned Docs\' ">\n                                <p style="color: #000;">{{file.Name}}</p>\n                                \x3c!-- <ion-badge color="secondary" *ngif="file.LastModified ">new</ion-badge> --\x3e\n                                <p color="medium"><small> {{file.human_size}}</small></p>\n                                \x3c!--<small color="secondary">{{file.LastModified | date : "dd-MM-YYYY HH:mm:ss"}},\n                                    {{file.human_size}} </small>--\x3e\n                            </ion-label>\n                            <ion-label style="cursor: pointer; " class="labelTextWrap" (click)="downloadPdf(file)" *ngIf="currentDirectory.split(\'/\')[1] == \'eSigned Docs\' ">{{file.Name}}\n                                <p color="medium"><small> {{file.human_size}}</small></p>\n                            </ion-label>\n                            <ion-button (click)="eSign(file)" color="light" fill="clear" size="small" title="{{\'esign\' | translate}}" class="ion-float-right" *ngIf="auth.userProfile().user_type==\'aadhaar\' && currentDirectory.split(\'/\')[1] != \'eSigned Docs\' && deviceSize">\n                                \x3c!-- <ion-icon name="ribbon-outline"></ion-icon>\n                                <ion-label style="overflow: visible;">eSign</ion-label> --\x3e\n                                <img src="/assets/img/eSign.svg">\n                            </ion-button>\n                            <ion-button color="dark" fill="clear" size="small" shape="round" *ngIf="deviceSize" title="{{\'Download\' | translate}}" class="ion-float-right" (click)="downloadPdf(file)">\n                                <ion-icon color="primary" name="download-outline"></ion-icon>\n                            </ion-button>\n                            <ion-button color="dark" fill="clear" *ngIf=deviceSize size="small" shape="round" title="{{\'Rename\' | translate}}" class="ion-float-right" (click)="updateFile(file)">\n                                <ion-icon name="create-outline"></ion-icon>\n                            </ion-button>\n\n                            <ion-button color="dark" fill="clear" *ngIf=deviceSize size="small" shape="round" title="{{\'Delete\' | translate}}" class="ion-float-right" (click)="deleteFile(file)">\n                                <ion-icon color="danger" name="trash-outline"></ion-icon>\n                            </ion-button>\n                            <ion-button color="dark" fill="clear" size="small" shape="round" *ngIf=!deviceSize (click)="presentPopover($event,[\'RENAME\',file?\'DELETE\':file,\'DOWNLOAD\',\'ESIGN\'],\'action\',file)">\n                                <ion-icon name="ellipsis-vertical"></ion-icon>\n                            </ion-button>\n\n                        </ion-item>\n\n\n                    </ion-card>\n                </ion-list>\n                \x3c!--<ion-infinite-scroll (ionInfinite)="doInfinite($event)" *ngIf="infiniteFileList.length > 0">\n                    <ion-infinite-scroll-content loadingSpinner="bubbles" loadingText="Loading more data...">\n                    </ion-infinite-scroll-content>\n                </ion-infinite-scroll>--\x3e\n\n                <ion-row *ngIf="fileList.length==0 && showTashBin">\n                    <ion-col size-md="8" offset-md="2" size="12">\n                        <ion-row class="ion-no-margin">\n                            <ion-col class="ion-text-center">\n                                <img src="assets/img/empty_drive.svg" alt="Empty Drive">\n                            </ion-col>\n                        </ion-row>\n                        <ion-row>\n                            <ion-col class="ion-text-center" *ngIf="currentDirectory.split(\'/\')[1] != eSignFolder">\n                                <ion-text color="dark" class=" ion-text-center ion-text-wrap" *ngIf="currentDirectory.split(\'/\')[1] == \'\'">\n                                    <h1>{{\'emptyDrive\'| translate}} </h1>\n                                </ion-text>\n                                <ion-text color="dark" class=" ion-text-center ion-text-wrap" *ngIf="currentDirectory.split(\'/\')[1] != \'\'">\n                                    <h1>{{\'There are no files in this folder yet..\' | translate}}</h1>\n                                </ion-text>\n                                <ion-text class="ion-text-center ion-text-wrap">\n                                    <h3>{{\'emptyDriveText\'| translate}}</h3>\n                                </ion-text>\n                                <ion-title class="ion-text-center ">\n                                    <ion-button color="primary" style="margin-top: 0px;">\n\n                                        <label for="file-upload"> {{\'Upload Files\'| translate}}</label>\n                                        <input id="file-upload" type="file" accept="image/png, image/jpeg, application/pdfimage/png, image/jpeg, application/pdf" (change)="loadImageFromDevice($event)" />\n\n                                    </ion-button>\n                                </ion-title>\n                            </ion-col>\n\n                            <ion-col class="ion-text-center" *ngIf="currentDirectory.split(\'/\')[1] == eSignFolder">\n                                <ion-text class="ion-text-center ion-text-wrap">\n                                    <h3>There are no eSigned files in your drive yet</h3>\n                                </ion-text>\n                            </ion-col>\n                        </ion-row>\n                    </ion-col>\n                </ion-row>\n            </ion-col>\n        </ion-row>\n    </ion-grid>\n    <ion-grid [fixed]="true" *ngIf="drive_storage_check">\n        <ion-row>\n            <ion-col size-md="8" offset-md="2" size="12">\n                <ion-row class="ion-no-margin">\n                    <ion-col class="ion-text-center">\n                        <img width="300px" [src]="maintenanceImg">\n                    </ion-col>\n                </ion-row>\n                <ion-text color="dark" class=" ion-text-center ion-margin-top">\n                    <h1>{{\'maintenance\' | translate}}</h1>\n                </ion-text>\n                <ion-text class="cursor ion-text-center" color="tertiary" routerLink="/home" routerDirection="root">\n                    <h1>{{\'Go to Home\' | translate}}</h1>\n                </ion-text>\n            </ion-col>\n        </ion-row>\n    </ion-grid>\n\n    <ion-grid [fixed]="true" *ngIf="showSkeleton">\n        <ion-row>\n            <ion-col class="ion-text-start" size="10">\n                <ion-text color="tertiary">\n                    <h4 class="text-primary"><strong>Folders</strong></h4>\n                </ion-text>\n            </ion-col>\n            <ion-col class="ion-text-end">\n                <ion-text color="tertiary">\n                    <h3>\n                        <ion-skeleton-text animated style="width: 80%"></ion-skeleton-text>\n                    </h3>\n                </ion-text>\n            </ion-col>\n        </ion-row>\n        <ion-row>\n            <ion-col>\n                <div class="scrolling-wrapper ion-margin-bottom">\n                    <div class="card" style="width: 15%;" *ngFor="let drive of [].constructor(6)">\n                        <ion-card mode="ios" class="ion-no-margin">\n                            <ion-item lines="none">\n                                <ion-avatar slot="start">\n                                    <ion-skeleton-text animated></ion-skeleton-text>\n                                </ion-avatar>\n                                <ion-skeleton-text animated style="width: 90%; height: 15px;"></ion-skeleton-text>\n                            </ion-item>\n\n                        </ion-card>\n                    </div>\n                </div>\n            </ion-col>\n        </ion-row>\n\n        <ion-row>\n            <ion-col>\n                <ion-row class="ion-no-padding">\n                    <ion-col size="10" class="ion-no-margin ion-no-padding">\n                        <ion-label class="textWrap" color="tertiary" style="padding-top: 5px;">\n                            <h4 class="text-primary"><strong>{{"Files" | translate}}</strong></h4>\n                        </ion-label>\n                    </ion-col>\n                    <ion-col size="2" class="ion-no-margin ion-no-padding">\n                        <ion-select placeholder="Sort by" interface="popover" mode="ios" (ionChange)="onSortChange($event)" class="ion-float-end">\n                            <ion-select-option (click)="sortListData(\'-LastModified\')" value="-LastModified">Newest\n                            </ion-select-option>\n                            <ion-select-option (click)="sortListData(\'LastModified\')" value="LastModified">Oldest\n                            </ion-select-option>\n                            <ion-select-option (click)="sortListData(\'Name\')" value="Name">A-Z Name </ion-select-option>\n                            <ion-select-option (click)="sortListData(\'-Name\')" value="-Name">Z-A Name\n                            </ion-select-option>\n                        </ion-select>\n                    </ion-col>\n                </ion-row>\n                <ion-list>\n                    <ion-card *ngFor="let drive of [].constructor(10)" class="ion-no-margin ion-margin-bottom" mode="ios">\n                        <ion-item lines="none">\n                            <ion-avatar slot="start">\n                                <ion-skeleton-text animated></ion-skeleton-text>\n                            </ion-avatar>\n                            <ion-label style="cursor: pointer;">\n                                <ion-skeleton-text animated style="width: 90%;"></ion-skeleton-text>\n                            </ion-label>\n                            <ion-icon name="ellipse" color="light"></ion-icon>\n                            <ion-icon name="ellipse" color="light"></ion-icon>\n                            <ion-icon name="ellipse" color="light"></ion-icon>\n                        </ion-item>\n                    </ion-card>\n                </ion-list>\n            </ion-col>\n        </ion-row>\n    </ion-grid>\n</ion-content>\n<ion-row *ngIf="!deviceSize && !isShowHideFolderGrid && infiniteFileList.length >0 && currentDirectory.split(\'/\')[1] != eSignFolder">\n    <ion-col size="12">\n        <ion-fab vertical="bottom" horizontal="end">\n            <ion-fab-button color="primary" class="ion-margin-top-md ion-float-end ion-no-padding ">\n                <label for="file-upload" class="cursor">\n                    <ion-icon name="add-outline"></ion-icon>\n                </label>\n                <input id="file-upload" type="file" accept="image/png, image/jpeg, application/pdfimage/png, image/jpeg, application/pdf" [(ngModel)]="fileUpload" (change)="loadImageFromDevice($event)" />\n            </ion-fab-button>\n        </ion-fab>\n    </ion-col>\n</ion-row>\n'},wKgE:function(e,i,t){"use strict";t.r(i),t.d(i,"DrivePageModule",(function(){return x}));var n=t("mrSG"),o=t("fXoL"),s=t("ofXK"),a=t("3Pt+"),l=t("sYmb"),r=t("TEn/"),c=t("tyNb"),d=t("9ans"),h=t("AytR"),u=t("sRcL"),p=t("sdq4"),m=t("jhN1"),f=t("nJp/");let g=class{constructor(e,i,t,n,o,s,a,l,r,c,d,u){this.ajax=e,this.modalController=i,this.alertCtrl=t,this.sanitizer=n,this.titleService=o,this.platform=s,this.navCtlr=a,this.auth=l,this.loca=r,this.popoverCtrl=c,this.route=d,this._translate=u,this.infiniteFileList=[],this.fileList=[],this.directoryList=[],this.fileOffset=0,this.currentDirectory="/",this.previousDirectory="",this.allDirectories=[],this.breadcrumbs=[],this.isShowHideFolderGrid=!1,this.uploadBlobTextData=null,this.showTashBin=!1,this.PAGE_SIZE=15,this.pdfData=null,this.imgData=null,this.fileUpload=null,this.drive_storage_check=!1,this.showSkeleton=!0,this.sortByFlag="-LastModified",this.windowReference=null,this.maintenanceImg=h.a.maintenanceImg,this.urlpath=null,this.resstatus=null,this.name=null,this.did=this.auth.getDeviceId(),this.token=this.auth.getToken(),this.esignUrl=h.a.esignUrl,this.drivePath="drive-path",this.eSignFolder="eSigned Docs",this.allSize=null,this.fileTypes=["image/jpeg","image/png","image/jpg","application/pdf"],this.fileExt=["jpeg","png","jpg","pdf"],this.deviceSize=this.platform.isLandscape()}ionViewDidEnter(){this.titleService.setTitle("Drive")}ngOnInit(){this.route.queryParams.subscribe(e=>{if(this.resstatus=e.s,null!=this.resstatus)if(this.breadcrumbs.push({name:"home",path:"/"}),"success"==this.resstatus)this.ajax.showToast(this._translate.instant("Your eSign request is successful"),5e3,"success"),this.listDirectoryFiles("/"+this.eSignFolder,"/"+this.eSignFolder),this.loca.replaceState("drive");else{let i=null!=e.m?e.m:"Your eSign request is cancelled";this.ajax.showToast(i,5e3,"warning");let t=sessionStorage.getItem(this.drivePath),n=t?t.split("/"):[""],o="";n.forEach((e,i)=>{e&&(o+="/"+e,this.breadcrumbs.push({name:e,path:o}))}),this.listDirectoryFiles(n[n.length-1],t),this.loca.replaceState("drive")}else this.breadcrumbs.push({name:"home",path:"/"}),this.getFiles(this.currentDirectory);sessionStorage.removeItem(this.drivePath)})}presentPopover(e,i=[],t=null,o=null){return Object(n.b)(this,void 0,void 0,(function*(){const n=yield this.popoverCtrl.create({component:f.a,cssClass:"my-custom-class",event:e,translucent:!0,mode:"ios",componentProps:{labels:i},animated:!0});yield n.present(),yield n.onDidDismiss().then(e=>{if(null!=e.data){let i=e.data.label;"action"==t&&("DOWNLOAD"==i?this.downloadPdf(o):"RENAME"==i?this.updateFile(o):"DELETE"==i?this.deleteFile(o):"DOWNLOAD"==i?this.downloadPdf(o):"ESIGN"==i?this.eSign(o):this.ajax.showToast("No action",5e3))}})}))}getFiles(e){return Object(n.b)(this,void 0,void 0,(function*(){this.showTashBin=!1;let i={jtoken:this.auth.getToken(),"device-security-id":this.auth.getDeviceId()};this.ajax.getMethod(h.a.drive_storage_check,i).subscribe(i=>{this.showSkeleton=!1,void 0!==i.storage&&"S3"==i.storage?this.getFilesAjax(e):this.drive_storage_check=!0})}))}getFilesAjax(e){return Object(n.b)(this,void 0,void 0,(function*(){this.showSkeleton=!0;var i="";if("/"!=e){var t=e;"/"==e.charAt(0)&&(t=e.slice(1)),i="path="+encodeURIComponent(t)}yield this.ajax.postMethod(h.a.list_files,i,{}).subscribe(i=>{this.showSkeleton=!1,null!=i&&null!=i.data&&(this.allSize=i,0!=i.data.length?("Y"==this.auth.userProfile().lbsnaa&&"/"==e&&i.data.push({Name:"LBSNAA",Ext:"Collection",Size:0,human_size:"0 MB",Key:"",LastModified:""}),this.saveFiles(e,i.data),this.fileList=i.data.filter(e=>"collection"!=e.Ext.toLowerCase()),this.onSortChangebyNewest(),this.directoryList=i.data.filter(e=>"collection"==e.Ext.toLowerCase()),this.directoryList.sort(this.dynamicSort("Name")),this.infiniteFileList=[],this.addMoreItems(),0==this.fileList.length?this.showTashBin=!0:this.showTashBin=!1):(this.infiniteFileList=[],this.fileList=[],this.directoryList=[],this.showTashBin=!0))})}))}listDirectoryFiles(e,i=null){this.isShowHideFolderGrid=!1,this.previousDirectory=this.currentDirectory,i?this.currentDirectory="/"==i?"/":i:(i="/"==this.currentDirectory?this.currentDirectory+e:this.currentDirectory+"/"+e,this.currentDirectory=i);let t=this.breadcrumbs.findIndex(e=>e.path==i);if(t>=0){for(let n=0;n<this.breadcrumbs.length;n++)if(n>t&&this.breadcrumbs.splice(n,1),n==t)if(0==t)this.previousDirectory=this.currentDirectory;else{let e=this.breadcrumbs[n-1];this.previousDirectory=e.path}}else{let e=i.split("/").pop();this.breadcrumbs.push({name:e,path:i})}this.fileOffset=0,this.isFileExists(this.currentDirectory)?this.addMoreItems():(this.infiniteFileList=[],this.fileList=[],this.directoryList=[],this.getFiles(this.currentDirectory))}isFileExists(e){var i=this.allDirectories.filter(i=>i.path==e);return i.length>0&&(this.infiniteFileList=[],this.fileList=i[0].files.filter(e=>"collection"!=e.Ext.toLowerCase()),this.directoryList=i[0].files.filter(e=>"collection"==e.Ext.toLowerCase()),this.directoryList.sort(this.dynamicSort("Name")),!0)}deleteVisitedDir(e){this.allDirectories.forEach((i,t)=>{i.path==e&&this.allDirectories.splice(t,1)})}saveFiles(e,i){return this.allDirectories.push({path:e,files:i}),!1}doInfinite(e){var i=this;setTimeout(()=>{this.addMoreItems(),i.fileOffset>=i.fileList.length&&(e.target.disabled=!0)},500)}addMoreItems(){let e=this.fileList;var i;i=this.fileOffset;for(let t=0;t<this.PAGE_SIZE;t++)e[i+t]&&(this.infiniteFileList.push(e[i+t]),this.fileOffset++);0==this.infiniteFileList.length?this.showTashBin=!0:this.showTashBin=!1}downloadPdf(e){var i=this,t="";if("/"!=this.currentDirectory){var n=this.currentDirectory;"/"==this.currentDirectory.charAt(0)&&(n=this.currentDirectory.slice(1)),t=encodeURI("name="+e.Name+"&path="+n)}else t=encodeURI("name="+e.Name);this.ajax.postMethod(h.a.drive_file_download,t,{}).subscribe(t=>{null!=t&&null!=t.Body&&i.downloadFile(t,e)})}readFile(e){if(null!=this.validFileType(e))return void this.ajax.showToast(this._translate.instant("Download failed."),5e3,"danger");this.currentDirectory.substring(1);let i=encodeURIComponent(encodeURIComponent(e.Name));var t="";if("/"!=this.currentDirectory){var n=this.currentDirectory;"/"==this.currentDirectory.charAt(0)&&(n=this.currentDirectory.slice(1)),t=encodeURI("name="+i+"&path="+encodeURIComponent(n))}else t=encodeURI("name="+i);this.ajax.showLoader(),this.ajax.postMethod(h.a.drive_file_download,t,{}).subscribe(i=>{this.ajax.hideLoader(),null!=i.Body&&this.viewDetail(e,i.Body)})}deleteFile(e){return Object(n.b)(this,void 0,void 0,(function*(){var i=e;(yield this.showDeleteFileAlert(i))&&this.callDeleteFile(e)}))}updateFile(e){return Object(n.b)(this,void 0,void 0,(function*(){let i=e.Name,t=i.substring(0,i.lastIndexOf(".")),n=yield this.showRenameAlert(t,e.Ext);0!=n&&this.callRenameFile(n,e)}))}showRenameAlert(e,i){return Object(n.b)(this,void 0,void 0,(function*(){return new Promise(t=>Object(n.b)(this,void 0,void 0,(function*(){const n=yield this.alertCtrl.create({header:this._translate.instant("Rename File"),inputs:[{name:"editFile",placeholder:"Name",value:e,attributes:{maxlength:50}}],buttons:[{text:this._translate.instant("Cancel"),role:"cancel",handler:()=>t(!1)},{text:this._translate.instant("Update"),handler:o=>{var s="";if(o.editFile.trim()==e)return t(!1);if(null!=this.validateFileName(o.editFile.trim())){s=this.validateFileName(o.editFile.trim()).msg}else if(null!=this.alreadyExistByName(o.editFile.trim()+"."+i)){s=this.alreadyExistByName(o.editFile.trim()+"."+i).msg}else if(null==this.validateFileName(o.editFile.trim()))return t(o.editFile.trim());if(n.getElementsByClassName("validation-errors").length){n.getElementsByTagName("small")[0].textContent=s}else{const e=n.getElementsByTagName("input")[0],i=document.createElement("div");i.className="validation-errors";const t=document.createElement("small");t.classList.add("error-message"),t.textContent=s,i.appendChild(t),e.insertAdjacentElement("afterend",i)}return!1}}]});yield n.present()})))}))}validateFileName(e){return 0==e.length?{isValid:!1,msg:"Please enter the file name"}:/^[^\\/:\*\?\"<>=;#\|+&]+$/.test(e)&&!/^\./.test(e)?null:{isValid:!1,msg:"Please enter a valid file name"}}downloadFile(e,i){let t=`data:application/${i.Ext};base64,${e.Body}`;var n=document.createElement("a");n.href=t,n.download=i.Name,n.click()}callDeleteFile(e){var i=e;let t=h.a.drive_delete,n=encodeURIComponent(encodeURIComponent(i.Name));var o="";this.currentDirectory.substring(1);if("/"!=this.currentDirectory){var s=this.currentDirectory;"/"==this.currentDirectory.charAt(0)&&(s=this.currentDirectory.slice(1)),o=encodeURI("name="+n+"&path="+s)}else o=encodeURI("name="+n);this.ajax.showLoader(),this.ajax.postMethod(t,o,{}).subscribe(e=>{this.ajax.hideLoader(),e.status?(this.ajax.showToast(this._translate.instant("File deleted successfully"),5e3,"success"),this.fileOffset=0,this.deleteVisitedDir(this.currentDirectory),this.getFiles(this.currentDirectory)):this.ajax.showToast(e.message,5e3,"danger")})}showDeleteFileAlert(e){return Object(n.b)(this,void 0,void 0,(function*(){return new Promise(e=>Object(n.b)(this,void 0,void 0,(function*(){const i=yield this.alertCtrl.create({header:"",message:this._translate.instant("deleteMsg"),buttons:[{text:this._translate.instant("Cancel"),role:"cancel",handler:()=>e(!1)},{text:this._translate.instant("Delete"),handler:()=>e(!0)}]});yield i.present()})))}))}callRenameFile(e,i){var t=i,n="";if("/"!=this.currentDirectory){this.currentDirectory;var o=this.currentDirectory;"/"==this.currentDirectory.charAt(0)&&(o=this.currentDirectory.slice(1)),n=encodeURI("name="+t.Name+"&new_name="+e+"."+t.Ext+"&path="+o)}else n=encodeURI("name="+t.Name+"&new_name="+e+"."+t.Ext);this.ajax.showLoader(),this.ajax.postMethod(h.a.drive_rename,n,{}).subscribe(e=>{this.ajax.hideLoader(),e.status?(this.ajax.showToast(this._translate.instant("File renamed successfully"),5e3,"success"),this.fileOffset=0,this.deleteVisitedDir(this.currentDirectory),this.getFiles(this.currentDirectory)):this.ajax.showToast(e.message)})}navigateBack(){this.listDirectoryFiles("",this.previousDirectory)}refreshAfterDeteleList(e){this.fileList.splice(e,1)}viewDetail(e,i){return Object(n.b)(this,void 0,void 0,(function*(){let t=e.Ext.toLowerCase(),n=["jpg","jpeg"].includes(t)?this.sanitizer.bypassSecurityTrustUrl("data:image/jpg;base64,"+i):["png"].includes(t)?this.sanitizer.bypassSecurityTrustUrl("data:image/png;base64,"+i):["pdf"].includes(t)?this.sanitizer.bypassSecurityTrustResourceUrl("data:application/pdf;base64,"+i):"";return(yield this.modalController.create({component:p.a,swipeToClose:!0,componentProps:{data:n,file:e},backdropDismiss:!1})).present()}))}uploadAjaxCall(e){let i=new FormData;if(i.append("body",e),"/"!=this.currentDirectory){var t=this.currentDirectory;"/"==this.currentDirectory.charAt(0)&&(t=this.currentDirectory.slice(1)),i.append("path",t)}this.ajax.showLoader(),this.ajax.uploadMethod(h.a.drive_upload,i).subscribe(i=>{this.ajax.hideLoader(),i.status?(this.onSortChangebyNewest(),this.ajax.showToast(this._translate.instant("File uploaded successfully"),5e3,"success"),this.fileOffset=0,this.deleteVisitedDir(this.currentDirectory),this.getFiles(this.currentDirectory)):null!=i.message?this.ajax.showToast(i.message,5e3,"danger"):this.ajax.showToast("File "+e.name+" could not be uploaded. Please try again.",5e3,"warning")})}loadImageFromDevice(e){var i=e.target.files;if(i.length>0){var t=i[0],o=new FileReader;this.checkFileMimeType(o,e=>{if(t.type==e){let i=e.split("/")[1];if(t.name.length>50){let e=t.name.substring(0,50).trim();const o=new File([t],e+"."+i,{type:t.type});return new Promise(t=>Object(n.b)(this,void 0,void 0,(function*(){if(this.alreadyExistByName(o.name.replace(/ /g,"")))this.ajax.showToast(this._translate.instant("A file with this name already exists"),5e3,"danger");else if(this.validFileSize(o))this.ajax.showToast(this._translate.instant("Upload failed. Maximum file size is 10 MB."),5e3,"danger");else{const n=yield this.alertCtrl.create({header:"File name is too long",message:"Choose suggested file name or create a new one under 50 characters.",inputs:[{name:"newFilename",placeholder:"Enter new file name",value:e,attributes:{maxlength:50}}],buttons:[{text:this._translate.instant("Cancel"),role:"cancel",handler:()=>t(!0)},{text:this._translate.instant("Ok"),handler:e=>{if(e.newFilename&&""!==e.newFilename.trim()){const t=new File([o],e.newFilename.trim()+"."+i,{type:o.type});this.uploadAjaxCall(t)}else this.uploadAjaxCall(o)}}]});yield n.present()}})))}this.alreadyExistByName(t.name.replace(/ /g,""))?this.ajax.showToast(this._translate.instant("A file with this name already exists"),5e3,"danger"):this.validFileSize(t)?this.ajax.showToast(this._translate.instant("Upload failed. Maximum file size is 10 MB."),5e3,"danger"):this.uploadAjaxCall(t)}else this.ajax.showToast(this._translate.instant("Only JPG, JPEG, PDF, and PNG files allowed. Please upload valid file format."),5e3,"danger")}),o.readAsArrayBuffer(t),this.fileUpload=null}}checkFileMimeType(e,i){return Object(n.b)(this,void 0,void 0,(function*(){e.onload=function(e){for(var t=new Uint8Array(e.target.result).subarray(0,4),n="",o=0;o<t.length;o++)n+=t[o].toString(16);var s="unknown";switch(n){case"89504e47":s="image/png";break;case"47494638":case"ffd8ffe0":case"ffd8ffe1":case"ffd8ffe2":s="image/jpeg";break;case"25504446":s="application/pdf"}i(s)}}))}validFileType(e){return null!=e.type?this.fileTypes.includes(e.type)?null:{isValid:!1,msg:"Upload failed. Files with extension JPG, JPEG, PDF, PNG are allowed."}:null!=e.Ext?this.fileExt.includes(e.Ext.toLowerCase())?null:{isValid:!1,msg:"Upload failed. Files with extension JPG, JPEG, PDF, PNG are allowed."}:null}lbsnaa(){this.ajax.showToast("Vision for Amrit kaal 2021-2047: Folder will be accessible on 15 August 2047",5e3,"danger")}validFileSize(e){return e.size>10485760?{isValid:!1,msg:"Upload failed. Maximum file size is 10 MB."}:null}alreadyExist(e){for(let i of this.fileList)if(e.name==i.Name)return{isValid:!1,msg:"A file with this name already exists"};return null}alreadyExistByName(e){for(let i of this.fileList)if(e==i.Name)return{isValid:!1,msg:"A file with this name already exists"};return null}onSortChange(){this.fileList.sort(this.dynamicSort(this.sortByFlag))}onSortChangebyNewest(){this.sortByFlag="-LastModified",this.fileList.sort(this.dynamicSort(this.sortByFlag))}dynamicSort(e){var i=1;return"-"===e[0]&&(i=-1,e=e.substr(1)),function(t,n){return-1==i?n[e].localeCompare(t[e]):t[e].localeCompare(n[e])}}eSign(e){return Object(n.b)(this,void 0,void 0,(function*(){if(this.allSize.used_quota>1073741824)this.showAlertRequest(this._translate.instant("Your drive has run out of upload capacity"));else{let i=e.Key;sessionStorage.setItem(this.drivePath,this.currentDirectory),this.esingForm(i)}}))}showAlertRequest(e){return Object(n.b)(this,void 0,void 0,(function*(){return new Promise(i=>Object(n.b)(this,void 0,void 0,(function*(){const t=yield this.alertCtrl.create({header:"",message:e,buttons:[{text:"OK",handler:()=>i(!0)}]});yield t.present()})))}))}esingForm(e){var i=document.createElement("form");i.method="POST",i.action=this.esignUrl;var t=document.createElement("input"),n=document.createElement("input"),o=document.createElement("input"),s=document.createElement("input");t.type="text",t.name="key",t.value=e,n.type="text",n.name="did",n.value=this.did,o.type="text",o.name="token",o.value=this.token,s.type="string",s.name="redirect",s.value="yes",i.appendChild(t),i.appendChild(n),i.appendChild(o),i.appendChild(s),document.body.appendChild(i),i.submit()}uploadProgressBar(){let e=1073741824-this.allSize.used_quota,i=1;return e>=0&&(i=1-e/1073741824),i=i.toPrecision(2),i}uploadProgressBarMb(){return 1073741824-this.allSize.used_quota>=0?(this.allSize.used_quota/Math.pow(1024,2)).toFixed(2):"1024"}};g.ctorParameters=()=>[{type:u.a},{type:r.h},{type:r.a},{type:m.b},{type:m.d},{type:r.k},{type:r.i},{type:d.a},{type:s.g},{type:r.l},{type:c.a},{type:l.c}],g=Object(n.c)([Object(o.n)({selector:"app-drive",template:Object(n.e)(t("nQDz")).default,styles:[Object(n.e)(t("UD/I")).default]})],g);const b=[{path:"",component:g},{path:"doc-detail",loadChildren:()=>t.e(134).then(t.bind(null,"+3+b")).then(e=>e.DocDetailPageModule)},{path:"lbsnaa",loadChildren:()=>t.e(51).then(t.bind(null,"TNqb")).then(e=>e.LbsnaaPageModule)}];let y=class{};y=Object(n.c)([Object(o.M)({imports:[c.i.forChild(b)],exports:[c.i]})],y);let x=class{};x=Object(n.c)([Object(o.M)({imports:[s.b,a.b,r.d,y,l.b.forChild()],declarations:[g]})],x)}}]);