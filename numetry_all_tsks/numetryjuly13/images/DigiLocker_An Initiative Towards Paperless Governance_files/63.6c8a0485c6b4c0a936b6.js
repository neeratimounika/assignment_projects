(window.webpackJsonp=window.webpackJsonp||[]).push([[63],{"+xSW":function(t,n,i){"use strict";i.r(n),n.default=""},"0joW":function(t,n,i){"use strict";i.r(n),n.default='\x3c!-- <ion-header>\n  <ion-toolbar>\n    <ion-title></ion-title>\n  </ion-toolbar>\n</ion-header> --\x3e\n\n<ion-content>\n    <div class="pageMargin"></div>\n    <ion-grid [fixed]="true">\n        <ion-toolbar>\n            <ion-title color="tertiary">\n                <strong>ABHA Account </strong>\n            </ion-title>\n            <ion-buttons class="lsm" slot="start">\n                <ion-button (click)="dismiss()" color="dark" fill="clear" shape="round" size="small">\n                    <ion-icon ios="arrow-back" color="dark" md="arrow-back"></ion-icon>\n                </ion-button>\n            </ion-buttons>\n        </ion-toolbar>\n    </ion-grid>\n    <ion-grid [fixed]="true" class="lsm">\n        <ion-row>\n            <ion-col size-md="8" size="12" *ngIf="patient">\n                <ion-card mode="ios" class="ion-padding ion-no-margin">\n                    <form [formGroup]="displayForm" (ngSubmit)="submitDisplayForm()" novalidate>\n                        <ion-row>\n                            <ion-col size-md="8" size="12" *ngIf="hName">\n                                <ion-item lines="none">\n                                    <h3>{{hName}}</h3>\n                                </ion-item>\n                            </ion-col>\n                            <ion-col size=12 size-xl="12">\n                                <ion-item lines="none" *ngIf="this.patientResp">\n                                    <ion-label>{{this.patientResp.patient.matchedBy[0]}} &nbsp;{{this.patientResp.patient.display}}</ion-label>\n                                </ion-item>\n                                <ion-item lines="none" mode="md" *ngFor="let address of patient">\n                                    <input formControlName="methods" type="radio" id="methods" value="{{address.referenceNumber}}">\n                                    <label for="methods">&nbsp;&nbsp; {{address.display}}</label>\n                                </ion-item>\n                                <p *ngIf="isSubmitted && errorControl.methods.errors?.required">\n                                    <ion-text color="danger" class="ion-margin">\n                                        Please Select.\n                                    </ion-text>\n                                </p>\n                            </ion-col>\n                        </ion-row>\n                        <ion-row class="ion-text-end">\n                            <ion-col>\n                                <ion-button color="primary" expand="block " class="ion-float-right " type="submit">Continue</ion-button>\n                            </ion-col>\n                        </ion-row>\n                    </form>\n                </ion-card>\n            </ion-col>\n        </ion-row>\n    </ion-grid>\n\n</ion-content>'},X6BB:function(t,n,i){"use strict";i.r(n),i.d(n,"PatientPageModule",(function(){return f}));var e=i("mrSG"),o=i("fXoL"),s=i("ofXK"),a=i("3Pt+"),r=i("TEn/"),l=i("tyNb"),c=i("sRcL"),d=i("AytR"),p=i("9ans"),h=i("iHY5");let m=class{constructor(t,n,i,e,o,s){this.formBuilder=t,this.ajax=n,this.router=i,this.navCtlr=e,this.modalController=o,this.auth=s,this.isSubmitted=!1}ngOnInit(){const t=this.router.getCurrentNavigation().extras.state;t.token?(this.phrtoken=t.token,this.patientResp=t.resp,this.hlid=t.id,this.hName=t.hName,this.patient=this.patientResp.patient.careContexts,this.validationArray={methods:[{value:"",disabled:!1},[a.f.required]]},this.displayForm=this.formBuilder.group(this.validationArray)):this.navCtlr.navigateBack("services/abha")}submitDisplayForm(){if(this.isSubmitted=!0,!this.displayForm.valid)return!1;{this.ajax.showLoader();let t=this.displayForm.get("methods").value,n={"content-type":"application/json","X-AUTH-TOKEN":this.phrtoken},i=d.a.phrPostLoginCalls,e={reqType:"link_init",patient:{referenceNumber:this.patientResp.patient.referenceNumber,careContexts:[{referenceNumber:t}]},transactionId:this.patientResp.transactionId};this.ajax.postMethod(i,e,n).subscribe(t=>{this.ajax.hideLoader(),t.status?this.abhaLinkOTP(t.response):this.ajax.showToast(t.response.message,5e3,"warning")})}}abhaLinkOTP(t){return Object(e.b)(this,void 0,void 0,(function*(){const n=yield this.modalController.create({component:h.a,cssClass:"my-custom-class",swipeToClose:!0,componentProps:{state:{resp:t,hlId:this.hlid,phrtoken:this.phrtoken,hName:this.hName}},backdropDismiss:!1});n.present(),n.onDidDismiss().then(t=>{})}))}dismiss(){this.navCtlr.back()}get errorControl(){return this.displayForm.controls}};m.ctorParameters=()=>[{type:a.a},{type:c.a},{type:l.g},{type:r.i},{type:r.h},{type:p.a}],m=Object(e.c)([Object(o.n)({selector:"app-patient",template:Object(e.e)(i("0joW")).default,styles:[Object(e.e)(i("+xSW")).default]})],m);const u=[{path:"",component:m}];let b=class{};b=Object(e.c)([Object(o.M)({imports:[l.i.forChild(u)],exports:[l.i]})],b);let f=class{};f=Object(e.c)([Object(o.M)({imports:[s.b,a.b,r.d,a.e,b],declarations:[m]})],f)}}]);