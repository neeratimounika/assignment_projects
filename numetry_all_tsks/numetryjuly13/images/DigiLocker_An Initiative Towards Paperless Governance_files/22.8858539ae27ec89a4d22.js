(window.webpackJsonp=window.webpackJsonp||[]).push([[22,141],{Ijzq:function(t,e,n){"use strict";n.r(e),n.d(e,"UhidPageModule",(function(){return b}));var i=n("mrSG"),o=n("fXoL"),r=n("ofXK"),a=n("3Pt+"),s=n("TEn/"),l=n("sYmb"),c=n("tyNb"),h=n("sRcL"),d=n("AytR"),u=n("VBEu");let m=class{constructor(t,e,n,i,o){this.formBuilder=t,this.ajax=e,this.navCtlr=n,this.platform=i,this.encrypt=o,this.deviceSize=this.platform.isLandscape(),this.isSubmitted=!1,this.cChecked=!1,this.maxTime=120,this.cotp=!1,this.otp=!1,this.token=null,this.txnId=null,this.respMsg=null,this.otpShow=!1}ngAfterViewChecked(){this.uhidFetchForm.controls.uhid.valid||this.uhidElement.setFocus()}ngOnInit(){this.validationArray={uhid:[{value:"",disabled:!1},[a.f.required,a.f.maxLength(32),a.f.minLength(3)]],consent:[{value:null,disabled:!1},[a.f.required]],otp:[{value:null,disabled:!1},[]]},this.uhidFetchForm=this.formBuilder.group(this.validationArray)}submitUhidFetchForm(){if(this.isSubmitted=!0,!this.uhidFetchForm.valid)return!1;{this.ajax.showLoader();let t={"content-type":"application/json"},e=this.uhidFetchForm.value.otp?d.a.uhid_list_confirm_otp:d.a.uhid_list,n=this.uhidFetchForm.get("consent").value?"true":"false",i=this.uhidFetchForm.value.otp?JSON.stringify({otp:this.uhidFetchForm.get("otp").value,txnId:this.txnId}):{healthid:this.uhidFetchForm.get("uhid").value,consent:n},o=(this.token,e==d.a.uhid_list_confirm_otp?JSON.stringify({payload:this.encrypt.getEncryptedValue(i)}):i);this.ajax.postMethod(e,o,t).subscribe(t=>{null!=t.healthIdNumber&&(this.ajax.showToast("Your Health ID Number "+t.healthIdNumber+" is linked successfully,Your Health ID card is available in Issued Documents",5e3,"success","bottom"),this.navCtlr.navigateForward("issued-documents")),this.ajax.hideLoader(),null!=t.txnId&&(this.isSubmitted=!1,this.txnId=t.txnId,this.cotp=!0,this.otp=!0,this.StartTimer(),this.validationArray.uhid=[{value:this.uhidFetchForm.get("uhid").value,disabled:!0},[a.f.required,a.f.maxLength(32),a.f.minLength(3)]],this.validationArray.consent=[{value:this.uhidFetchForm.get("consent").value,disabled:!1},[a.f.required]],this.validationArray.otp=["",[a.f.required,a.f.pattern("^[0-9a-zA-Z]+$"),a.f.maxLength(6),a.f.minLength(6)]],this.uhidFetchForm=this.formBuilder.group(this.validationArray))})}}onTermsChecked(t){this.cChecked=!this.cChecked}get errorControl(){return this.uhidFetchForm.controls}resendOtp(){this.uhidFetchForm.value.otp="",this.maxTime=120,this.ajax.showLoader("");let t=d.a.uhid_list,e=this.uhidFetchForm.get("consent").value,n={healthid:this.uhidFetchForm.get("uhid").value,consent:e.toString()};this.ajax.postMethod(t,n,{"content-type":"application/json"}).subscribe(t=>{this.isSubmitted=!1,this.ajax.hideLoader(),this.respMsg=t,this.StartTimer()})}dismiss(){this.navCtlr.back()}changeType(t){this.otpShow=!this.otpShow}StartTimer(){setTimeout(t=>{this.maxTime>0&&(this.StartTimer(),this.maxTime=this.maxTime-1)},1e3)}};m.ctorParameters=()=>[{type:a.a},{type:h.a},{type:s.i},{type:s.k},{type:u.a}],Object(i.c)([Object(o.nb)("uhid")],m.prototype,"uhidElement",void 0),m=Object(i.c)([Object(o.n)({selector:"app-uhid",template:Object(i.e)(n("S5b8")).default,styles:[Object(i.e)(n("PcQn")).default]})],m);const p=[{path:"",component:m},{path:"create-using-mobile",loadChildren:()=>n.e(6).then(n.bind(null,"2zOn")).then(t=>t.CreateUsingAadhaarPageModule)},{path:"create-using-aadhaar",loadChildren:()=>n.e(6).then(n.bind(null,"2zOn")).then(t=>t.CreateUsingAadhaarPageModule)}];let g=class{};g=Object(i.c)([Object(o.M)({imports:[c.i.forChild(p)],exports:[c.i]})],g);let b=class{};b=Object(i.c)([Object(o.M)({imports:[r.b,a.b,a.e,s.d,g,l.b.forChild()],declarations:[m]})],b)},PcQn:function(t,e,n){"use strict";n.r(e),e.default=".item.sc-ion-label-ios-h,\n.item .sc-ion-label-ios-h {\n  white-space: unset;\n}"},S5b8:function(t,e,n){"use strict";n.r(e),e.default='<ion-header>\n    <ion-toolbar>\n        <ion-buttons slot="start">\n            <ion-menu-button></ion-menu-button>\n        </ion-buttons>\n        <ion-title></ion-title>\n    </ion-toolbar>\n</ion-header>\n<ion-content class="ion-padding">\n    <div style="height: 10px;"></div>\n    <ion-grid [fixed]="true">\n        <ion-toolbar>\n            <ion-title color="tertiary">\n                <strong>{{\'Health ID\' | translate}}</strong>\n            </ion-title>\n            <ion-buttons class="lsm" slot="start">\n                <ion-button (click)="dismiss()" color="dark" fill="clear" shape="round" size="small">\n                    <ion-icon ios="arrow-back" md="arrow-back"></ion-icon>\n                </ion-button>\n            </ion-buttons>\n        </ion-toolbar>\n    </ion-grid>\n    <ion-grid [fixed]="true">\n        <ion-row>\n            <ion-col size-md="8">\n                <ion-card mode="ios" class="ion-padding ion-no-margin">\n                    <ion-row>\n                        <ion-col class="ion-padding">\n                            <ion-text color="tertiary" class="ion-no-margin ion-padding-start">\n                                <h3><strong>{{\'Get Your Health ID\' | translate}}</strong>\n                                </h3>\n                            </ion-text>\n                        </ion-col>\n                    </ion-row>\n                    <form [formGroup]="uhidFetchForm" (ngSubmit)="submitUhidFetchForm()" novalidate>\n                        <ion-row>\n                            <ion-col size-md="4" size="12" *ngIf="deviceSize">\n                                <ion-item lines="none">\n                                    <ion-label>{{\'Health ID/Health ID Number\' | translate}}</ion-label>\n                                </ion-item>\n                            </ion-col>\n                            <ion-col size-md="8" size="12">\n                                <ion-item lines="full" mode="md">\n                                    <ion-label position="floating" *ngIf="!deviceSize">{{\'Health ID/Health ID Number\' | translate}}</ion-label>\n                                    <ion-input type="text" formControlName="uhid" [attr.disabled]="cotp" placeholder="abhaaddress@abdm/12-1234-1234-1234" required #uhid minlength="3" maxlength="32"></ion-input>\n                                </ion-item>\n                                <p *ngIf="isSubmitted && errorControl.uhid.errors?.required">\n                                    <ion-text color="danger" class="ion-margin">\n                                        {{\'Health ID\' | translate}} {{"Req" | translate}}\n                                    </ion-text>\n                                </p>\n                            </ion-col>\n                        </ion-row>\n                        <ion-row *ngIf="!cotp">\n                            <ion-col>\n                                <ion-list>\n                                    <ion-item lines="none" mode="md">\n                                        <ion-text>{{\'I provide my consent to DigiLocker to share my details with the NHA to get my Health ID.\' | translate}}</ion-text>\n                                        <ion-checkbox slot="start" [checked]="cChecked" (ionChange)="onTermsChecked()" formControlName="consent" required></ion-checkbox>\n                                    </ion-item>\n                                </ion-list>\n                                <p *ngIf="isSubmitted && errorControl.consent.errors?.required">\n                                    <ion-text color="danger" class="ion-margin">\n                                        {{\'Consent is required.\' | translate}}\n                                    </ion-text>\n                                </p>\n                            </ion-col>\n                        </ion-row>\n                        <ion-row *ngIf="cotp">\n                            <ion-col size-md="4" size="12">\n                                <ion-item lines="none">\n                                    <ion-label>{{\'OTP\' |translate}}</ion-label>\n                                </ion-item>\n                            </ion-col>\n                            <ion-col size-md="8" size="12">\n                                <ion-item lines="full">\n                                    <ion-input type="{{otpShow? \'text\': \'password\'}}" minlength="6" maxlength="6" (keypress)="ajax.numberOnlyValidation($event)" formControlName="otp" #otp>\n                                    </ion-input>\n                                    <ion-icon class="cursor" *ngIf="!errorControl.otp.pristine" (click)="changeType(\'otp\') " color="{{otpShow? \'primary\': \'dark\'}}" name="{{otpShow? \'eye\': \'eye-off\'}}" slot="end"></ion-icon>\n                                </ion-item>\n                                <p *ngIf="isSubmitted && errorControl.otp.errors?.required">\n                                    <ion-text color="danger" class="ion-margin">\n                                        {{\'OTP is required\' | translate}}\n                                    </ion-text>\n                                </p>\n                                <ion-row>\n                                    <ion-col>\n                                        <ion-text *ngIf="otp" color="{{maxTime?\'dark\':\'primary\'}}">\n                                            \x3c!-- {{(maxTime>0)?\'Wait for the OTP, if not received try resend otp after \'+maxTime+\' seconds\':\'\'}} --\x3e\n                                            {{maxTime>0?(\'otpTimer\'| translate) + maxTime + (\'seconds\' | translate):\'\'}}\n                                        </ion-text>\n                                        <ion-text *ngIf="!maxTime && otp" (click)="resendOtp()" type="submit" fill="clear" size="small" class="cursor" color="primary">{{\'Resend OTP\' | translate}}\n                                        </ion-text>\n                                    </ion-col>\n                                </ion-row>\n                            </ion-col>\n                        </ion-row>\n                        <ion-button type="submit" color="primary" class="ion-float-right">\n                            {{(uhidFetchForm.value.otp)?\'Verify\':\'Continue\'}}</ion-button>\n\n                    </form>\n                </ion-card>\n                <p class="ion-text-center">{{"Don\'t have Health ID?" | translate}}\n                    <ion-text routerLink="/uhid/create-using-aadhaar" routerDirection="forward" class="cursor" color="primary">{{\'Register Now!\' | translate}}</ion-text>\n                </p>\n            </ion-col>\n            <ion-col size-md="4" class="ion-no-padding" *ngIf="deviceSize">\n                <ion-card mode="ios" color="warning" class="ion-no-margin-top">\n                    <ion-card-content>\n                        <ion-text>\n                            <h4>Health ID is a hassle-free method of accessing your health records digitally. The Health ID can be used at a participating healthcare facility to receive your lab reports, prescriptions and diagnosis digitally.</h4>\n                            <a href="https://ndhm.gov.in/faq" target="_blank">Know More</a>\n                        </ion-text>\n                    </ion-card-content>\n                </ion-card>\n            </ion-col>\n        </ion-row>\n    </ion-grid>\n</ion-content>'},VBEu:function(t,e,n){"use strict";n.d(e,"a",(function(){return l}));var i=n("mrSG"),o=n("fXoL"),r=n("NFKh"),a=n("9ans"),s=n("4pnn");let l=class{constructor(t,e){this.auth=t,this.CookieService=e}encryptedAES(t){let e=Object(r.MD5)(this.auth.userProfile().dlId).toString();var n=r.enc.Utf8.parse(e),i=r.enc.Utf8.parse("\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0"),o=r.AES.encrypt(t,n,{iv:i}).toString();return encodeURI(o.replace(/\+/g,"---"))}getEncryptedValue(t){let e=this.auth.userProfile().dlId.slice(0,16),n=Object(r.MD5)(e).toString(),i=r.enc.Utf8.parse(e),o=r.enc.Utf8.parse(n),a=r.AES.encrypt(t,o,{iv:i}).toString();return encodeURI(a.replace(/\+/g,"---"))}decryptedAES(t){let e=t.replaceAll("---","+"),n=this.CookieService.get("d")?this.CookieService.get("d").replace(/"/g,""):"",i=Object(r.MD5)(n+this.auth.userProfile().dlId).toString();var o=r.enc.Utf8.parse(i),a=r.enc.Utf8.parse("\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0");return r.AES.decrypt(e,o,{iv:a}).toString(r.enc.Utf8)}};l.ctorParameters=()=>[{type:a.a},{type:s.c}],l=Object(i.c)([Object(o.E)({providedIn:"root"})],l)}}]);