(window.webpackJsonp=window.webpackJsonp||[]).push([[44],{"+rdI":function(n,t,i){"use strict";i.r(t),i.d(t,"ActivitiesPageModule",(function(){return v}));var e=i("mrSG"),o=i("fXoL"),a=i("ofXK"),c=i("3Pt+"),s=i("sYmb"),r=i("TEn/"),l=i("tyNb"),u=i("9ans"),d=i("AytR"),g=i("sRcL"),m=i("jhN1");let h=class{constructor(n,t,i){this.ajax=n,this.auth=t,this.titleService=i,this.activities=null,this.currentPage=0,this.isTimeout=!1,this.maintenanceImg=d.a.maintenanceImg}ngOnInit(){this.getActivities()}ionViewDidEnter(){this.titleService.setTitle("Activities")}getActivities(n=1){this.currentPage=n,this.activities=null;let t={jtoken:this.auth.getToken(),"device-security-id":this.auth.getDeviceId()};this.ajax.getMethod(d.a.activities+this.currentPage,t).subscribe(n=>{null!=n.name&&"TimeoutError"==n.name?(this.isTimeout=!0,this.ajax.showToast(n.message,5e3,"warning","bottom"),this.activities=[]):null==n.data?(this.isTimeout=!0,this.activities=[]):this.activities=n})}replaceRegex(n){return n.replace(/\//g,"")}};h.ctorParameters=()=>[{type:g.a},{type:u.a},{type:m.d}],h=Object(e.c)([Object(o.n)({selector:"app-activities",template:Object(e.e)(i("06pu")).default,styles:[Object(e.e)(i("EuA5")).default]})],h);const p=[{path:"",component:h}];let b=class{};b=Object(e.c)([Object(o.M)({imports:[l.i.forChild(p)],exports:[l.i]})],b);let v=class{};v=Object(e.c)([Object(o.M)({imports:[a.b,c.b,r.d,b,s.b.forChild()],declarations:[h]})],v)},"06pu":function(n,t,i){"use strict";i.r(t),t.default='\x3c!-- <ion-header>\n    <ion-toolbar>\n        <ion-buttons slot="start">\n            <ion-menu-button></ion-menu-button>\n        </ion-buttons>\n        <ion-title></ion-title>\n    </ion-toolbar>\n</ion-header> --\x3e\n\n<ion-content class="ion-padding">\n    <div class="pageMargin"></div>\n    <ion-grid [fixed]="true">\n        <ion-row *ngIf="!isTimeout">\n            <ion-col size="12">\n                <ion-text color="tertiary">\n                    <h2><strong>\n                    {{"Activities" | translate}}\n                </strong>\n                    </h2>\n                </ion-text>\n                <ion-text>\n                    <h4>{{\'activitiesSubHeading\' | translate}}</h4>\n                </ion-text>\n            </ion-col>\n        </ion-row>\n    </ion-grid>\n    <ion-grid [fixed]="true" *ngIf="activities">\n        <ion-row class="ion-text-center" *ngIf="!activities.data.length">\n            <ion-col size-md="8" offset-md="2" size="12">\n                <ion-row class="ion-no-margin">\n                    <ion-col class="ion-text-center">\n                        <img width="300px" [src]="isTimeout?maintenanceImg:\'https://img1.digitallocker.gov.in/assets/img/icons/no-activity-1.svg\'" alt="No Activity">\n                    </ion-col>\n                </ion-row>\n                <ion-row class="ion-no-margin" *ngIf="isTimeout">\n                    <ion-col class="ion-text-center">\n                        <ion-text color="dark" class="ion-margin-top">\n                            <h1>{{\'maintenance\' | translate}}</h1>\n                        </ion-text>\n                        <ion-text class="cursor ion-margin-top" color="tertiary" routerLink="/home" routerDirection="root">\n                            <h1>Go to Home</h1>\n                        </ion-text>\n                    </ion-col>\n                </ion-row>\n                <ion-row class="ion-no-margin" *ngIf="!isTimeout">\n                    <ion-col class="ion-text-center">\n                        <ion-text color="dark" class=" ion-text-center">\n                            <h1>{{"There is no activity yet" | translate}}...</h1>\n                        </ion-text>\n                        <ion-text class="ion-text-center ion-text-wrap">\n                            <h3>{{\'noActivityText\' | translate}}</h3>\n                        </ion-text>\n                        <ion-title class="ion-text-center ion-margin-top">\n                            <ion-button class="text-center" routerLink="/dashboard">{{\'Browse Documents\' | translate}}</ion-button>\n                        </ion-title>\n                    </ion-col>\n                </ion-row>\n            </ion-col>\n        </ion-row>\n        <ion-row *ngIf="activities.data.length">\n            <ion-col>\n                <div *ngFor="let act of activities.data;index as i">\n                    <ion-card mode="ios" *ngIf="act.message" class="ion-no-margin ion-margin-bottom ">\n\n                        <ion-card-content class="ion-no-padding">\n                            <ion-item lines="none">\n                                <ion-icon color="{{(act.type==\'oauth_unlink\')?\'warning\':(act.type==\'uri_deleted\')?\'danger\':(act.type==\'uri_saved\')?\'success\':(act.type==\'file_created\')?\'success\':(act.type==\'file_deleted\')?\'danger\':(act.type==\'oauth_link\')?\'primary\':\'dark\'}}" name="{{(act.type==\'uri_deleted\')?\'remove-circle-outline\':(act.type==\'uri_saved\')?\'add-circle-outline\':(act.type==\'file_created\')?\'arrow-up-circle-outline\':(act.type==\'file_deleted\')?\'remove-circle-outline\':(act.type==\'file_esigned\')?\'ribbon-outline\':(act.type==\'file_changed\')?\'create-outline\':(act.type==\'oauth_link\')?\'link-outline\':(act.type==\'oauth_unlink\')?\'unlink-outline\':\'information-circle-outline\'}}"></ion-icon>\n                                <ion-label class="ion-padding-start">\n                                    <ion-text> {{replaceRegex(act.message)}} <br> <small> {{act.date | date:\'dd-MM-YYYY\'}}</small> <small> {{act.date | date:\'HH:mm\'}}</small></ion-text>\n                                </ion-label>\n\n\n                            </ion-item>\n\n                        </ion-card-content>\n                    </ion-card>\n                </div>\n            </ion-col>\n        </ion-row>\n        <ion-row *ngIf="activities.count">\n            <ion-col>\n                <ion-buttons class="ion-float-end">\n                    <ion-button *ngIf="currentPage>1" (click)="getActivities(currentPage-1)">\n                        Prev\n                    </ion-button>\n                    <ion-button *ngIf="currentPage>1" (click)="getActivities(1)">\n                        Start\n                    </ion-button>\n                    <ion-button *ngIf="activities.count > currentPage" (click)="getActivities(currentPage+1)">\n                        Next\n                    </ion-button>\n                    <ion-button *ngIf="activities.count > currentPage" (click)="getActivities(activities.count)">\n                        Last\n                    </ion-button>\n                </ion-buttons>\n            </ion-col>\n        </ion-row>\n    </ion-grid>\n    <ion-grid [fixed]="true" *ngIf="!activities">\n        <ion-list>\n            <ion-card mode="ios" class="ion-no-margin ion-margin-bottom " *ngFor="let act of [].constructor(10);">\n                <ion-card-content class="ion-no-padding">\n                    <ion-item lines="none">\n                        <ion-icon name="ellipse" color="medium"></ion-icon>\n                        <ion-label class="ion-padding-start">\n                            <ion-skeleton-text animated style="width: 100%;"></ion-skeleton-text>\n                            <small><ion-skeleton-text animated style="width: 30%;"></ion-skeleton-text></small>\n                        </ion-label>\n                    </ion-item>\n                </ion-card-content>\n            </ion-card>\n        </ion-list>\n    </ion-grid>\n</ion-content>'},EuA5:function(n,t,i){"use strict";i.r(t),t.default=".item.sc-ion-label-ios-h,\n.item .sc-ion-label-ios-h {\n  text-overflow: unset;\n  white-space: unset;\n  overflow: auto;\n}"}}]);